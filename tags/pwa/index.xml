<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pwa on Debug客栈</title><link>https://blog.debuginn.com/tags/pwa/</link><follow_challenge><feedId>41458948890269701</feedId><userId>55093859933428736</userId></follow_challenge><description>Recent content in Pwa on Debug客栈</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 18 Mar 2022 14:56:17 +0800</lastBuildDate><atom:link href="https://blog.debuginn.com/tags/pwa/index.xml" rel="self" type="application/rss+xml"/><item><title>PWA 渐进式Web应用程序</title><link>https://blog.debuginn.com/p/web-pwa-program/</link><pubDate>Fri, 18 Mar 2022 14:56:17 +0800</pubDate><guid>https://blog.debuginn.com/p/web-pwa-program/</guid><description>&lt;img src="https://webp.debuginn.com/202303181458725.png" alt="Featured image of post PWA 渐进式Web应用程序" /&gt;&lt;h2 id="简介"&gt;&lt;a href="#%e7%ae%80%e4%bb%8b" class="header-anchor"&gt;&lt;/a&gt;简介
&lt;/h2&gt;&lt;p&gt;PWA是&lt;code&gt;Progressive Web App&lt;/code&gt;的简称，是谷歌提出的新型Web技术，并由W3C及谷歌来推广这项技术，其主要目的是为了提升用户对网站原生使用体验，同时又能节省对网站的开启速度。&lt;/p&gt;
&lt;p&gt;在我们国内，类似于PWA的技术可以简单地理解为微信主导的小程序，不过小程序的使用需要进行微信小程序前端重构开发，而渐进式Web应用程序开发只需要运用现代Web API以及传统渐进式式策略来构建网站的方式。&lt;/p&gt;
&lt;h2 id="特点"&gt;&lt;a href="#%e7%89%b9%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;特点
&lt;/h2&gt;&lt;p&gt;由于这项技术是谷歌提出的，目前谷歌系的浏览器都支持PWA， 官方说有三个特点，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可靠 - 即使在不稳定的网络环境下，也能瞬间加载并展现&lt;/li&gt;
&lt;li&gt;体验 - 快速响应，并且有平滑的动画响应用户的操作&lt;/li&gt;
&lt;li&gt;粘性 - 像设备上的原生应用，具有沉浸式的用户体验，用户可以添加到桌面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而我感觉使用这个技术最大的特点就是将网站缓存下来，开启网站只需要0.3秒之内，使得网站加载速度异常地快，同时对用户非常友好，增添其用户交互性。&lt;/p&gt;
&lt;h2 id="应用"&gt;&lt;a href="#%e5%ba%94%e7%94%a8" class="header-anchor"&gt;&lt;/a&gt;应用
&lt;/h2&gt;&lt;p&gt;近期对网站进行了PWA升级，只是用一个简单的插件就实现了对网站的APP转化，在开启我的网站的同时，在搜索栏会有加号提醒添加至桌面，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181459154.png"
loading="lazy"
alt="PWA在Chrome表现"
&gt;&lt;/p&gt;
&lt;p&gt;若是对我的网站感兴趣，可以点击按钮安装PWA，不用安装APP即可获取本站服务，若是手机用户可以在出现的将此页面发送至桌面来进行订阅。&lt;/p&gt;
&lt;h2 id="功能"&gt;&lt;a href="#%e5%8a%9f%e8%83%bd" class="header-anchor"&gt;&lt;/a&gt;功能
&lt;/h2&gt;&lt;h3 id="离线和缓存"&gt;&lt;a href="#%e7%a6%bb%e7%ba%bf%e5%92%8c%e7%bc%93%e5%ad%98" class="header-anchor"&gt;&lt;/a&gt;离线和缓存
&lt;/h3&gt;&lt;h4 id="service-worker"&gt;&lt;a href="#service-worker" class="header-anchor"&gt;&lt;/a&gt;Service Worker
&lt;/h4&gt;&lt;p&gt;这项技术主要是解决JS单线程问题，为了减少对浏览器网页开启峰值，页面加载问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器中的 javaScript 都是运行在一个单一主线程上的，在同一时间内只能做一件事情。随着 Web 业务不断复杂，我们逐渐在 js 中加了很多耗资源、耗时间的复杂运算过程，这些过程导致的性能问题在 WebApp 的复杂化过程中更加凸显出来。
什么是 Service Worker&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Service Worker 有以下功能和特性：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个独立的 worker 线程，独立于当前网页进程，有自己独立的 worker context。&lt;/li&gt;
&lt;li&gt;一旦被 install，就永远存在，除非被手动 unregister&lt;/li&gt;
&lt;li&gt;用到的时候可以直接唤醒，不用的时候自动睡眠&lt;/li&gt;
&lt;li&gt;可编程拦截代理请求和返回，缓存文件，缓存的文件可以被网页进程取到（包括网络离线状态）&lt;/li&gt;
&lt;li&gt;离线内容开发者可控&lt;/li&gt;
&lt;li&gt;能向客户端推送消息&lt;/li&gt;
&lt;li&gt;不能直接操作 DOM&lt;/li&gt;
&lt;li&gt;必须在 HTTPS 环境下才能工作&lt;/li&gt;
&lt;li&gt;异步实现，内部大都是通过 Promise 实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="web存储"&gt;&lt;a href="#web%e5%ad%98%e5%82%a8" class="header-anchor"&gt;&lt;/a&gt;Web存储
&lt;/h4&gt;&lt;p&gt;选择正确的存储机制对于本地设备存储和基于云的服务器存储都非常重要。 良好的存储引擎可确保以可靠的方式保存信息，并减少带宽和提升响应能力。正确的存储缓存策略是实现离线移动网页体验的核心构建基块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;存储分类&lt;/strong&gt;分为：数据模型、持久化、浏览器支持、事务处理、同步/异步。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182235281.png"
loading="lazy"
alt="缓存策略"
&gt;&lt;/p&gt;
&lt;h3 id="强黏贴用户"&gt;&lt;a href="#%e5%bc%ba%e9%bb%8f%e8%b4%b4%e7%94%a8%e6%88%b7" class="header-anchor"&gt;&lt;/a&gt;强黏贴用户
&lt;/h3&gt;&lt;h4 id="将站点添加至屏幕"&gt;&lt;a href="#%e5%b0%86%e7%ab%99%e7%82%b9%e6%b7%bb%e5%8a%a0%e8%87%b3%e5%b1%8f%e5%b9%95" class="header-anchor"&gt;&lt;/a&gt;将站点添加至屏幕
&lt;/h4&gt;&lt;p&gt;为了吸引并留住用户，不仅仅自己网站需要比较高质量的文章，良好的交互，还需要一些营销手段增强网站的曝光度，提升与用户的交互。&lt;/p&gt;
&lt;p&gt;如果用户对你的网站比较感兴趣，最好的方式将站点添加到主屏幕，不但可以省去用户开启浏览器的操作，提高其转化率，这样就可以对用户强黏贴了。&lt;/p&gt;
&lt;h4 id="消息通知"&gt;&lt;a href="#%e6%b6%88%e6%81%af%e9%80%9a%e7%9f%a5" class="header-anchor"&gt;&lt;/a&gt;消息通知
&lt;/h4&gt;&lt;p&gt;使用 service worker 的功能之一：通知 (notification)，它允许服务器向用户提示一些信息，并根据用户不同的行为进行一些简单的处理。&lt;/p&gt;
&lt;h3 id="用户自动登录"&gt;&lt;a href="#%e7%94%a8%e6%88%b7%e8%87%aa%e5%8a%a8%e7%99%bb%e5%bd%95" class="header-anchor"&gt;&lt;/a&gt;用户自动登录
&lt;/h3&gt;&lt;p&gt;账户是网站必不可少的组成部分。账户体系的存在，可以让网站给用户提供分级服务，同时网站也能够通过收集用户行为实现精准推送。但账号的存在将使得用户不得不多出一步登录的步骤，要知道根据“漏斗模型”理论，从起点到终点，每个环节都会产生用户的流失，依次递减。因此想办法省去烦人的账号密码输入过程，不但能提高用户体验，也能够提高网站转化率。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记住网站传统密码形式；&lt;/li&gt;
&lt;li&gt;凭证管理，第三方登陆验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="网络安全"&gt;&lt;a href="#%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8" class="header-anchor"&gt;&lt;/a&gt;网络安全
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Web安全；&lt;/li&gt;
&lt;li&gt;使用SSL 即 Https；&lt;/li&gt;
&lt;li&gt;同源策略；&lt;/li&gt;
&lt;li&gt;典型的安全漏洞；&lt;/li&gt;
&lt;li&gt;CSP（内容安全策略）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细内容请移步查看：https://lavas.baidu.com/pwa/web-security/introduction&lt;/p&gt;
&lt;h2 id="参考文章"&gt;&lt;a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%ab%a0" class="header-anchor"&gt;&lt;/a&gt;参考文章
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;什么是PWA | PWA 文档| Lavas&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://juejin.im/post/5a6c86e451882573505174e7" target="_blank" rel="noopener"
&gt;简单介绍一下Progressive Web App(PWA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://developer.mozilla.org/zh-CN/docs/Web/Progressive_web_apps" target="_blank" rel="noopener"
&gt;渐进式Web 应用（PWA） | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://segmentfault.com/a/1190000012353473" target="_blank" rel="noopener"
&gt;讲讲PWA - 前端学习- SegmentFault 思否&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://developers.google.com/web/progressive-web-apps/" target="_blank" rel="noopener"
&gt;Progressive Web Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>