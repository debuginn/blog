<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Faas on Debug客栈</title><link>https://blog.debuginn.com/tags/faas/</link><follow_challenge><feedId>41458948890269701</feedId><userId>55093859933428736</userId></follow_challenge><description>Recent content in Faas on Debug客栈</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 15 Feb 2023 09:57:00 +0800</lastBuildDate><atom:link href="https://blog.debuginn.com/tags/faas/index.xml" rel="self" type="application/rss+xml"/><item><title>FAAS 调研笔记</title><link>https://blog.debuginn.com/p/faas-notes/</link><pubDate>Wed, 15 Feb 2023 09:57:00 +0800</pubDate><guid>https://blog.debuginn.com/p/faas-notes/</guid><description>&lt;img src="https://webp.debuginn.com/202302242145505.jpeg" alt="Featured image of post FAAS 调研笔记" /&gt;&lt;h2 id="faas-是什么"&gt;&lt;a href="#faas-%e6%98%af%e4%bb%80%e4%b9%88" class="header-anchor"&gt;&lt;/a&gt;FAAS 是什么
&lt;/h2&gt;&lt;p&gt;功能即服务 (FAAS) 是一类云计算服务，它提供了一个平台，允许客户开发、运行和管理应用程序功能，而 &lt;strong&gt;无需构建和维护通常与开发和启动应用程序相关的基础设施的复杂性。&lt;/strong&gt; 构建遵循此模型的应用程序是实现“无服务器”体系结构的一种方式，通常在构建微服务应用程序时使用。&lt;/p&gt;
&lt;p&gt;FAAS 最初是由 PiCloud 等各种初创企业在2010年左右提供的。&lt;/p&gt;
&lt;p&gt;AWS Lambda 是大型公共云供应商提供的第一个 FAAS，随后是 Google Cloud Functions、Microsoft Azure Functions、IBM/Apache 2016年的 OpenWhisk (开源)和 2017 年的 Oracle Cloud FN(开源)。&lt;/p&gt;
&lt;p&gt;国内的云厂商近几年也陆续提供 FAAS 产品，有阿里云 Serverless 服务、腾讯云云函数(Serverless Cloud Function，SCF)、华为云函数工作流（FunctionGraph）。&lt;/p&gt;
&lt;h3 id="faas-优点"&gt;&lt;a href="#faas-%e4%bc%98%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;FAAS 优点
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;降低运营成本&lt;/strong&gt;，开发人员不需要对服务器根据流量做规划，将部署平台的能力外包；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;降低开发成本&lt;/strong&gt;，Serverless 是整个应用程序组件商品化的结果，将功能相似的函数解耦，统一提供服务，减少重复建轮子；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展成本&lt;/strong&gt;，Serverless 的架构就是将部署环境外包，水平扩张是完全自动、有弹性，并且有提供方来支持管理的；
&lt;ul&gt;
&lt;li&gt;偶尔的请求，一些提供给运营人员的操作很低频；&lt;/li&gt;
&lt;li&gt;不一致的流量，函数扩容速度远远大于容器扩容速度，高效响应突发流量带来的扩容问题；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运营管理更轻松&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;容器的租户管理使得研发人员无需关心部署系统；&lt;/li&gt;
&lt;li&gt;降低打包和部署的复杂性；&lt;/li&gt;
&lt;li&gt;专注于业务代码，更快的迭代与部署；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="faas-缺点"&gt;&lt;a href="#faas-%e7%bc%ba%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;FAAS 缺点
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;控制权的转移，任何的外包策略，都会将部分的系统控制权移交到维护团队或组织，带来的就是不可控的系统停机、意外限制、成本变化、功能丧失、强制 API 升级等问题；&lt;/li&gt;
&lt;li&gt;多租户问题，多个客户（租户）的多个软件在同一个机器上运行；&lt;/li&gt;
&lt;li&gt;供应商锁定，一旦选择某个供应商或者维护团队，几乎是无法进行迁移的，代码的迁移大概率只能重构；&lt;/li&gt;
&lt;li&gt;安全问题，会增加恶意攻击的剖面，增加攻击成功的可能性；&lt;/li&gt;
&lt;li&gt;没有服务器内状态，持久化的数据无法在容器存储，只能借助第三方存储组件实现 cache；&lt;/li&gt;
&lt;li&gt;测试问题，没有本地环境可以完全模拟云环境；&lt;/li&gt;
&lt;li&gt;调试问题，云环境的调试目前还没有提供优秀的 tools；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="业内-faas-的分支及发展"&gt;&lt;a href="#%e4%b8%9a%e5%86%85-faas-%e7%9a%84%e5%88%86%e6%94%af%e5%8f%8a%e5%8f%91%e5%b1%95" class="header-anchor"&gt;&lt;/a&gt;业内 FAAS 的分支及发展
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;云服务商&lt;/th&gt;
&lt;th&gt;产品&lt;/th&gt;
&lt;th&gt;产品介绍&lt;/th&gt;
&lt;th&gt;使用场景&lt;/th&gt;
&lt;th&gt;客户案例&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;AWS Lambda&lt;/td&gt;
&lt;td&gt;AWS Lambda 是一项无服务器事件驱动型计算服务，该服务使您可以运行几乎任何类型的应用程序或后端服务的代码，而无需预置或管理服务器。&lt;/td&gt;
&lt;td&gt;文件处理； 流处理；Web 应用程序；IoT 后端；移动后端；&lt;/td&gt;
&lt;td&gt;可口可乐 西门子 Netflix Coinbase&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;阿里云&lt;/td&gt;
&lt;td&gt;Serverless 工作流&lt;/td&gt;
&lt;td&gt;Serverless 工作流（Serverless Workflow）是用来协调多个分布式任务执行的全托管 Serverless 云服务，简化开发、运行业务流程需要的任务协调、状态管理和错误处理等繁琐工作。用顺序、分支、并行等方式编排分布式任务，服务按照预设顺序协调任务执行，跟踪任务的状态转换，必要时执行用户定义的重试逻辑，确保工作流顺利完成。&lt;/td&gt;
&lt;td&gt;多媒体文件处理场景；数据处理流水线场景；自动运维场景；解决运维无法可视化的问题；&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Serverless 应用引擎 SAE&lt;/td&gt;
&lt;td&gt;是一个全托管、免运维、高弹性的通用 PaaS 平台。SAE 支持 Spring Boot、Spring Cloud、Dubbo、HSF、Web 应用和 XXL-JOB、ElasticJob 任务的全托管，零改造迁移、无门槛容器化、并提供了开源侧诸多增强能力和企业级高级特性。&lt;/td&gt;
&lt;td&gt;微服务应用托管；弹性扩缩容场景；持续集成与交付；&lt;/td&gt;
&lt;td&gt;贵州酒店集团 视野数科 爱奇艺体育&lt;/td&gt;
&lt;td&gt;类似 side car ，用来管理应用，承接流量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Serverless 容器服务 ASK&lt;/td&gt;
&lt;td&gt;是一款基于阿里云弹性计算基础架构，同时完全兼容 Kubernetes 生态，安全、可靠的容器产品。通过该产品，您无需管理和维护集群即可快速创建 Kubernetes 容器应用，并且根据应用实际使用的 CPU 和内存资源量进行按需付费，从而使您更专注于应用本身，而非运行应用的基础设施。&lt;/td&gt;
&lt;td&gt;应用托管；在线业务弹性阔缩容数据计算 低成本支撑CI/CD任务执行&lt;/td&gt;
&lt;td&gt;图森未来 越光医疗&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;腾讯云&lt;/td&gt;
&lt;td&gt;云函数（Serverless Cloud Function，SCF）&lt;/td&gt;
&lt;td&gt;腾讯云为企业和开发者们提供的无服务器执行环境，帮助您在无需购买和管理服务器的情况下运行代码。您只需使用平台支持的语言编写核心代码并设置代码运行的条件，即可在腾讯云基础设施上弹性、安全地运行代码。云函数是实时文件处理和数据处理等场景下理想的计算平台。&lt;/td&gt;
&lt;td&gt;静态网站托管；构建 RESTful API；部署 Serverless 全栈 Web 应用；Serverless 全景录制方案；&lt;/td&gt;
&lt;td&gt;腾讯视频 新东方 微信阅 腾讯教育 腾讯相册 百视通 猎豹移动&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;API网关&lt;/td&gt;
&lt;td&gt;腾讯云 API 网关（API Gateway）是腾讯云推出的一种 API 托管服务，能提供 API 的完整生命周期管理，包括创建、维护、发布、运行、下线等。&lt;/td&gt;
&lt;td&gt;Serverless HTTP；微服务整合；外部多端统一；业务整合；能力提供及售卖；&lt;/td&gt;
&lt;td&gt;人人视频 江娱互动 腾讯视频 英孚教育&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="内部原理"&gt;&lt;a href="#%e5%86%85%e9%83%a8%e5%8e%9f%e7%90%86" class="header-anchor"&gt;&lt;/a&gt;内部原理
&lt;/h2&gt;&lt;h3 id="faas-方向"&gt;&lt;a href="#faas-%e6%96%b9%e5%90%91" class="header-anchor"&gt;&lt;/a&gt;FAAS 方向
&lt;/h3&gt;&lt;h4 id="运行架构"&gt;&lt;a href="#%e8%bf%90%e8%a1%8c%e6%9e%b6%e6%9e%84" class="header-anchor"&gt;&lt;/a&gt;运行架构
&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;常规的一个服务在容器中启动的流程&lt;/th&gt;
&lt;th&gt;FAAS 调用启动流程&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://webp.debuginn.com/202302242209329.png"
loading="lazy"
&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://webp.debuginn.com/202302242210349.png"
loading="lazy"
&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在传统的服务启动或者是容器化的服务进行启动的是否，都是服务跟随者对应的平台（巨石架构的物理机器或者微服务化的 k8s 容器）的启动而启动，整个生命周期在 pod 的启动开始，在 pod 的关机下线操作结束，整个周期是比较长的，同时必须有实例存活（至少一台）来承接响应，研发人员除了需要关注自己的开发 code，还需要关注容器的大小、容量、数量等运维指标；&lt;/li&gt;
&lt;li&gt;Serverless 中的 FAAS 将研发人员最重要的业务逻辑抽离了出来，除了这部分需要去管理升级，剩下的都交由 FAAS 提供平台来提供服务，托管后的 FAAS 生命周期从 pod 的启动关机简化到了 执行函数 handler 的 init 以及执行函数时间，并且在一些低频的业务中，一些函数实例可以交由 FAAS 提供服务商进行回收，甚至在某些时间不起函数实例，当有事件进来之后在执行函数初始化及执行逻辑（因为函数初始化到可以服务的启动时间在 100ms 左右，当然不同语言以及不同的服务提供方的实现会影响这里的启动时间）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="架构分层"&gt;&lt;a href="#%e6%9e%b6%e6%9e%84%e5%88%86%e5%b1%82" class="header-anchor"&gt;&lt;/a&gt;架构分层
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302242211864.png"
loading="lazy"
alt="架构分层"
&gt;&lt;/p&gt;
&lt;p&gt;其实理解起来比较简单，可以理解成我们的代码已经是与 PAAS 平台进行强解耦的结果了，我们的代码就是一部电视剧，一个操作系统安装了指定的视频播放器就可以播放我们的电视剧了，同理，我们现在只需要关心我们的函数内业务代码逻辑的定义，只要接口定义的按照封装平台的要求来开发即可，我们不需要关心运行的环境及系统，由于 runtime 已经到了 func 级别，热更新代码以及启动服务都是快速可以响应的。&lt;/p&gt;
&lt;h3 id="mesh-方向"&gt;&lt;a href="#mesh-%e6%96%b9%e5%90%91" class="header-anchor"&gt;&lt;/a&gt;Mesh 方向
&lt;/h3&gt;&lt;p&gt;综上，若 FAAS 代表着是“无服务器”架构的话，其实 Service Mesh 严格意义上不能称为是“无服务器”架构，它并不能将容器部署与代码部署隔离开，只是在服务响应中增加了一层代理，用来控制应用程序中服务请求的传递，可以使得服务到服务的通讯快速、可靠和安全。&lt;/p&gt;
&lt;h4 id="运行架构-1"&gt;&lt;a href="#%e8%bf%90%e8%a1%8c%e6%9e%b6%e6%9e%84-1" class="header-anchor"&gt;&lt;/a&gt;运行架构
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302242212468.png"
loading="lazy"
alt="运行架构"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简化微服务和容器中服务之间的通信；&lt;/li&gt;
&lt;li&gt;更容易的诊断通讯错误，发生在自己的基础设施层上；&lt;/li&gt;
&lt;li&gt;支持加密、认证和授权等安全特性；&lt;/li&gt;
&lt;li&gt;允许更快地开发、测试和部署应用程序；&lt;/li&gt;
&lt;li&gt;放置在容器集群的边车代理可以有效的管理网络服务；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;运行时实例通过使用服务网格而增加；&lt;/li&gt;
&lt;li&gt;每次服务的调用都要经过 sidecar proxy；&lt;/li&gt;
&lt;li&gt;没有解决与其他服务或者系统的集成，以及路由类型或转换的映射；&lt;/li&gt;
&lt;li&gt;网格管理的复杂性被抽象化和集中化；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="架构分层-1"&gt;&lt;a href="#%e6%9e%b6%e6%9e%84%e5%88%86%e5%b1%82-1" class="header-anchor"&gt;&lt;/a&gt;架构分层
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302242213329.png"
loading="lazy"
alt="架构分层"
&gt;&lt;/p&gt;
&lt;p&gt;将调用限流、熔断、安全、服务注册与发现、服务管理等非业务逻辑的功能全部都放到 Sidecar 中去，&lt;strong&gt;本质上是一个管理性质进程在管理着业务逻辑性质的进程&lt;/strong&gt;，进程之间的通讯使用的是 UDC(Unix domain socket)。&lt;/p&gt;
&lt;h2 id="reference"&gt;&lt;a href="#reference" class="header-anchor"&gt;&lt;/a&gt;Reference
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://en.wikipedia.org/wiki/Function_as_a_service" target="_blank" rel="noopener"
&gt;https://en.wikipedia.org/wiki/Function_as_a_service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://serverless.aliyun.com/" target="_blank" rel="noopener"
&gt;https://serverless.aliyun.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://cloud.tencent.com/product/scf" target="_blank" rel="noopener"
&gt;https://cloud.tencent.com/product/scf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.huaweicloud.com/product/functiongraph.html" target="_blank" rel="noopener"
&gt;https://www.huaweicloud.com/product/functiongraph.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://martinfowler.com/articles/serverless.html" target="_blank" rel="noopener"
&gt;https://martinfowler.com/articles/serverless.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://aws.amazon.com/cn/lambda/" target="_blank" rel="noopener"
&gt;https://aws.amazon.com/cn/lambda/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://time.geekbang.org/column/article/226574" target="_blank" rel="noopener"
&gt;https://time.geekbang.org/column/article/226574&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.techtarget.com/searchitoperations/definition/service-mesh" target="_blank" rel="noopener"
&gt;https://www.techtarget.com/searchitoperations/definition/service-mesh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.zhaohuabing.com/2018/03/29/what-is-service-mesh-and-istio/" target="_blank" rel="noopener"
&gt;https://www.zhaohuabing.com/2018/03/29/what-is-service-mesh-and-istio/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>