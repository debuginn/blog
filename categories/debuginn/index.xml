<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debuginn on Debug客栈</title><link>https://blog.debuginn.com/categories/debuginn/</link><follow_challenge><feedId>41458948890269701</feedId><userId>55093859933428736</userId></follow_challenge><description>Recent content in Debuginn on Debug客栈</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 23 Aug 2025 15:45:00 +0800</lastBuildDate><atom:link href="https://blog.debuginn.com/categories/debuginn/index.xml" rel="self" type="application/rss+xml"/><item><title>免费无版权图片素材网站推荐</title><link>https://blog.debuginn.com/p/free-photo/</link><pubDate>Sat, 23 Aug 2025 15:45:00 +0800</pubDate><guid>https://blog.debuginn.com/p/free-photo/</guid><description>&lt;img src="https://webp.debuginn.com/202508227vzV8r.jpg" alt="Featured image of post 免费无版权图片素材网站推荐" /&gt;&lt;p&gt;大家好呀，我是 Meng小羽，在 21 年的时候我就做过一期分享，就是关于无版权免费图片网站推荐的文章，但是后来由于博客搬家丢失了这个文章，为了大家便于后续查找无版权免费图片素材，特地给大家再次分享一下。&lt;/p&gt;
&lt;h2 id="unsplash"&gt;&lt;a href="#unsplash" class="header-anchor"&gt;&lt;/a&gt;Unsplash
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814XRv15X.jpg"
loading="lazy"
alt="Unsplash"
&gt;&lt;/p&gt;
&lt;p&gt;Unsplash 是一个免费的图片分享网站，允许用户上传和下载高质量的、可免费用于商业和非商业用途的照片。摄影师可以将自己的照片上传到Unsplash，经过整理后供其他用户免费下载和使用。Unsplash 提供了大量的、不同主题和风格的图片，并且对图片的使用没有版权限制，无需署名。&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://unsplash.com" target="_blank" rel="noopener"
&gt;https://unsplash.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="pixabay"&gt;&lt;a href="#pixabay" class="header-anchor"&gt;&lt;/a&gt;Pixabay
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814spb8tV.jpg"
loading="lazy"
alt="Pixabay"
&gt;&lt;/p&gt;
&lt;p&gt;Pixabay 是一个免费图片、视频、插图和音乐素材网站，提供海量可免费下载和使用的资源，适用于商业和个人项目。Pixabay 上的内容遵循 Pixabay 许可证，类似于知识共享协议，用户可以免费使用、修改和分发这些素材，无需支付版税或标明出处。&lt;/p&gt;
&lt;p&gt;官网地址：https://pixabay.com/zh/&lt;/p&gt;
&lt;h2 id="hippopx"&gt;&lt;a href="#hippopx" class="header-anchor"&gt;&lt;/a&gt;Hippopx
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814c8wVIM.jpg"
loading="lazy"
alt="Hippopx"
&gt;&lt;/p&gt;
&lt;p&gt;Hippopx 是一个提供免费、免版权图片的图库网站。它收录了超过20万张以上，且质量很高的授权照片。用户可以免费下载这些图片，用于各种商业用途，比如制作PPT背景、电脑桌面，或是作为设计素材。Hippopx 还提供多语言接口，包括中文，方便用户搜索和使用。&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://www.hippopx.com/zh/" target="_blank" rel="noopener"
&gt;https://www.hippopx.com/zh/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="negative-space"&gt;&lt;a href="#negative-space" class="header-anchor"&gt;&lt;/a&gt;Negative Space
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814VyKs8b.jpg"
loading="lazy"
alt="Negative"
&gt;&lt;/p&gt;
&lt;p&gt;Negative Space 是一个提供免费高品质图片的网站。它旨在为摄影师提供一个分享作品的平台，并提供给用户免费下载和使用的优质图片资源。&lt;/p&gt;
&lt;p&gt;图片涵盖了生活、旅游、商务、美食、工业、技术、环境等多个主题。&lt;/p&gt;
&lt;p&gt;Negative Space 的核心理念是“留白”，即在设计中，用空白区域来突出图像、文字或其他元素，从而提升视觉效果和用户体验。网站上的图片可以免费下载和使用，这使得它成为设计师、博主、以及任何需要高质量图片的人的理想选择。&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://negativespace.co" target="_blank" rel="noopener"
&gt;https://negativespace.co&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="vecteezy"&gt;&lt;a href="#vecteezy" class="header-anchor"&gt;&lt;/a&gt;Vecteezy
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814uMrGOP.jpg"
loading="lazy"
alt="Vecteezy"
&gt;&lt;/p&gt;
&lt;p&gt;Vecteezy 是一个提供免费和付费矢量图、照片、视频和设计模板等创意素材的在线平台。它为设计师和创意人员提供了一个丰富的资源库，涵盖了各种主题和风格，包括插图、图标、背景等，并且支持在线编辑和定制。&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://www.vecteezy.com" target="_blank" rel="noopener"
&gt;https://www.vecteezy.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="freerange"&gt;&lt;a href="#freerange" class="header-anchor"&gt;&lt;/a&gt;Freerange
&lt;/h2&gt;&lt;p&gt;Freerange Stock 是一个提供免费高分辨率图片素材下载的网站。该网站的图片素材来源多样，包括内部摄影、用户提交以及其他渠道。Freerange Stock 上的图片可供免费下载和使用，适用于各种创意项目，甚至可以用于商业用途，具体取决于所使用的许可证。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814VNngkP.jpg"
loading="lazy"
alt="Freerange"
&gt;&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://freerangestock.com" target="_blank" rel="noopener"
&gt;https://freerangestock.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="colorhub"&gt;&lt;a href="#colorhub" class="header-anchor"&gt;&lt;/a&gt;Colorhub
&lt;/h2&gt;&lt;p&gt;Colorhub 是一个提供免费高清无版权图片资源的网站。它收录了大量高质量图片，并支持中文关键词和颜色搜索，方便用户查找所需素材。此外，Colorhub 还提供图片联想功能，可以找到与指定图片相似的图片资源。﻿&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814CJuBol.jpg"
loading="lazy"
alt="Colorhub"
&gt;&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://colorhub.me" target="_blank" rel="noopener"
&gt;https://colorhub.me&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="google-photo"&gt;&lt;a href="#google-photo" class="header-anchor"&gt;&lt;/a&gt;Google Photo
&lt;/h2&gt;&lt;p&gt;谷歌图片，选择 “工具” -&amp;gt; “知识共享许可” -&amp;gt; “知识共享许可” 即可搜索你想搜索的无版权图片。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814ICfA1v.jpg"
loading="lazy"
alt="Google"
&gt;&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://www.google.com" target="_blank" rel="noopener"
&gt;https://www.google.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="ai"&gt;&lt;a href="#ai" class="header-anchor"&gt;&lt;/a&gt;AI
&lt;/h2&gt;&lt;p&gt;其实现在 AI 比较火的就是制作图片或者视频，目前并没有明确生成的图片版权问题，可以放心使用，但是需要注意生成的视频与一些申请版权专利的 IP 冲突。&lt;/p&gt;
&lt;p&gt;国内的豆包，国外的 ChatGPT、Grok 等 AI 支持多模态生成的均可以生成图片，目前由于算力成本有次数限制。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250814kX78Yx.jpg"
loading="lazy"
alt="ChatGPT"
&gt;&lt;/p&gt;
&lt;p&gt;好了，今天给大家推荐这几个网站，另外希望你可以把你经常使用的无版权免费网站分享到评论区，让我们一起变得更强～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>首场 Trae Meetup， 国产 AI IDE 有着不一样的思路</title><link>https://blog.debuginn.com/p/meetup-trae/</link><pubDate>Sun, 17 Aug 2025 12:00:00 +0800</pubDate><guid>https://blog.debuginn.com/p/meetup-trae/</guid><description>&lt;img src="https://webp.debuginn.com/20250817gogbTv.JPG" alt="Featured image of post 首场 Trae Meetup， 国产 AI IDE 有着不一样的思路" /&gt;&lt;h2 id="序"&gt;&lt;a href="#%e5%ba%8f" class="header-anchor"&gt;&lt;/a&gt;序
&lt;/h2&gt;&lt;p&gt;大家好呀，我是 Meng小羽，今天报名参加了国产 AI 智能编辑器 Trae 的首次线下分享会，今天上午还遇到了一个趣事，一直追番的《凡人修仙传》迎来了韩立的结婴一集，其神识（热度）之强大把哔哩哔哩都整崩了，还把微博也整降级了。本次参加 Meetup，最主要的是想了解 Trae IDE 的发展历程以及后续的开发计划，当然最主要的是 SOLO 模式。&lt;/p&gt;
&lt;h2 id="天猪--trae-发展历程及-solo-模式"&gt;&lt;a href="#%e5%a4%a9%e7%8c%aa--trae-%e5%8f%91%e5%b1%95%e5%8e%86%e7%a8%8b%e5%8f%8a-solo-%e6%a8%a1%e5%bc%8f" class="header-anchor"&gt;&lt;/a&gt;天猪 / Trae 发展历程及 SOLO 模式
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817UreGjl.JPG"
loading="lazy"
alt="天猪"
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作为 Trae IDE 核心开发者，天猪从系统架构与迭代历程入手，梳理并回顾了 Trae IDE 的发展里程碑，包括 2024 年 Trae 上线、2025 年国内外版本发布，以及月活跃用户突破 100 万的关键节点。同时，他阐述了 AI Coding 的三个阶段（辅助编程、结对编程、自主编程），以及 Trae Agent 的架构演进和 SOLO 模式的协作创新。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817f9BfvH.jpg"
loading="lazy"
alt="架构迭代"
&gt;&lt;/p&gt;
&lt;p&gt;目前，大部分的公司云端容器还停留在微服务或者微服务到 Faas 过渡的时期，23 年我还做过 FaaS 相关技术的调研：&lt;a class="link" href="https://blog.debuginn.com/p/faas-notes/" &gt;FAAS 调研笔记&lt;/a&gt;，设计思路非常的先进，但是需要大量的技术基础能力的建设与迭代，至今我的工作环境大部分还是在微服务阶段，同时 JDK 1.8 似乎是每一个开发者和公司跳不出的大山。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817o60BKc.jpg"
loading="lazy"
alt="Trae"
&gt;&lt;/p&gt;
&lt;p&gt;24 年，随着 Idea 辅助编程插件的火热，市场也如雨后春笋冒了出来，一线大厂都推出了自己的辅助编程软件，同样我司 AI 开发团队也推出了相应的工具，这个阶段更可以理解为智能提示 Plus 版本 + AI 集成环境。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817skVFbk.jpg"
loading="lazy"
alt="Trae"
&gt;&lt;/p&gt;
&lt;p&gt;成为坚定的 Trae 重度使用用户是因为 Trae IDE 简洁大方的 UI 设计，不知道大家有没有同感，VSCode 和 Cursor 的 UI 设计实在是有些粗糙，Trae 的设计首先从 UI 上就给我带来简洁如 Idea，简约而不简单的感觉，也是我果断放弃使用 VSCode 的一个重大原因，初期，在使用 AI 模型相关辅助编程中，所有的 IDE，除了 Cursor ，基本上智商都处在一个水平。Trae 作为后起之秀，随着模型理解能力的越来越强大加上 Trae 提示及其适配优化的越来越专业，在使用上也逐步媲美 Cursor。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817GMxwVr.jpg"
loading="lazy"
alt="1"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817P9dbd4.jpg"
loading="lazy"
alt="2"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817wN1gD3.jpg"
loading="lazy"
alt="3"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817dSOUM1.jpg"
loading="lazy"
alt="SOLO"
&gt;&lt;/p&gt;
&lt;p&gt;SOLO 模式与 Cursor 和其他众多的 AI IDE 不一样的是，他是从 AI 辅助 IDE，进化成了 AI 主导 IDE，这种设计模式将 Code、Tools、MCP 、浏览器等众多服务变成了为 AI 服务的对象，AI 的角色变成了开发工程师，而开发的角色转变成为了产品经理，通过对话，直接一步到位呈现效果，降低了一个 Idea 转变为产品的成本，但是这种模式也非常考验模型的理解能力与协调能力。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817rzKZdJ.jpg"
loading="lazy"
alt="SOLO"
&gt;&lt;/p&gt;
&lt;h2 id="江波--trae-cue-功能设计与挑战"&gt;&lt;a href="#%e6%b1%9f%e6%b3%a2--trae-cue-%e5%8a%9f%e8%83%bd%e8%ae%be%e8%ae%a1%e4%b8%8e%e6%8c%91%e6%88%98" class="header-anchor"&gt;&lt;/a&gt;江波 / Trae cue 功能设计与挑战
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817tkglaa.jpg"
loading="lazy"
alt="江波"
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;聚焦 TRAE 的智能编程工具 Cue（Context Understanding Engine），介绍了其核心功能，如代码补全、多点编辑和智能导入。他分析了 Cue 面临的三大挑战：用户意图理解（非线性编辑历史导致的意图偏差）、修改位置确定（兼顾可扩展性与速度）、编辑执行（支持复杂编辑与仓库上下文感知）。此外，他分享了近期优化成果，包括时延从 1s 降至 500ms、融合模型升级，以及支持多语言自动导入，未来有支持基于模型的仓库级跳转预测以更多语言扩展的计划。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202508178hFB0q.jpg"
loading="lazy"
alt="cue"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817zKmA9o.jpg"
loading="lazy"
alt="cue"
&gt;&lt;/p&gt;
&lt;p&gt;Cue 功能其实和 Cursor Tab 功能十分的相似，与 Trae SOLO 模式走的是完全相反的两个方向的道路，SOLO 模式目前更像是给轻度技术者快速实现功能的 IDE，而 cue 模式是现在主流 AI IDE 核心增强的能力。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202508178nyTpV.jpg"
loading="lazy"
alt="cue"
&gt;&lt;/p&gt;
&lt;p&gt;cue 功能也面临着 AI 模型版本与理解思维差异的问题，Trae 作为模型整合层，需要不断的适配模型的“个性”来满足用户。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250817UcamMk.jpg"
loading="lazy"
alt="cue"
&gt;&lt;/p&gt;
&lt;p&gt;cue 功能与 Cursor Tab 功能在我们开发中起到了非常重要的作用，开发效率有了质的提升，但是我认为非常有挑战的就是江波分享的一个点，就是 AI 什么时候该接入帮我们写代码，过度的介入会引来开发者的反感，克制的介入同样也会引起开发者对于 AI 能力的质疑，这个度该如何平衡？&lt;/p&gt;
&lt;h2 id="尾"&gt;&lt;a href="#%e5%b0%be" class="header-anchor"&gt;&lt;/a&gt;尾
&lt;/h2&gt;&lt;p&gt;非常有幸报名参加了 Trae 的第一场线下 Meetup，无论是 SOLO 模式还是 cue 功能，对于开发者而言，在我们日常开发中都给我们提供了非常多的便利与效率的提升，Trae IDE 还在高速发展阶段，期待未来可以成为 AI IDE 的顶流产品。&lt;/p&gt;
&lt;p&gt;最后，如果你对我的文章及分享感兴趣的话，欢迎你关注我，让我们一起变得更强～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>送送送，微信红包封面了，速领～</title><link>https://blog.debuginn.com/p/wechat-red-packet-25/</link><pubDate>Sun, 19 Jan 2025 17:22:00 +0800</pubDate><guid>https://blog.debuginn.com/p/wechat-red-packet-25/</guid><description>&lt;img src="https://webp.debuginn.com/20250117gsZv1Z.jpeg" alt="Featured image of post 送送送，微信红包封面了，速领～" /&gt;&lt;h2 id="序"&gt;&lt;a href="#%e5%ba%8f" class="header-anchor"&gt;&lt;/a&gt;序
&lt;/h2&gt;&lt;p&gt;今年给大家制作了 3 个红包主题，分别是&lt;strong&gt;金舞银蛇&lt;/strong&gt;、&lt;strong&gt;博主送福&lt;/strong&gt;、&lt;strong&gt;使我心荡漾&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;2025 年，乙巳蛇年，祝大家新年快乐、心想事成、平平安安、健健康康、发大财～&lt;/p&gt;
&lt;h2 id="金舞银蛇"&gt;&lt;a href="#%e9%87%91%e8%88%9e%e9%93%b6%e8%9b%87" class="header-anchor"&gt;&lt;/a&gt;金舞银蛇
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250119xbYnHz.jpeg"
loading="lazy"
alt="nian"
&gt;&lt;/p&gt;
&lt;p&gt;使用 ChatGPT 生成的“金舞银蛇”，每年我都会生成一个生肖主题的红包封面，希望你喜欢，祝你新春快乐。&lt;/p&gt;
&lt;h2 id="博主送福"&gt;&lt;a href="#%e5%8d%9a%e4%b8%bb%e9%80%81%e7%a6%8f" class="header-anchor"&gt;&lt;/a&gt;博主送福
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20250119fYUwVs.jpeg"
loading="lazy"
alt="debuginn"
&gt;&lt;/p&gt;
&lt;p&gt;第二个红包封面是我公司 AI 小工具基于我的工卡照片生成的卡通形象，希望新的一年，屏幕前的你福气多多，祝你新春快乐。&lt;/p&gt;
&lt;h2 id="使我心荡漾"&gt;&lt;a href="#%e4%bd%bf%e6%88%91%e5%bf%83%e8%8d%a1%e6%bc%be" class="header-anchor"&gt;&lt;/a&gt;使我心荡漾
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202501192wCWs6.jpeg"
loading="lazy"
alt="love"
&gt;&lt;/p&gt;
&lt;p&gt;最后一个红包封面，是我和我家领导的专属红包封面，也希望屏幕前的你，没对象的今年找到自己的天命君子或白雪公主，有对象的可以幸福长长久久，修成正果，祝你新春更快乐。&lt;/p&gt;
&lt;h2 id="尾"&gt;&lt;a href="#%e5%b0%be" class="header-anchor"&gt;&lt;/a&gt;尾
&lt;/h2&gt;&lt;p&gt;由于微信平台限制，只能在微信公众号文章页面内领取，大家可以先关注下微信公众号“&lt;strong&gt;Debug客栈&lt;/strong&gt;”后，发送“&lt;strong&gt;领红包&lt;/strong&gt;“获取。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202248422.png"
loading="lazy"
alt="wechat"
&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>答 《博客作者呀，我想采访你这 9 个问题！》 问卷</title><link>https://blog.debuginn.com/p/answer-anotherdayu/</link><pubDate>Sat, 23 Nov 2024 13:00:00 +0800</pubDate><guid>https://blog.debuginn.com/p/answer-anotherdayu/</guid><description>&lt;img src="https://webp.debuginn.com/20241123YYRL9F.jpeg" alt="Featured image of post 答 《博客作者呀，我想采访你这 9 个问题！》 问卷" /&gt;&lt;h2 id="简单介绍下自己或者你的博客"&gt;&lt;a href="#%e7%ae%80%e5%8d%95%e4%bb%8b%e7%bb%8d%e4%b8%8b%e8%87%aa%e5%b7%b1%e6%88%96%e8%80%85%e4%bd%a0%e7%9a%84%e5%8d%9a%e5%ae%a2" class="header-anchor"&gt;&lt;/a&gt;简单介绍下自己或者你的博客？
&lt;/h2&gt;&lt;p&gt;大家好，我是 &lt;strong&gt;Meng小羽&lt;/strong&gt;，也是 &lt;strong&gt;Debug客栈&lt;/strong&gt; 的博主。这是一个陪伴了我整整八年的博客平台。&lt;/p&gt;
&lt;p&gt;最初创办这个网站时，我只是希望用它来记录大学期间的学习笔记，以及算法竞赛中的刷题心得。随着时间推移，博客逐渐成长为一个涵盖多领域的技术分享平台，内容范围也从单一的技术积累拓展到更多元化的话题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Debug客栈&lt;/strong&gt; 目前已成为一间“全能型的杂货铺”，在这里你可以看到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术积累与分享&lt;/strong&gt;：深入探讨服务端开发、前沿科技等技术内容；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;科技趣闻与产品体验&lt;/strong&gt;：分享数码产品的试用体验与评测；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;热点讨论&lt;/strong&gt;：关注时事，畅谈社会热点与见解；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;好物与软件推荐&lt;/strong&gt;：推荐高效实用的软件和工具，为你的生活和工作增色。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前，我的职业是 &lt;strong&gt;服务端开发工程师&lt;/strong&gt;，专注于系统设计、性能优化以及服务架构相关领域。对于我的更详细介绍，欢迎移步到：&lt;a class="link" href="https://blog.debuginn.com/about/" &gt;关于站长 - Debug客栈&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;感谢你关注 Debug客栈，也期待与大家在这里共同成长，探索更多有趣、有价值的内容！&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241123LGffwe.png"
loading="lazy"
alt="debuginn"
&gt;&lt;/p&gt;
&lt;h2 id="什么契机让你开始写博客"&gt;&lt;a href="#%e4%bb%80%e4%b9%88%e5%a5%91%e6%9c%ba%e8%ae%a9%e4%bd%a0%e5%bc%80%e5%a7%8b%e5%86%99%e5%8d%9a%e5%ae%a2" class="header-anchor"&gt;&lt;/a&gt;什么契机让你开始写博客？
&lt;/h2&gt;&lt;p&gt;我的大学专业是 &lt;strong&gt;计算机科学与技术&lt;/strong&gt;，相比其他同龄人，我较早接触到了互联网的思想。从学习编程开始，我遇到不懂的知识点或问题时，总是习惯通过 Google 搜索相关答案和解题思路。在这个过程中，我逐渐接触到了&lt;strong&gt;个人博客&lt;/strong&gt;这一领域。&lt;/p&gt;
&lt;p&gt;让我印象最深刻的是互联网早期的浪潮，当时人们习惯搭建个人博客，最火的当属新浪博客。而我上大学时，微信公众号迅速崛起，但作为一个计算机相关专业的学生，拥有一个属于自己的主页或站点，不仅能积累知识与技术栈，更是一件非常值得骄傲的事情。&lt;/p&gt;
&lt;p&gt;于是，我开始了自己的博客之旅。从第一篇博文 &lt;a class="link" href="https://blog.debuginn.com/p/sublime-text/" &gt;《Sublime Text：崇高的文本编辑器》&lt;/a&gt; 开始，一发不可收拾。之后，各种学习笔记和竞赛相关的文章便陆续在博客上发表，为我的知识积累之路画上了一笔又一笔精彩的注脚。&lt;/p&gt;
&lt;h2 id="你是如何完成创作的"&gt;&lt;a href="#%e4%bd%a0%e6%98%af%e5%a6%82%e4%bd%95%e5%ae%8c%e6%88%90%e5%88%9b%e4%bd%9c%e7%9a%84" class="header-anchor"&gt;&lt;/a&gt;你是如何完成创作的？
&lt;/h2&gt;&lt;p&gt;最初，我的站点使用的是 &lt;strong&gt;WordPress&lt;/strong&gt;，通过 &lt;strong&gt;LNMP&lt;/strong&gt;（Linux、Nginx、MySQL、PHP）架构进行部署和发布。当时的写作流程很简单：我会先在后台创建好文章标题，根据优先级安排博文的书写，同时反复打磨内容和语言组织。当然，也有不少文章因为各种原因“鸽”了 😄。&lt;/p&gt;
&lt;p&gt;到了 2023 年，我的博客完成了 &lt;a class="link" href="https://blog.debuginn.com/p/debuginn-hugo-blog/" &gt;全站静态化升级&lt;/a&gt;，采用了 &lt;strong&gt;Hugo&lt;/strong&gt; 静态化生成的方式，并部署在 &lt;strong&gt;Cloudflare&lt;/strong&gt; 上。写作工具方面，我曾用 &lt;strong&gt;VSCode&lt;/strong&gt; 写过一段时间的博文，但总感觉不太适合写作，于是转向了 &lt;strong&gt;Obsidian&lt;/strong&gt;。现在，我的流程是：先在 Obsidian 中创建文章标题，完成初稿后再润色一遍，最后复制到 VSCode 进行发布。&lt;/p&gt;
&lt;p&gt;此外，博客内容也会同步发布到微信公众号「&lt;strong&gt;Debug客栈&lt;/strong&gt;」，欢迎关注！&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241123Vio0py.png"
loading="lazy"
alt="obsidian"
&gt;&lt;/p&gt;
&lt;h2 id="运营博客的过程中是否有失去过动力"&gt;&lt;a href="#%e8%bf%90%e8%90%a5%e5%8d%9a%e5%ae%a2%e7%9a%84%e8%bf%87%e7%a8%8b%e4%b8%ad%e6%98%af%e5%90%a6%e6%9c%89%e5%a4%b1%e5%8e%bb%e8%bf%87%e5%8a%a8%e5%8a%9b" class="header-anchor"&gt;&lt;/a&gt;运营博客的过程中是否有失去过动力？
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果有，是为什么恢复的？如果没有，请问您又是如何保持创作的激情？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在运营博客的这 &lt;strong&gt;8年&lt;/strong&gt; 里，我从未想过要放弃。相反，我对折腾充满热情。在这段时间里，我几乎每年都会更换一次博客主题，站点也从动态站点迁移到了静态站点。同时，我始终坚持更新博客文章，虽然 &lt;strong&gt;月更&lt;/strong&gt; 对我来说有点难 😅，但 &lt;strong&gt;季更&lt;/strong&gt; 还是稳稳地保持着。随着时间的推移，我不断提升自己的写作水平，也逐渐积累了一定的影响力。目前，全网关注人数已接近 &lt;strong&gt;2万&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对我来说，博客不仅是一个记录的平台，更是展示技术能力与技术影响力的窗口。作为一名互联网从业者，我始终相信博客的价值：它不仅让我系统性地梳理知识，还帮助我结识了许多志同道合的伙伴。在这个过程中，我持续学习，不断成长。&lt;/p&gt;
&lt;h2 id="如何搭建博客以及运营博客每年需要投入的资金"&gt;&lt;a href="#%e5%a6%82%e4%bd%95%e6%90%ad%e5%bb%ba%e5%8d%9a%e5%ae%a2%e4%bb%a5%e5%8f%8a%e8%bf%90%e8%90%a5%e5%8d%9a%e5%ae%a2%e6%af%8f%e5%b9%b4%e9%9c%80%e8%a6%81%e6%8a%95%e5%85%a5%e7%9a%84%e8%b5%84%e9%87%91" class="header-anchor"&gt;&lt;/a&gt;如何搭建博客，以及运营博客每年需要投入的资金？
&lt;/h2&gt;&lt;p&gt;目前，我的博客搭建既简单又省心，但需要具备一定的编程基础。以下是我发布一篇博文的完整流程，与前面提到的创作步骤有些相似：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;在 Obsidian 书写草稿&lt;/strong&gt;：先完成博文的初步内容；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI 润色与校对&lt;/strong&gt;：使用 AI 工具润色博文，并检查错别字；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上传文章到 GitHub&lt;/strong&gt;：博客文章存储在 GitHub 仓库，我通过 VSCode 将文章上传；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;替换内部超链接&lt;/strong&gt;：在 VSCode 中替换超链接，方便文章内链；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提交代码并合并分支&lt;/strong&gt;：将文章推送到 GitHub 的 dev 分支，随后提交合并到 main 分支；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;触发 Hugo 编译&lt;/strong&gt;：利用 Hugo Actions，将文章生成为静态网页；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部署到 Cloudflare Pages&lt;/strong&gt;：通过 Cloudflare Pages 获取编译好的网页，并全球分发；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;访问文章&lt;/strong&gt;：完成以上步骤后，文章即可通过网站访问。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前采用的部署方式非常经济高效。借助 &lt;strong&gt;GitHub&lt;/strong&gt; 和 &lt;strong&gt;Cloudflare Pages&lt;/strong&gt;，博客仓库的部署额度和全球分发额度完全免费。唯一的开销是域名注册费用，每年在 ¥80 左右，可以说是高性价比的博客运营方案。&lt;/p&gt;
&lt;h2 id="推荐-1-篇你博客中的文章聊聊原因"&gt;&lt;a href="#%e6%8e%a8%e8%8d%90-1-%e7%af%87%e4%bd%a0%e5%8d%9a%e5%ae%a2%e4%b8%ad%e7%9a%84%e6%96%87%e7%ab%a0%e8%81%8a%e8%81%8a%e5%8e%9f%e5%9b%a0" class="header-anchor"&gt;&lt;/a&gt;推荐 1 篇你博客中的文章，聊聊原因
&lt;/h2&gt;&lt;p&gt;今年，我主要围绕两个方向写了一些文章，哈哈，忍不住要推荐给大家：&lt;/p&gt;
&lt;h3 id="技术领域的总结"&gt;&lt;a href="#%e6%8a%80%e6%9c%af%e9%a2%86%e5%9f%9f%e7%9a%84%e6%80%bb%e7%bb%93" class="header-anchor"&gt;&lt;/a&gt;技术领域的总结
&lt;/h3&gt;&lt;p&gt;这一系列文章聚焦于 &lt;strong&gt;Phoenix 并发框架&lt;/strong&gt; 的开发思路，以及我在从 0 到 1 开发框架过程中遇到的问题和解决方案的总结与分享。这个框架已经成功应用到实际业务场景中，非常值得技术爱好者一读！&lt;/p&gt;
&lt;h3 id="rss-阅读软件推荐"&gt;&lt;a href="#rss-%e9%98%85%e8%af%bb%e8%bd%af%e4%bb%b6%e6%8e%a8%e8%8d%90" class="header-anchor"&gt;&lt;/a&gt;RSS 阅读软件推荐
&lt;/h3&gt;&lt;p&gt;最近，我一直在推广一款开源的 RSS 信息订阅软件 - &lt;strong&gt;Follow&lt;/strong&gt;。在我用过的 RSS 软件中，它的交互体验是最友好的，使用起来也非常便捷。我强烈推荐这款工具，带你加入非算法化的信息圈子，掌控属于自己的信息流。&lt;/p&gt;
&lt;p&gt;下面我把这两个系列的文章都整理出来，大家可以根据自己的兴趣挑选阅读：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Phoenix 并发框架系列：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/phoenix-framework-1/" &gt;Phoenix框架 从0到1设计业务并发框架 小米商城产品站革新之路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/phoenix-framework-2/" &gt;Phoenix框架 从0到1设计业务并发框架 怎么组织设计一个框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/phoenix-framework-3/" &gt;Phoenix框架 从0到1设计业务并发框架 并发线程池的核心设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/phoenix-framework-4/" &gt;Phoenix框架 从0到1设计业务并发框架 自动构建有向无循环图设计&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Follow 分享系列：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/follow-app/" &gt;Follow｜下一代的信息浏览器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/follow-app-2/" &gt;Follow ｜下一代信息浏览器 第二弹来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/follow-app-airdrop/" &gt;Follow 给我空投了 1w 代币，可以无限发码啦～&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/debuginn-2023-rss/" &gt;2023 年为何我还在使用 RSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="推荐-1-个你喜欢读的博客聊聊原因"&gt;&lt;a href="#%e6%8e%a8%e8%8d%90-1-%e4%b8%aa%e4%bd%a0%e5%96%9c%e6%ac%a2%e8%af%bb%e7%9a%84%e5%8d%9a%e5%ae%a2%e8%81%8a%e8%81%8a%e5%8e%9f%e5%9b%a0" class="header-anchor"&gt;&lt;/a&gt;推荐 1 个你喜欢读的博客，聊聊原因
&lt;/h2&gt;&lt;p&gt;相信许多热爱冲浪、阅读博客的朋友，都或多或少听说过《&lt;a class="link" href="https://www.ruanyifeng.com/blog/" target="_blank" rel="noopener"
&gt;阮一峰的网络日志&lt;/a&gt;》。还记得 2019 年实习时，那时候地铁通勤网络状况不太好，我用了一周时间，把阮一峰老师的文章从头到尾读了一遍。这些文章涵盖了他对社会问题的看法、基础技术的分享，以及他每周更新的 &lt;strong&gt;《科技爱好者周刊》&lt;/strong&gt; ，让我受益匪浅。&lt;/p&gt;
&lt;p&gt;说到周刊，这也是我每周五的必读内容之一。通过阮老师的周刊，我接触到了许多新奇的想法和科技圈的动态，同时还发现了一些由爱好者分享的优质文章和实用软件。5 年下来，这份周刊始终保持着高质量的内容输出，值得推荐给所有感兴趣的朋友。&lt;/p&gt;
&lt;h2 id="推荐-1-个近期喜欢的事物"&gt;&lt;a href="#%e6%8e%a8%e8%8d%90-1-%e4%b8%aa%e8%bf%91%e6%9c%9f%e5%96%9c%e6%ac%a2%e7%9a%84%e4%ba%8b%e7%89%a9" class="header-anchor"&gt;&lt;/a&gt;推荐 1 个近期喜欢的事物？
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;例如书籍、电影、音乐、工具、软件。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;作为互联网分享者，每个方向都给大家推荐一下吧～&lt;/p&gt;
&lt;h3 id="书籍"&gt;&lt;a href="#%e4%b9%a6%e7%b1%8d" class="header-anchor"&gt;&lt;/a&gt;书籍
&lt;/h3&gt;&lt;p&gt;谈到书籍，不得不给大家推荐下马伯庸老师的《太白金星有点烦》，懂得自然懂，哈哈，佛曰不可说不可说，趁着还可以阅读，推荐给大家，通过这本书，大家也可以了解到社会运转的规律。&lt;/p&gt;
&lt;p&gt;大家也可以阅读下马老师的另外一本书《长安的荔枝》，看看荔枝使怎么博得贵妃笑的。&lt;/p&gt;
&lt;h3 id="电影"&gt;&lt;a href="#%e7%94%b5%e5%bd%b1" class="header-anchor"&gt;&lt;/a&gt;电影
&lt;/h3&gt;&lt;p&gt;《楚门的世界》，最经典的莫过于在剧情中和最后楚门的台词：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good morning, and in case i don&amp;rsquo;t see you, good afternoon, good evening, and good night!
早上好，以防我见不着你，所以下午好，晚上好，晚安！&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;反观楚门的世界，我们又不是无时无刻也活在“楚门的世界”之中呢？&lt;/p&gt;
&lt;h3 id="音乐"&gt;&lt;a href="#%e9%9f%b3%e4%b9%90" class="header-anchor"&gt;&lt;/a&gt;音乐
&lt;/h3&gt;&lt;p&gt;推荐下最近听的比较多也比较震撼的刀郎老师（罗林）的《如是我闻》音乐专辑，其实是佛教中的《金刚经》，刀郎老师谱曲演唱的，一共有 32 品，推荐给大家聆听。&lt;/p&gt;
&lt;h3 id="工具"&gt;&lt;a href="#%e5%b7%a5%e5%85%b7" class="header-anchor"&gt;&lt;/a&gt;工具
&lt;/h3&gt;&lt;p&gt;莫过于笔记工具，也就是我现在书写这篇《答博客作者采访问题》博文的工具，Obsidian。&lt;/p&gt;
&lt;p&gt;Markdown 友好，可以基于 iCloud 跨设备同步，界面 UI 美观且功能强大。&lt;/p&gt;
&lt;h3 id="软件"&gt;&lt;a href="#%e8%bd%af%e4%bb%b6" class="header-anchor"&gt;&lt;/a&gt;软件
&lt;/h3&gt;&lt;p&gt;不在多说了，请看楼上 Follow 推荐文章。&lt;/p&gt;
&lt;h2 id="想做还没有做的事"&gt;&lt;a href="#%e6%83%b3%e5%81%9a%e8%bf%98%e6%b2%a1%e6%9c%89%e5%81%9a%e7%9a%84%e4%ba%8b" class="header-anchor"&gt;&lt;/a&gt;想做还没有做的事？
&lt;/h2&gt;&lt;p&gt;谈到还未实现的愿望，我一直想去一趟西藏。2023 年，我曾去过云南，途经香格里拉，深深感受到藏族同胞的淳朴与热情。这段旅程让我更加向往那片神秘的高原，也让我庆幸能生活在拥有“世界第三极”的国家。&lt;/p&gt;
&lt;p&gt;如今，阻碍我的似乎只剩下一张通往西藏的“车票”。我希望未来 5 年内，能踏上这片离天空最近的土地，去感受虔诚的信仰，体验雪域高原的热情，感受缺氧中透出的独特幸福感。这是我对雪域之巅的一份憧憬，也是一份内心的向往。&lt;/p&gt;
&lt;h2 id="写到这里闭上你的眼睛深呼吸几分钟或是出去溜达一圈然后回来写任何你想写的东西"&gt;&lt;a href="#%e5%86%99%e5%88%b0%e8%bf%99%e9%87%8c%e9%97%ad%e4%b8%8a%e4%bd%a0%e7%9a%84%e7%9c%bc%e7%9d%9b%e6%b7%b1%e5%91%bc%e5%90%b8%e5%87%a0%e5%88%86%e9%92%9f%e6%88%96%e6%98%af%e5%87%ba%e5%8e%bb%e6%ba%9c%e8%be%be%e4%b8%80%e5%9c%88%e7%84%b6%e5%90%8e%e5%9b%9e%e6%9d%a5%e5%86%99%e4%bb%bb%e4%bd%95%e4%bd%a0%e6%83%b3%e5%86%99%e7%9a%84%e4%b8%9c%e8%a5%bf" class="header-anchor"&gt;&lt;/a&gt;写到这里，闭上你的眼睛，深呼吸几分钟，或是出去溜达一圈，然后回来写任何你想写的东西。
&lt;/h2&gt;&lt;p&gt;Good morning, and in case i don&amp;rsquo;t see you, good afternoon, good evening, and good night!&lt;/p&gt;
&lt;p&gt;问卷地址：&lt;a class="link" href="https://anotherdayu.com/2024/5962/" target="_blank" rel="noopener"
&gt;博客作者呀，我想采访你这 9 个问题！ - Another Dayu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后，感谢你的阅读，你也可以在评论区分享着你的生活与所有，让我们一起变得更强～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Follow 给我空投了 1w 代币，可以无限发码啦～</title><link>https://blog.debuginn.com/p/follow-app-airdrop/</link><pubDate>Mon, 18 Nov 2024 19:30:00 +0800</pubDate><guid>https://blog.debuginn.com/p/follow-app-airdrop/</guid><description>&lt;img src="https://webp.debuginn.com/20241013ivn8eL.jpeg" alt="Featured image of post Follow 给我空投了 1w 代币，可以无限发码啦～" /&gt;&lt;h2 id="follow-airdrop"&gt;&lt;a href="#follow-airdrop" class="header-anchor"&gt;&lt;/a&gt;Follow Airdrop
&lt;/h2&gt;&lt;p&gt;由于较早的参与 Follow 的内测，现在也当了一回原始股东的感觉，终于分红了～&lt;/p&gt;
&lt;p&gt;今天看官网提供了 9051 $POWER 代币，按照公测到自由下载预估时间，再加上邀请码生成需要有使用时间限制，差不多可以无限发码啦～&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241102Sg7rhN.png"
loading="lazy"
alt="Airdrop"
&gt;&lt;/p&gt;
&lt;h2 id="下载地址"&gt;&lt;a href="#%e4%b8%8b%e8%bd%bd%e5%9c%b0%e5%9d%80" class="header-anchor"&gt;&lt;/a&gt;下载地址
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;官网地址：https://follow.is/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Github： https://github.com/RSSNext/follow
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;下载地址：https://github.com/RSSNext/Follow/releases
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="功能简介"&gt;&lt;a href="#%e5%8a%9f%e8%83%bd%e7%ae%80%e4%bb%8b" class="header-anchor"&gt;&lt;/a&gt;功能简介
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/follow-app/" &gt;Follow ｜下一代的信息浏览器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/follow-app-2/" &gt;Follow ｜下一代信息浏览器 第二弹来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.debuginn.com/p/debuginn-2023-rss/" &gt;2023 年为何我还在使用 RSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="订阅源推荐"&gt;&lt;a href="#%e8%ae%a2%e9%98%85%e6%ba%90%e6%8e%a8%e8%8d%90" class="header-anchor"&gt;&lt;/a&gt;订阅源推荐
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;我的订阅源：https://app.follow.is/share/users/@debuginn
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Go 语言爱好者：https://app.follow.is/list/60633757623653376
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;新闻资讯：https://app.follow.is/list/67389023042166784
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;互联网相关资讯: https://app.follow.is/list/66698003857126400
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Web开发关注领域：https://app.follow.is/list/63404832700630016
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;摄影相关的领域：https://app.follow.is/share/lists/60649442771759104
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;AI前沿资讯：https://app.follow.is/share/lists/67498814495306752
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="邀请码"&gt;&lt;a href="#%e9%82%80%e8%af%b7%e7%a0%81" class="header-anchor"&gt;&lt;/a&gt;邀请码
&lt;/h2&gt;&lt;p&gt;大家最关心的就是邀请码了，今日到账后，我会陆续给大家生成邀请码发送给大家，大家可以关注我的公众号，同时希望把你感兴趣的订阅源在评论区分享出来，&lt;strong&gt;分享优质的订阅源将优先获得邀请码哦&lt;/strong&gt;，最后，感谢您的关注，让我们一起变得更强～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Follow ｜下一代信息浏览器 第二弹来了</title><link>https://blog.debuginn.com/p/follow-app-2/</link><pubDate>Sun, 20 Oct 2024 20:30:00 +0800</pubDate><guid>https://blog.debuginn.com/p/follow-app-2/</guid><description>&lt;img src="https://webp.debuginn.com/20241013ivn8eL.jpeg" alt="Featured image of post Follow ｜下一代信息浏览器 第二弹来了" /&gt;&lt;p&gt;大家好呀，&lt;a class="link" href="https://blog.debuginn.com/p/follow-app" &gt;上篇文章&lt;/a&gt;给大家推荐了我近期参与内测的一个软件 Follow，得到了大家热情地互动，今天继续给大家深度的分享一下 Follow 的特色功能，同时由于目前 Follow 处于内测邀请阶段，一码处于严重供不应求的状态，我也会给大家推荐下暂时平替的 RSS 开源软件，同时，大家可以关注我，等 Follow 公测开始，我会第一时间告知大家。&lt;/p&gt;
&lt;h2 id="特色功能"&gt;&lt;a href="#%e7%89%b9%e8%89%b2%e5%8a%9f%e8%83%bd" class="header-anchor"&gt;&lt;/a&gt;特色功能
&lt;/h2&gt;&lt;h3 id="rss-搜索"&gt;&lt;a href="#rss-%e6%90%9c%e7%b4%a2" class="header-anchor"&gt;&lt;/a&gt;RSS 搜索
&lt;/h3&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018ZBVyDd.png"
loading="lazy"
alt="search"
&gt;&lt;/p&gt;
&lt;p&gt;作为 RSS 阅读器，提供搜索功能，大大降低了大家搜索感兴趣的源的信息，非常便捷方便。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;搜索&lt;/strong&gt;：可以根据关键词搜索订阅感兴趣的方向的信息源；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RSS&lt;/strong&gt;：可以直接输入 RSS 订阅地址预览订阅；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RSSHub&lt;/strong&gt;：作者与另外一个开源作品组成生态，只要是网站信息开放的，那么&amp;quot;&lt;strong&gt;万物皆可 RSS&lt;/strong&gt;&amp;quot;；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;收件箱&lt;/strong&gt;：你敢相信，也可以接收邮件 📧 ；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RSS3&lt;/strong&gt;：下一代的 RSS 信息订阅方式；&lt;/li&gt;
&lt;li&gt;还有 RSS 阅读器的&lt;strong&gt;导入功能&lt;/strong&gt;，你可以快速切换到 Follow 上面来；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="谁在阅读"&gt;&lt;a href="#%e8%b0%81%e5%9c%a8%e9%98%85%e8%af%bb" class="header-anchor"&gt;&lt;/a&gt;谁在阅读
&lt;/h3&gt;&lt;p&gt;阅读器可以把相同订阅并阅读过这篇文章的网友罗列在文章左上方。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018vYtfMz.png"
loading="lazy"
alt="who read"
&gt;&lt;/p&gt;
&lt;p&gt;同时，点击头像会把订阅者自己公开的订阅罗列出来，通过这个功能我补充了好多订阅源 😄&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018V86Unn.png"
loading="lazy"
alt="sylwair"
&gt;&lt;/p&gt;
&lt;h3 id="订阅热点-ai"&gt;&lt;a href="#%e8%ae%a2%e9%98%85%e7%83%ad%e7%82%b9-ai" class="header-anchor"&gt;&lt;/a&gt;订阅热点 AI
&lt;/h3&gt;&lt;p&gt;每天早晚 8 点 AI 基于订阅的源的阅读量来提取 Summary 列表供订阅者阅读。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018Jir4fe.png"
loading="lazy"
alt="hot"
&gt;&lt;/p&gt;
&lt;h3 id="生成摘要-ai"&gt;&lt;a href="#%e7%94%9f%e6%88%90%e6%91%98%e8%a6%81-ai" class="header-anchor"&gt;&lt;/a&gt;生成摘要 AI
&lt;/h3&gt;&lt;p&gt;生成摘要对我来说很重要，目前我订阅了上百个博客和科技媒体，摘要可以让我快速阅读文章核心内容，并确定是否我感兴趣的文章并继续阅读。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018hu1JkJ.png"
loading="lazy"
alt="summary"
&gt;&lt;/p&gt;
&lt;h3 id="双语翻译-ai"&gt;&lt;a href="#%e5%8f%8c%e8%af%ad%e7%bf%bb%e8%af%91-ai" class="header-anchor"&gt;&lt;/a&gt;双语翻译 AI
&lt;/h3&gt;&lt;p&gt;应该也是通过 AI 实现的自动翻译，可以对比着阅读，订阅英文专业文章也不吃力。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018andNgu.png"
loading="lazy"
alt="translate"
&gt;&lt;/p&gt;
&lt;h3 id="激励作者"&gt;&lt;a href="#%e6%bf%80%e5%8a%b1%e4%bd%9c%e8%80%85" class="header-anchor"&gt;&lt;/a&gt;激励作者
&lt;/h3&gt;&lt;p&gt;通过区块链技术，发行 &lt;code&gt;POWER&lt;/code&gt; 代币，你可以对你感兴趣的文章的作者进行打赏，用来提升作者的影响力和生产出更多高质量的内容，从而实现了&lt;strong&gt;良性循环的激励创作体系&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018tqSDWT.png"
loading="lazy"
alt="gift"
&gt;&lt;/p&gt;
&lt;h3 id="视频订阅"&gt;&lt;a href="#%e8%a7%86%e9%a2%91%e8%ae%a2%e9%98%85" class="header-anchor"&gt;&lt;/a&gt;视频订阅
&lt;/h3&gt;&lt;p&gt;没错，你可以把 YouTube 或者哔哩哔哩上你感兴趣的 UP 主都订阅起来，他们发表的最新视频就可以通过 Follow 的自动化推送来及时提醒，直接可以在软件内播放，非常地便捷。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018A8zHK1.png"
loading="lazy"
alt="media"
&gt;&lt;/p&gt;
&lt;h3 id="图库订阅"&gt;&lt;a href="#%e5%9b%be%e5%ba%93%e8%ae%a2%e9%98%85" class="header-anchor"&gt;&lt;/a&gt;图库订阅
&lt;/h3&gt;&lt;p&gt;通过图片瀑布流的形式进行订阅，学习与鉴赏图像给大家带来的视觉冲击与色彩描述。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018n9RCRJ.png"
loading="lazy"
alt="picture"
&gt;&lt;/p&gt;
&lt;h3 id="播客集成"&gt;&lt;a href="#%e6%92%ad%e5%ae%a2%e9%9b%86%e6%88%90" class="header-anchor"&gt;&lt;/a&gt;播客集成
&lt;/h3&gt;&lt;p&gt;Follow 就是强大，当你不想去阅读文章的时候，你可以通过点击一键生成播客的模式，让文章生成类似播客的方式播放给你听，遥遥领先。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241018Jc5OmY.png"
loading="lazy"
alt="播客"
&gt;&lt;/p&gt;
&lt;p&gt;介绍了这么多 Follow 的功能，相信大家已经跃跃欲试了，但是目前 Follow 处于内部测试，属于邀请阶段，我这边 5 天才可以生成一个邀请码，严重供不应求，在公测之前的这个阶段，大家没有拿到邀请码的不要灰心，接下来给大家介绍一个开源免费的 RSS 阅读器，先进行过渡。&lt;/p&gt;
&lt;h2 id="平替的软件"&gt;&lt;a href="#%e5%b9%b3%e6%9b%bf%e7%9a%84%e8%bd%af%e4%bb%b6" class="header-anchor"&gt;&lt;/a&gt;平替的软件
&lt;/h2&gt;&lt;h3 id="苹果系统平替--netnewswire"&gt;&lt;a href="#%e8%8b%b9%e6%9e%9c%e7%b3%bb%e7%bb%9f%e5%b9%b3%e6%9b%bf--netnewswire" class="header-anchor"&gt;&lt;/a&gt;苹果系统平替 # &lt;strong&gt;NetNewsWire&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241020AFvwsb.jpeg"
loading="lazy"
alt="NetNewsWire"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官网地址：&lt;a class="link" href="https://netnewswire.com/" target="_blank" rel="noopener"
&gt;https://netnewswire.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github 地址：&lt;a class="link" href="https://github.com/Ranchero-Software/NetNewsWire" target="_blank" rel="noopener"
&gt;https://github.com/Ranchero-Software/NetNewsWire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载地址：&lt;a class="link" href="https://github.com/Ranchero-Software/NetNewsWire/releases" target="_blank" rel="noopener"
&gt;https://github.com/Ranchero-Software/NetNewsWire/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="windows-平替--fluent-reader"&gt;&lt;a href="#windows-%e5%b9%b3%e6%9b%bf--fluent-reader" class="header-anchor"&gt;&lt;/a&gt;Windows 平替 # &lt;strong&gt;Fluent Reader&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241020NLzuRr.jpeg"
loading="lazy"
alt="Fluent Reader"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官网地址：&lt;a class="link" href="https://hyliu.me/fluent-reader/" target="_blank" rel="noopener"
&gt;https://hyliu.me/fluent-reader/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github 地址：&lt;a class="link" href="https://github.com/yang991178/fluent-reader" target="_blank" rel="noopener"
&gt;https://github.com/yang991178/fluent-reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载地址：&lt;a class="link" href="https://github.com/yang991178/fluent-reader/releases" target="_blank" rel="noopener"
&gt;https://github.com/yang991178/fluent-reader/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由于我的主力机器目前是 Mac，大家有推荐的 windows rss app 可以评论区分享出来哈。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="写在最后"&gt;&lt;a href="#%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e" class="header-anchor"&gt;&lt;/a&gt;写在最后
&lt;/h2&gt;&lt;p&gt;最后，给大家推荐下我的订阅信息，大家可以去订阅感兴趣的信息源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://app.follow.is/profile/@debuginn" target="_blank" rel="noopener"
&gt;https://app.follow.is/profile/@debuginn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，已经有 Follow 软件体验的小伙伴，推荐关注我自己收集创建的订阅列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go 语言爱好者：&lt;a class="link" href="https://app.follow.is/list/60633757623653376" target="_blank" rel="noopener"
&gt;https://app.follow.is/list/60633757623653376&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Java 语言爱好者：搭建 ing，敬请期待～&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，大家可以关注我，等 Follow 公测开始，我会第一时间告知大家～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Follow｜下一代的信息浏览器</title><link>https://blog.debuginn.com/p/follow-app/</link><pubDate>Sun, 13 Oct 2024 13:00:00 +0800</pubDate><guid>https://blog.debuginn.com/p/follow-app/</guid><description>&lt;img src="https://webp.debuginn.com/20241013ivn8eL.jpeg" alt="Featured image of post Follow｜下一代的信息浏览器" /&gt;&lt;p&gt;近期体验了一款高效的私有化信息订阅平台，给大家推荐一下，官方则是描述为 Next-gen information browser，下一代的信息浏览器，它不单纯是一个 RSS 订阅软件，因为在传统的 RSS 仅仅订阅的是网站的 feed 流信息进行 follow。&lt;/p&gt;
&lt;p&gt;而 Follow 则是与 RSSHub、RSS3 相结合的生态软件，从而扩展了很多的订阅源以供订阅。&lt;/p&gt;
&lt;h2 id="follow"&gt;&lt;a href="#follow" class="header-anchor"&gt;&lt;/a&gt;Follow
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241009Vpq1w7.jpg"
loading="lazy"
alt="Follow"
&gt;&lt;/p&gt;
&lt;p&gt;Follow 不单单提供了 RSS 的订阅，它的定位更是官网中所描述的 &amp;ldquo;下一代的信息浏览器&amp;rdquo;，目前它提供的功能有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Articles&lt;/strong&gt; 文章订阅：偏向于传统的 RSS 订阅的模式；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Social Media&lt;/strong&gt; 社交媒体：更加偏向于 Follow 自己感兴趣的作者在提供订阅的 APP 上；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pictures&lt;/strong&gt; 图库订阅：订阅自己感兴趣的图片网站；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Videos&lt;/strong&gt; 视频订阅：订阅自己的在 Youtube、BiliBili 等视频平台的 UP 主；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Audio&lt;/strong&gt; 音频订阅：更像是播客类的订阅 APP；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notifications&lt;/strong&gt; 通知订阅：订阅新闻媒体的信息；&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;详见官网地址：&lt;a class="link" href="https://follow.is/" target="_blank" rel="noopener"
&gt;https://follow.is/&lt;/a&gt;
Github 地址：&lt;a class="link" href="https://github.com/RSSNext/follow" target="_blank" rel="noopener"
&gt;https://github.com/RSSNext/follow&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="逆算法化"&gt;&lt;a href="#%e9%80%86%e7%ae%97%e6%b3%95%e5%8c%96" class="header-anchor"&gt;&lt;/a&gt;逆算法化
&lt;/h2&gt;&lt;p&gt;在如今信息化时代，大家接收到的信息都是经过大数据、算法进行点对点的信息推送，导致大家的信息来源越来越趋向于单一、被动接受、羊群效应，大家少了思考、多了短暂地愉悦。&lt;/p&gt;
&lt;p&gt;在 23 年，我就写了一篇文章叫做 &lt;a class="link" href="https://blog.debuginn.com/p/debuginn-2023-rss/" &gt;《2023 年为何我还在使用 RSS》&lt;/a&gt;，文中我列举了 5 点好处，这也是我为什么大学毕业以来一直使用 RSS 阅读器的原因。&lt;/p&gt;
&lt;p&gt;其实大家动不动刷抖音、快手、小红书或者微信视频号等短视频平台就会发现，短则半个小时，长则 4-5 个小时的时间都浪费在了这些 APP 上面，回头来看，看过了什么视频，学到了啥，基本上就属于短暂地愉悦，长时间来看就像游戏一种性质。&lt;/p&gt;
&lt;p&gt;个人定制化的信息输入才是对自己认知与能力的快速提升。&lt;/p&gt;
&lt;p&gt;其实 RSS 订阅为什么一直长久不衰，很大程度而言，是可以 Follow 自己感兴趣的领域以及作者的高质量的内容的输出，另外也可以屏蔽掉现在对大家苦不堪言的广告推送。&lt;/p&gt;
&lt;h2 id="亮点功能"&gt;&lt;a href="#%e4%ba%ae%e7%82%b9%e5%8a%9f%e8%83%bd" class="header-anchor"&gt;&lt;/a&gt;亮点功能
&lt;/h2&gt;&lt;p&gt;目前，Follow 给我带来眼前一亮的功能有如下三个，AI Summary、订阅共享以及邀请制。&lt;/p&gt;
&lt;h3 id="ai-summary"&gt;&lt;a href="#ai-summary" class="header-anchor"&gt;&lt;/a&gt;AI Summary
&lt;/h3&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241009tNs61I.png"
loading="lazy"
alt="summary"
&gt;&lt;/p&gt;
&lt;p&gt;通过自动化设置，可以将文章使用 AI 生成摘要，一些复杂难懂且文章比较长的场景，通过 AI 进行总结，可以带来阅读效率的极大提升。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241010rGF6de.png"
loading="lazy"
alt="summary"
&gt;&lt;/p&gt;
&lt;h3 id="订阅共享"&gt;&lt;a href="#%e8%ae%a2%e9%98%85%e5%85%b1%e4%ba%ab" class="header-anchor"&gt;&lt;/a&gt;订阅共享
&lt;/h3&gt;&lt;p&gt;订阅共享功能是 Follow 的特色功能，大家可以通过订阅的文章了解到和自己一样订阅这个文章的人他（她）们订阅了什么信息，从而充实自己的订阅源。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241010Fe5wr7.png"
loading="lazy"
alt="share"
&gt;&lt;/p&gt;
&lt;h3 id="邀请制"&gt;&lt;a href="#%e9%82%80%e8%af%b7%e5%88%b6" class="header-anchor"&gt;&lt;/a&gt;邀请制
&lt;/h3&gt;&lt;p&gt;相信 Follow 的作者在开发这个软件的时候就有着成熟的产品推广的思路，实际上， Follow 本身是一块很优秀、完成度很高的软件，但是作者实施的邀请制度使得 Follow 在互联网中始终可以保持比较活跃的热度，从而让一款软件更容易地在社区、媒体上带来传播。&lt;/p&gt;
&lt;p&gt;不得不说，创新之处，在于作者将区块链币的设计引入到了 Follow 之中，通过签到获取 &lt;code&gt;$POWER &lt;/code&gt; 代币，代币目前有两种用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;邀请&lt;/strong&gt;：通过代币生成邀请码，进行分享，达到 APP 的裂变传播；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;赞赏&lt;/strong&gt;：对于感兴趣的文章，你可以给认证过的作者打赏代币；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相信未来代币可以在 Follow 中有更多的场景和玩法，同时作者还承诺代币未来的价值，期待 (✧∀✧)&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/20241013nluSz7.png"
loading="lazy"
alt="invite"
&gt;&lt;/p&gt;
&lt;h2 id="写在最后"&gt;&lt;a href="#%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e" class="header-anchor"&gt;&lt;/a&gt;写在最后
&lt;/h2&gt;&lt;p&gt;Follow 是一款非常成功的软件，在算法推荐为主流的时代，这一款 RSS 软件无疑给 RSS 圈带来了新的希望与活力，目前还在邀请阶段，凭借开源、简洁、RSS3 就已经获得了大家的追捧，希望公测时更加出色。&lt;/p&gt;
&lt;p&gt;不过，目前的互联网环境，头部大厂都是尽可能地保留住自己的数字信息，从而选择了私域与闭源的策略，这样其实与最初互联网“开放”的原则相违背，带来的弊端是大家接触信息的成本变得高了起来，同时，RSS 阅读器也因为版权的原因，无法获取高质量的文章。&lt;/p&gt;
&lt;p&gt;大家有推荐的 RSS 的订阅源也可以通过评论区分享出来，如果你感觉文章对你有所帮助的话可以关注下我，我会不时分享一些小众但也优秀的软件推荐给大家，让我们一起变得更强。&lt;/p&gt;
&lt;p&gt;分享一下我的网站的订阅源与 Follow 的订阅列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Debug客栈&lt;/strong&gt; RSS 订阅地址：&lt;a class="link" href="https://blog.debuginn.com/index.xml" target="_blank" rel="noopener"
&gt;https://blog.debuginn.com/index.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go 语言爱好者&lt;/strong&gt; 订阅列表：&lt;a class="link" href="https://app.follow.is/list/60633757623653376" target="_blank" rel="noopener"
&gt;https://app.follow.is/list/60633757623653376&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，我会从评论区中抽取一名朋友赠与 Follow 邀请码，感谢大家支持～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>谈谈 ChatGPT</title><link>https://blog.debuginn.com/p/talk-about-chat-gpt/</link><pubDate>Sun, 12 Nov 2023 08:00:00 +0800</pubDate><guid>https://blog.debuginn.com/p/talk-about-chat-gpt/</guid><description>&lt;img src="https://webp.debuginn.com/202311111831345.jpg" alt="Featured image of post 谈谈 ChatGPT" /&gt;&lt;h2 id="前言"&gt;&lt;a href="#%e5%89%8d%e8%a8%80" class="header-anchor"&gt;&lt;/a&gt;前言
&lt;/h2&gt;&lt;p&gt;说起我真正使用落地的产品是从 22 年 11 月份开始，那时候 ChatGPT 刚发布灰度出来，面对这个对话框一样的界面，我发现这个简简单单甚至有些简陋的页面，竟然是技术变革的入口，看过大模型相关理论以及原理的同学，大家会发现，这个 AI 已经学习了我们近十年的信息，也就是说，他的知识储备已经高于我们在这个世界上的任何一个人，同一时间段，已经看到 V2EX 已经有人开始将高考试题让 GPT 去做了，当时的 GPT 可以考上一所不错的一本院校了，现在的 GPT4 我想应该是在全领域领先于各个行业了。&lt;/p&gt;
&lt;p&gt;不出意外，ChatGPT 在全球理所当然的火了起来，他带来的是一场技术的革命，他区别于元宇宙、VR 或者区块链，因为元宇宙、VR 技术的发展到现在，需要的是基础材料的突破，当时现在（23年10月）还没有让人振奋人心的消息传来，区块链延伸而来的比特币，成为了全球热爱博彩的圣地、也成为了进行洗钱的工具，对社会和全球的发展没有进步意义，同时又白白消耗了大量的电力资源。 GPT 是利用现有的计算机科学技术进行突破，商业化速度比预想的要快很多，微软的 Edge 浏览器率先融合进了 GPT，成为了第一款商业化的产品。&lt;/p&gt;
&lt;h2 id="工具"&gt;&lt;a href="#%e5%b7%a5%e5%85%b7" class="header-anchor"&gt;&lt;/a&gt;工具
&lt;/h2&gt;&lt;p&gt;从接触使用 GPT 开始，发现自己逐步离不开这个工具，从基本的文章润色到代码的讲解及优化建议、再到提需求做一个小的工具，他的回答都令我非常满意，目前在工作生活中，都在使用了大量的 GPT 衍生工具，在这里也分享给大家：&lt;/p&gt;
&lt;h3 id="chatgpt"&gt;&lt;a href="#chatgpt" class="header-anchor"&gt;&lt;/a&gt;ChatGPT
&lt;/h3&gt;&lt;p&gt;使用最多的就是自家的网站与 APP，也就是我文章开头所说的 “对话框界面”。&lt;/p&gt;
&lt;p&gt;OpenAI 官方网址：&lt;a class="link" href="https://openai.com/" target="_blank" rel="noopener"
&gt;https://openai.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT 官方网址：&lt;a class="link" href="https://chat.openai.com/" target="_blank" rel="noopener"
&gt;https://chat.openai.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202311111716355.png"
loading="lazy"
alt="ChatGPT"
&gt;&lt;/p&gt;
&lt;h3 id="macgpt"&gt;&lt;a href="#macgpt" class="header-anchor"&gt;&lt;/a&gt;MacGPT
&lt;/h3&gt;&lt;p&gt;由于现在官方没有发布 Mac 的桌面 ChatGPT APP，这款是目前感觉使用体验最好的软件了，可以在顶部工具栏和侧边栏呼出，使用起来非常便捷。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202311111730037.webp"
loading="lazy"
alt="MacGPT"
&gt;&lt;/p&gt;
&lt;h3 id="chat2db"&gt;&lt;a href="#chat2db" class="header-anchor"&gt;&lt;/a&gt;Chat2DB
&lt;/h3&gt;&lt;p&gt;这是一款数据库连接工具，通过 ChatGPT 或者其他的 GPT 工具将自然语言处理成 SQL 语言，也可以基于数据生成报表，使用起来十分便捷与方便。&lt;/p&gt;
&lt;p&gt;Github 地址：&lt;a class="link" href="https://github.com/chat2db/Chat2DB/" target="_blank" rel="noopener"
&gt;https://github.com/chat2db/Chat2DB/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202311111736506.webp"
loading="lazy"
alt="Chat2DB"
&gt;&lt;/p&gt;
&lt;h2 id="感悟"&gt;&lt;a href="#%e6%84%9f%e6%82%9f" class="header-anchor"&gt;&lt;/a&gt;感悟
&lt;/h2&gt;&lt;p&gt;从人类进入了刀耕火种的时代开始，大家就已经学会了使用工具，现在的 GPT 同样也是一种工具，目前，他会一定程度的帮助我们在工作中提升效率，有一些重复性的工作甚至会被他代替，事实也是如此。&lt;/p&gt;
&lt;p&gt;目前我们还是将 GPT 的强大功能简单的接入到我们日常使用的工具中，这是最初的阶段，未来，GPT 会衍生出每个人的电子助理，甚至在未来，就如流浪地球的 MOSS 机器人一样，他们将有独立的意识。&lt;/p&gt;
&lt;p&gt;不过在使用目前的产品中，发现了一些问题，就是他不知道他不知道，对于一些常识或者一些技能问题的回答，深度使用的话，不难发现，他就是在用关键参数或者关键词在创造答案，这个答案的可信度并不是那么高，甚至就是错误的。&lt;/p&gt;
&lt;p&gt;前两天看到博客中有聊到 &lt;a class="link" href="https://www.similarweb.com/amp/blog/insights/ai-news/stack-overflow-chatgpt/" target="_blank" rel="noopener"
&gt;《ChatGPT 导致了 Stack Overflow 访问量的下降？ 》&lt;/a&gt; 大家遇到问题不再集中思考来复现问题，发现更深层次的问题，而是通过 GPT 来快问快答，GPT3.5 的知识截止日期是2022年1月，代表着随着大家的产出约来越少，GPT 学习的参数也越来也少，随着系统或者语言的升级，相关文档越来越少，对于更专业的技能知识带来的就是未来 GPT 的准确率也会越来越不精准，目前来说没有看到这个问题的解答。&lt;/p&gt;
&lt;p&gt;未来，我的文章将使用 ChatGPT 来帮助我润色文章与统计分析，当然，这篇文章就不是 AI 生成的 。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202311102342418.png"
loading="lazy"
alt="NotByAi"
&gt;&lt;/p&gt;
&lt;p&gt;最后大家要是对 GPT 有什么想法或者有什么好用的工具，可以分享在评论区，让 AI 帮助我们解放生产力，让我们变得更强～&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>如何接手并维护一个项目</title><link>https://blog.debuginn.com/p/how-to-take-over-a-project/</link><pubDate>Mon, 10 Jul 2023 23:11:00 +0800</pubDate><guid>https://blog.debuginn.com/p/how-to-take-over-a-project/</guid><description>&lt;img src="https://webp.debuginn.com/202307102310436.jpg" alt="Featured image of post 如何接手并维护一个项目" /&gt;&lt;blockquote&gt;
&lt;p&gt;在工作中，接手负责管理别人开发或者前人开发的项目是每个开发人员的工作任务之一，那么，如何快速并且高效的消化接手过来的项目呢，本文主要讲解一些方法与实践技巧，希望可以帮助你快速了解你接手的项目。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="系统文档"&gt;&lt;a href="#%e7%b3%bb%e7%bb%9f%e6%96%87%e6%a1%a3" class="header-anchor"&gt;&lt;/a&gt;系统文档
&lt;/h2&gt;&lt;p&gt;若是有最开始的包括后续优化的相关技术文档或者系统文档，对于接手过来的项目无疑是最有助于开发人员的方式。但是大家会发现往往接手过来的项目是没有这一类的文档的，交接过来的系统若是对开发有极高追求的，一般都会有文档，并且 README.md 中会有项目介绍包括相关文档，但是&amp;hellip;&amp;hellip; 往往我们拿到手的系统是纯代码，README.md 可能都没有这个文件，这种往往是最痛苦的，不过也是最锻炼梳理系统这项技能的。&lt;/p&gt;
&lt;p&gt;那么我们就需要从下面这几个点来慢慢消化系统。&lt;/p&gt;
&lt;h2 id="系统权限"&gt;&lt;a href="#%e7%b3%bb%e7%bb%9f%e6%9d%83%e9%99%90" class="header-anchor"&gt;&lt;/a&gt;系统权限
&lt;/h2&gt;&lt;p&gt;交接过来的系统，一定要开好对应的权限，这对你全面了解系统以及后续维护系统有着至关重要的的作用，若没有权限，当系统出现问题时，领导找到你问问题原因，而你却在向领导申请权限，世纪名场面。&lt;/p&gt;
&lt;p&gt;以下是常见的系统权限：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gitlab 仓库权限；&lt;/li&gt;
&lt;li&gt;Deploy 部署系统权限；&lt;/li&gt;
&lt;li&gt;Log 日志系统权限；&lt;/li&gt;
&lt;li&gt;Data 数据库管理系统权限；&lt;/li&gt;
&lt;li&gt;Alert 系统报警配置权限；&lt;/li&gt;
&lt;li&gt;Crond 任务调度器权限；&lt;/li&gt;
&lt;li&gt;Middleware 根据不同系统的中间件权限，包括不限于 Notify、RocketMQ、Redis 等；&lt;/li&gt;
&lt;li&gt;Auth 依赖系统授权信息权限；&lt;/li&gt;
&lt;li&gt;Test 测试平台的权限；&lt;/li&gt;
&lt;li&gt;API API 调试平台的权限；&lt;/li&gt;
&lt;li&gt;Sys 系统相关注册管理权限；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;接手项目，开启权限是第一步也是必须要做的事情。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="配置文件"&gt;&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-anchor"&gt;&lt;/a&gt;配置文件
&lt;/h2&gt;&lt;p&gt;通过配置文件可以看到一个系统的基本信息，比如说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统环境配置信息、注册信息、协议相关信息；&lt;/li&gt;
&lt;li&gt;系统使用数据库配置信息；&lt;/li&gt;
&lt;li&gt;系统使用 Redis 等中间件配置信息；&lt;/li&gt;
&lt;li&gt;业务上使用的一些值定义；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="库表设计"&gt;&lt;a href="#%e5%ba%93%e8%a1%a8%e8%ae%be%e8%ae%a1" class="header-anchor"&gt;&lt;/a&gt;库表设计
&lt;/h2&gt;&lt;p&gt;一般数据库表设计会存放在 dao 模块或者目录下，基本上是一表一文件定义，可以看到表定义的字段，并且可以看到对该表的一些“增删查改”动作。&lt;/p&gt;
&lt;p&gt;若是底层系统设计，本身系统就是只提供给外部服务使用的，那么从数据库库表设计基本上就可以反推业务逻辑的设计，删除、更新、新增都是基本的业务逻辑动作，查询或者组合成事务的业务相对来说比较复杂，不过根据业务代码看着理解的话也比较简单一些。&lt;/p&gt;
&lt;h2 id="缓存设计"&gt;&lt;a href="#%e7%bc%93%e5%ad%98%e8%ae%be%e8%ae%a1" class="header-anchor"&gt;&lt;/a&gt;缓存设计
&lt;/h2&gt;&lt;p&gt;缓存一般有两种，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;被动缓存&lt;/strong&gt;：一般是用于高并发场景，用于缓解下游中间件或者接口的瞬时压力；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主动缓存&lt;/strong&gt;：这种是相对高级的缓存策略，用于分布式数据一致数据的返回；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分析刚接手的系统，从 cacheKey 就可以了解业务系统中为什么这样设计的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;product.info.pid.XXXX
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面这个例子可以看到记录的是一个产品 pid 为 XXXX 的缓存信息。&lt;/p&gt;
&lt;h2 id="协议文件"&gt;&lt;a href="#%e5%8d%8f%e8%ae%ae%e6%96%87%e4%bb%b6" class="header-anchor"&gt;&lt;/a&gt;协议文件
&lt;/h2&gt;&lt;p&gt;若是接手过来的系统按照语义命名及划分路由的话，则通过 API 接口文档来看是一个很好的方式，因为通过 API 基本可以确定接手过来的服务有哪些业务，针对不同的业务又有哪些操作。&lt;/p&gt;
&lt;p&gt;针对不同的语言、不同的协议，也有一些细微的差别：&lt;/p&gt;
&lt;h3 id="java-dubbo-协议"&gt;&lt;a href="#java-dubbo-%e5%8d%8f%e8%ae%ae" class="header-anchor"&gt;&lt;/a&gt;Java Dubbo 协议
&lt;/h3&gt;&lt;p&gt;一般 Java Dubbo 协议都是对外提供 API 模块的 pom 依赖的，声明都是使用接口来实现的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;span class="lnt"&gt;8
&lt;/span&gt;&lt;span class="lnt"&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// XXXX 业务模块&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;XXXX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 获取列表&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DataA&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getXXXList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;XXRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 获取列表 基于 uid &lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DataA&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getXXXListByUid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;XXRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 基于 uid 删除 XX 信息&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;delXXInfoByUid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;XXRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="go-thrift-协议"&gt;&lt;a href="#go-thrift-%e5%8d%8f%e8%ae%ae" class="header-anchor"&gt;&lt;/a&gt;Go Thrift 协议
&lt;/h3&gt;&lt;p&gt;Go Thrift 是使用 &lt;a class="link" href="https://thrift.apache.org/docs/idl" target="_blank" rel="noopener"
&gt;IDL&lt;/a&gt; 语言定义的协议，我们会基于 IDL 声明的接口，定义好接口出入参生成的 SDK 文件，通过看 IDL 定义的接口，就可以了解到接手的项目提供了哪些功能了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-thrift" data-lang="thrift"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;XXOrderResponse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;i64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;orderId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;orderInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;XXOrderRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;i64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;orderId&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;go.tag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;json:&lt;/span&gt;&lt;span class="se"&gt;\&amp;#34;&lt;/span&gt;&lt;span class="s2"&gt;order_id&lt;/span&gt;&lt;span class="se"&gt;\&amp;#34;&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c"&gt;// 接口定义
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;&lt;/span&gt;&lt;span class="kd"&gt;service&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;OrderService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;// XX 订单
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;XXOrderResponse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;XXOrderInfo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;XXOrderRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="go-http-协议"&gt;&lt;a href="#go-http-%e5%8d%8f%e8%ae%ae" class="header-anchor"&gt;&lt;/a&gt;Go HTTP 协议
&lt;/h3&gt;&lt;p&gt;目前公司使用居多的 HTTP 框架是 iris 还有一个自研的 migo 框架（基于 beego 框架开发），都有一个相似的特点，就是会把 router 单独定一个文件，即 router.go :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;// Init _&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;middlewares&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RecoveryMiddle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;middlewares&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PromeMiddle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;middlewares&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LoggerMiddle&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 小心打日志的配置&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;innermiddle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CrossOrigin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 是否使用跨域&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;middlewares&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RateLimitMiddleWare&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// 配置限流&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PartyFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;/product&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cproduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Register&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="编程语言"&gt;&lt;a href="#%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80" class="header-anchor"&gt;&lt;/a&gt;编程语言
&lt;/h2&gt;&lt;p&gt;从依赖方去挖掘系统，看系统依赖了哪些业务方，也可以看出系统依赖了哪些基础包，还可以看到依赖的包对应版本（有经验的人可以看出是否有 bug ）。&lt;/p&gt;
&lt;h3 id="java-maven"&gt;&lt;a href="#java-maven" class="header-anchor"&gt;&lt;/a&gt;Java Maven
&lt;/h3&gt;&lt;p&gt;目前 Java 主流的依赖方式就是使用 Maven POM 定义依赖并管理依赖：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;&amp;lt;project&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;product&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;cn.debuginn.blog&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class="nt"&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;product-server&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;cn.debuginn.blog&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;product-api&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${product-api-version}&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c"&gt;&amp;lt;!--单元测试--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nt"&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="go-module"&gt;&lt;a href="#go-module" class="header-anchor"&gt;&lt;/a&gt;Go Module
&lt;/h3&gt;&lt;p&gt;目前 Go 语言也是大一统到 go mod 管理版本依赖了，由于 Go 是源码依赖，使用 &lt;code&gt;go mod tidy&lt;/code&gt; 之后就可以通过点击依赖仓库来看源码了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;debuginn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;demo&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.20&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;dubbogo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;gost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;v1&lt;/span&gt;&lt;span class="mf"&gt;.11.25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// indirect&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;playground&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;v10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;v10&lt;/span&gt;&lt;span class="mf"&gt;.10.1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;v8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;v8&lt;/span&gt;&lt;span class="mf"&gt;.11.0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;gobwas&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;v1&lt;/span&gt;&lt;span class="mf"&gt;.0.3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// indirect&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="流程图泳道图"&gt;&lt;a href="#%e6%b5%81%e7%a8%8b%e5%9b%be%e6%b3%b3%e9%81%93%e5%9b%be" class="header-anchor"&gt;&lt;/a&gt;流程图、泳道图
&lt;/h2&gt;&lt;p&gt;通过上述方式与方法，最后就可以根据业务代码，画出业务流程图及对应的泳道了，同时，也可以基于依赖关系，画出系统的架构图，梳理一个系统的最好方式就是有所沉淀，通过读代码把代码转化为文档的方式即可以对消化的系统有所输出，又可以提升自己的技术能力。&lt;/p&gt;
&lt;h2 id="写在最后"&gt;&lt;a href="#%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e" class="header-anchor"&gt;&lt;/a&gt;写在最后
&lt;/h2&gt;&lt;p&gt;最后，&lt;strong&gt;一个好的系统，是由系统设计文档、代码、注释和覆盖率尽可能全面的测试用例组成的&lt;/strong&gt;，很多情况下大家由于不可抗拒的原因，最后只留下了运行的代码，这也是撰写本文的主要原因，希望对大家有所帮助，最后大家有什么好的方式和方法也可以在评论区分享出来，让我们一起变得更强。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>FAAS 调研笔记</title><link>https://blog.debuginn.com/p/faas-notes/</link><pubDate>Wed, 15 Feb 2023 09:57:00 +0800</pubDate><guid>https://blog.debuginn.com/p/faas-notes/</guid><description>&lt;img src="https://webp.debuginn.com/202302242145505.jpeg" alt="Featured image of post FAAS 调研笔记" /&gt;&lt;h2 id="faas-是什么"&gt;&lt;a href="#faas-%e6%98%af%e4%bb%80%e4%b9%88" class="header-anchor"&gt;&lt;/a&gt;FAAS 是什么
&lt;/h2&gt;&lt;p&gt;功能即服务 (FAAS) 是一类云计算服务，它提供了一个平台，允许客户开发、运行和管理应用程序功能，而 &lt;strong&gt;无需构建和维护通常与开发和启动应用程序相关的基础设施的复杂性。&lt;/strong&gt; 构建遵循此模型的应用程序是实现“无服务器”体系结构的一种方式，通常在构建微服务应用程序时使用。&lt;/p&gt;
&lt;p&gt;FAAS 最初是由 PiCloud 等各种初创企业在2010年左右提供的。&lt;/p&gt;
&lt;p&gt;AWS Lambda 是大型公共云供应商提供的第一个 FAAS，随后是 Google Cloud Functions、Microsoft Azure Functions、IBM/Apache 2016年的 OpenWhisk (开源)和 2017 年的 Oracle Cloud FN(开源)。&lt;/p&gt;
&lt;p&gt;国内的云厂商近几年也陆续提供 FAAS 产品，有阿里云 Serverless 服务、腾讯云云函数(Serverless Cloud Function，SCF)、华为云函数工作流（FunctionGraph）。&lt;/p&gt;
&lt;h3 id="faas-优点"&gt;&lt;a href="#faas-%e4%bc%98%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;FAAS 优点
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;降低运营成本&lt;/strong&gt;，开发人员不需要对服务器根据流量做规划，将部署平台的能力外包；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;降低开发成本&lt;/strong&gt;，Serverless 是整个应用程序组件商品化的结果，将功能相似的函数解耦，统一提供服务，减少重复建轮子；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展成本&lt;/strong&gt;，Serverless 的架构就是将部署环境外包，水平扩张是完全自动、有弹性，并且有提供方来支持管理的；
&lt;ul&gt;
&lt;li&gt;偶尔的请求，一些提供给运营人员的操作很低频；&lt;/li&gt;
&lt;li&gt;不一致的流量，函数扩容速度远远大于容器扩容速度，高效响应突发流量带来的扩容问题；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运营管理更轻松&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;容器的租户管理使得研发人员无需关心部署系统；&lt;/li&gt;
&lt;li&gt;降低打包和部署的复杂性；&lt;/li&gt;
&lt;li&gt;专注于业务代码，更快的迭代与部署；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="faas-缺点"&gt;&lt;a href="#faas-%e7%bc%ba%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;FAAS 缺点
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;控制权的转移，任何的外包策略，都会将部分的系统控制权移交到维护团队或组织，带来的就是不可控的系统停机、意外限制、成本变化、功能丧失、强制 API 升级等问题；&lt;/li&gt;
&lt;li&gt;多租户问题，多个客户（租户）的多个软件在同一个机器上运行；&lt;/li&gt;
&lt;li&gt;供应商锁定，一旦选择某个供应商或者维护团队，几乎是无法进行迁移的，代码的迁移大概率只能重构；&lt;/li&gt;
&lt;li&gt;安全问题，会增加恶意攻击的剖面，增加攻击成功的可能性；&lt;/li&gt;
&lt;li&gt;没有服务器内状态，持久化的数据无法在容器存储，只能借助第三方存储组件实现 cache；&lt;/li&gt;
&lt;li&gt;测试问题，没有本地环境可以完全模拟云环境；&lt;/li&gt;
&lt;li&gt;调试问题，云环境的调试目前还没有提供优秀的 tools；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="业内-faas-的分支及发展"&gt;&lt;a href="#%e4%b8%9a%e5%86%85-faas-%e7%9a%84%e5%88%86%e6%94%af%e5%8f%8a%e5%8f%91%e5%b1%95" class="header-anchor"&gt;&lt;/a&gt;业内 FAAS 的分支及发展
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;云服务商&lt;/th&gt;
&lt;th&gt;产品&lt;/th&gt;
&lt;th&gt;产品介绍&lt;/th&gt;
&lt;th&gt;使用场景&lt;/th&gt;
&lt;th&gt;客户案例&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;AWS Lambda&lt;/td&gt;
&lt;td&gt;AWS Lambda 是一项无服务器事件驱动型计算服务，该服务使您可以运行几乎任何类型的应用程序或后端服务的代码，而无需预置或管理服务器。&lt;/td&gt;
&lt;td&gt;文件处理； 流处理；Web 应用程序；IoT 后端；移动后端；&lt;/td&gt;
&lt;td&gt;可口可乐 西门子 Netflix Coinbase&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;阿里云&lt;/td&gt;
&lt;td&gt;Serverless 工作流&lt;/td&gt;
&lt;td&gt;Serverless 工作流（Serverless Workflow）是用来协调多个分布式任务执行的全托管 Serverless 云服务，简化开发、运行业务流程需要的任务协调、状态管理和错误处理等繁琐工作。用顺序、分支、并行等方式编排分布式任务，服务按照预设顺序协调任务执行，跟踪任务的状态转换，必要时执行用户定义的重试逻辑，确保工作流顺利完成。&lt;/td&gt;
&lt;td&gt;多媒体文件处理场景；数据处理流水线场景；自动运维场景；解决运维无法可视化的问题；&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Serverless 应用引擎 SAE&lt;/td&gt;
&lt;td&gt;是一个全托管、免运维、高弹性的通用 PaaS 平台。SAE 支持 Spring Boot、Spring Cloud、Dubbo、HSF、Web 应用和 XXL-JOB、ElasticJob 任务的全托管，零改造迁移、无门槛容器化、并提供了开源侧诸多增强能力和企业级高级特性。&lt;/td&gt;
&lt;td&gt;微服务应用托管；弹性扩缩容场景；持续集成与交付；&lt;/td&gt;
&lt;td&gt;贵州酒店集团 视野数科 爱奇艺体育&lt;/td&gt;
&lt;td&gt;类似 side car ，用来管理应用，承接流量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Serverless 容器服务 ASK&lt;/td&gt;
&lt;td&gt;是一款基于阿里云弹性计算基础架构，同时完全兼容 Kubernetes 生态，安全、可靠的容器产品。通过该产品，您无需管理和维护集群即可快速创建 Kubernetes 容器应用，并且根据应用实际使用的 CPU 和内存资源量进行按需付费，从而使您更专注于应用本身，而非运行应用的基础设施。&lt;/td&gt;
&lt;td&gt;应用托管；在线业务弹性阔缩容数据计算 低成本支撑CI/CD任务执行&lt;/td&gt;
&lt;td&gt;图森未来 越光医疗&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;腾讯云&lt;/td&gt;
&lt;td&gt;云函数（Serverless Cloud Function，SCF）&lt;/td&gt;
&lt;td&gt;腾讯云为企业和开发者们提供的无服务器执行环境，帮助您在无需购买和管理服务器的情况下运行代码。您只需使用平台支持的语言编写核心代码并设置代码运行的条件，即可在腾讯云基础设施上弹性、安全地运行代码。云函数是实时文件处理和数据处理等场景下理想的计算平台。&lt;/td&gt;
&lt;td&gt;静态网站托管；构建 RESTful API；部署 Serverless 全栈 Web 应用；Serverless 全景录制方案；&lt;/td&gt;
&lt;td&gt;腾讯视频 新东方 微信阅 腾讯教育 腾讯相册 百视通 猎豹移动&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;API网关&lt;/td&gt;
&lt;td&gt;腾讯云 API 网关（API Gateway）是腾讯云推出的一种 API 托管服务，能提供 API 的完整生命周期管理，包括创建、维护、发布、运行、下线等。&lt;/td&gt;
&lt;td&gt;Serverless HTTP；微服务整合；外部多端统一；业务整合；能力提供及售卖；&lt;/td&gt;
&lt;td&gt;人人视频 江娱互动 腾讯视频 英孚教育&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="内部原理"&gt;&lt;a href="#%e5%86%85%e9%83%a8%e5%8e%9f%e7%90%86" class="header-anchor"&gt;&lt;/a&gt;内部原理
&lt;/h2&gt;&lt;h3 id="faas-方向"&gt;&lt;a href="#faas-%e6%96%b9%e5%90%91" class="header-anchor"&gt;&lt;/a&gt;FAAS 方向
&lt;/h3&gt;&lt;h4 id="运行架构"&gt;&lt;a href="#%e8%bf%90%e8%a1%8c%e6%9e%b6%e6%9e%84" class="header-anchor"&gt;&lt;/a&gt;运行架构
&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;常规的一个服务在容器中启动的流程&lt;/th&gt;
&lt;th&gt;FAAS 调用启动流程&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://webp.debuginn.com/202302242209329.png"
loading="lazy"
&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://webp.debuginn.com/202302242210349.png"
loading="lazy"
&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在传统的服务启动或者是容器化的服务进行启动的是否，都是服务跟随者对应的平台（巨石架构的物理机器或者微服务化的 k8s 容器）的启动而启动，整个生命周期在 pod 的启动开始，在 pod 的关机下线操作结束，整个周期是比较长的，同时必须有实例存活（至少一台）来承接响应，研发人员除了需要关注自己的开发 code，还需要关注容器的大小、容量、数量等运维指标；&lt;/li&gt;
&lt;li&gt;Serverless 中的 FAAS 将研发人员最重要的业务逻辑抽离了出来，除了这部分需要去管理升级，剩下的都交由 FAAS 提供平台来提供服务，托管后的 FAAS 生命周期从 pod 的启动关机简化到了 执行函数 handler 的 init 以及执行函数时间，并且在一些低频的业务中，一些函数实例可以交由 FAAS 提供服务商进行回收，甚至在某些时间不起函数实例，当有事件进来之后在执行函数初始化及执行逻辑（因为函数初始化到可以服务的启动时间在 100ms 左右，当然不同语言以及不同的服务提供方的实现会影响这里的启动时间）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="架构分层"&gt;&lt;a href="#%e6%9e%b6%e6%9e%84%e5%88%86%e5%b1%82" class="header-anchor"&gt;&lt;/a&gt;架构分层
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302242211864.png"
loading="lazy"
alt="架构分层"
&gt;&lt;/p&gt;
&lt;p&gt;其实理解起来比较简单，可以理解成我们的代码已经是与 PAAS 平台进行强解耦的结果了，我们的代码就是一部电视剧，一个操作系统安装了指定的视频播放器就可以播放我们的电视剧了，同理，我们现在只需要关心我们的函数内业务代码逻辑的定义，只要接口定义的按照封装平台的要求来开发即可，我们不需要关心运行的环境及系统，由于 runtime 已经到了 func 级别，热更新代码以及启动服务都是快速可以响应的。&lt;/p&gt;
&lt;h3 id="mesh-方向"&gt;&lt;a href="#mesh-%e6%96%b9%e5%90%91" class="header-anchor"&gt;&lt;/a&gt;Mesh 方向
&lt;/h3&gt;&lt;p&gt;综上，若 FAAS 代表着是“无服务器”架构的话，其实 Service Mesh 严格意义上不能称为是“无服务器”架构，它并不能将容器部署与代码部署隔离开，只是在服务响应中增加了一层代理，用来控制应用程序中服务请求的传递，可以使得服务到服务的通讯快速、可靠和安全。&lt;/p&gt;
&lt;h4 id="运行架构-1"&gt;&lt;a href="#%e8%bf%90%e8%a1%8c%e6%9e%b6%e6%9e%84-1" class="header-anchor"&gt;&lt;/a&gt;运行架构
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302242212468.png"
loading="lazy"
alt="运行架构"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简化微服务和容器中服务之间的通信；&lt;/li&gt;
&lt;li&gt;更容易的诊断通讯错误，发生在自己的基础设施层上；&lt;/li&gt;
&lt;li&gt;支持加密、认证和授权等安全特性；&lt;/li&gt;
&lt;li&gt;允许更快地开发、测试和部署应用程序；&lt;/li&gt;
&lt;li&gt;放置在容器集群的边车代理可以有效的管理网络服务；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;运行时实例通过使用服务网格而增加；&lt;/li&gt;
&lt;li&gt;每次服务的调用都要经过 sidecar proxy；&lt;/li&gt;
&lt;li&gt;没有解决与其他服务或者系统的集成，以及路由类型或转换的映射；&lt;/li&gt;
&lt;li&gt;网格管理的复杂性被抽象化和集中化；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="架构分层-1"&gt;&lt;a href="#%e6%9e%b6%e6%9e%84%e5%88%86%e5%b1%82-1" class="header-anchor"&gt;&lt;/a&gt;架构分层
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302242213329.png"
loading="lazy"
alt="架构分层"
&gt;&lt;/p&gt;
&lt;p&gt;将调用限流、熔断、安全、服务注册与发现、服务管理等非业务逻辑的功能全部都放到 Sidecar 中去，&lt;strong&gt;本质上是一个管理性质进程在管理着业务逻辑性质的进程&lt;/strong&gt;，进程之间的通讯使用的是 UDC(Unix domain socket)。&lt;/p&gt;
&lt;h2 id="reference"&gt;&lt;a href="#reference" class="header-anchor"&gt;&lt;/a&gt;Reference
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://en.wikipedia.org/wiki/Function_as_a_service" target="_blank" rel="noopener"
&gt;https://en.wikipedia.org/wiki/Function_as_a_service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://serverless.aliyun.com/" target="_blank" rel="noopener"
&gt;https://serverless.aliyun.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://cloud.tencent.com/product/scf" target="_blank" rel="noopener"
&gt;https://cloud.tencent.com/product/scf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.huaweicloud.com/product/functiongraph.html" target="_blank" rel="noopener"
&gt;https://www.huaweicloud.com/product/functiongraph.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://martinfowler.com/articles/serverless.html" target="_blank" rel="noopener"
&gt;https://martinfowler.com/articles/serverless.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://aws.amazon.com/cn/lambda/" target="_blank" rel="noopener"
&gt;https://aws.amazon.com/cn/lambda/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://time.geekbang.org/column/article/226574" target="_blank" rel="noopener"
&gt;https://time.geekbang.org/column/article/226574&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.techtarget.com/searchitoperations/definition/service-mesh" target="_blank" rel="noopener"
&gt;https://www.techtarget.com/searchitoperations/definition/service-mesh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.zhaohuabing.com/2018/03/29/what-is-service-mesh-and-istio/" target="_blank" rel="noopener"
&gt;https://www.zhaohuabing.com/2018/03/29/what-is-service-mesh-and-istio/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>PWA 渐进式Web应用程序</title><link>https://blog.debuginn.com/p/web-pwa-program/</link><pubDate>Fri, 18 Mar 2022 14:56:17 +0800</pubDate><guid>https://blog.debuginn.com/p/web-pwa-program/</guid><description>&lt;img src="https://webp.debuginn.com/202303181458725.png" alt="Featured image of post PWA 渐进式Web应用程序" /&gt;&lt;h2 id="简介"&gt;&lt;a href="#%e7%ae%80%e4%bb%8b" class="header-anchor"&gt;&lt;/a&gt;简介
&lt;/h2&gt;&lt;p&gt;PWA是&lt;code&gt;Progressive Web App&lt;/code&gt;的简称，是谷歌提出的新型Web技术，并由W3C及谷歌来推广这项技术，其主要目的是为了提升用户对网站原生使用体验，同时又能节省对网站的开启速度。&lt;/p&gt;
&lt;p&gt;在我们国内，类似于PWA的技术可以简单地理解为微信主导的小程序，不过小程序的使用需要进行微信小程序前端重构开发，而渐进式Web应用程序开发只需要运用现代Web API以及传统渐进式式策略来构建网站的方式。&lt;/p&gt;
&lt;h2 id="特点"&gt;&lt;a href="#%e7%89%b9%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;特点
&lt;/h2&gt;&lt;p&gt;由于这项技术是谷歌提出的，目前谷歌系的浏览器都支持PWA， 官方说有三个特点，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可靠 - 即使在不稳定的网络环境下，也能瞬间加载并展现&lt;/li&gt;
&lt;li&gt;体验 - 快速响应，并且有平滑的动画响应用户的操作&lt;/li&gt;
&lt;li&gt;粘性 - 像设备上的原生应用，具有沉浸式的用户体验，用户可以添加到桌面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而我感觉使用这个技术最大的特点就是将网站缓存下来，开启网站只需要0.3秒之内，使得网站加载速度异常地快，同时对用户非常友好，增添其用户交互性。&lt;/p&gt;
&lt;h2 id="应用"&gt;&lt;a href="#%e5%ba%94%e7%94%a8" class="header-anchor"&gt;&lt;/a&gt;应用
&lt;/h2&gt;&lt;p&gt;近期对网站进行了PWA升级，只是用一个简单的插件就实现了对网站的APP转化，在开启我的网站的同时，在搜索栏会有加号提醒添加至桌面，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181459154.png"
loading="lazy"
alt="PWA在Chrome表现"
&gt;&lt;/p&gt;
&lt;p&gt;若是对我的网站感兴趣，可以点击按钮安装PWA，不用安装APP即可获取本站服务，若是手机用户可以在出现的将此页面发送至桌面来进行订阅。&lt;/p&gt;
&lt;h2 id="功能"&gt;&lt;a href="#%e5%8a%9f%e8%83%bd" class="header-anchor"&gt;&lt;/a&gt;功能
&lt;/h2&gt;&lt;h3 id="离线和缓存"&gt;&lt;a href="#%e7%a6%bb%e7%ba%bf%e5%92%8c%e7%bc%93%e5%ad%98" class="header-anchor"&gt;&lt;/a&gt;离线和缓存
&lt;/h3&gt;&lt;h4 id="service-worker"&gt;&lt;a href="#service-worker" class="header-anchor"&gt;&lt;/a&gt;Service Worker
&lt;/h4&gt;&lt;p&gt;这项技术主要是解决JS单线程问题，为了减少对浏览器网页开启峰值，页面加载问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器中的 javaScript 都是运行在一个单一主线程上的，在同一时间内只能做一件事情。随着 Web 业务不断复杂，我们逐渐在 js 中加了很多耗资源、耗时间的复杂运算过程，这些过程导致的性能问题在 WebApp 的复杂化过程中更加凸显出来。
什么是 Service Worker&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Service Worker 有以下功能和特性：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个独立的 worker 线程，独立于当前网页进程，有自己独立的 worker context。&lt;/li&gt;
&lt;li&gt;一旦被 install，就永远存在，除非被手动 unregister&lt;/li&gt;
&lt;li&gt;用到的时候可以直接唤醒，不用的时候自动睡眠&lt;/li&gt;
&lt;li&gt;可编程拦截代理请求和返回，缓存文件，缓存的文件可以被网页进程取到（包括网络离线状态）&lt;/li&gt;
&lt;li&gt;离线内容开发者可控&lt;/li&gt;
&lt;li&gt;能向客户端推送消息&lt;/li&gt;
&lt;li&gt;不能直接操作 DOM&lt;/li&gt;
&lt;li&gt;必须在 HTTPS 环境下才能工作&lt;/li&gt;
&lt;li&gt;异步实现，内部大都是通过 Promise 实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="web存储"&gt;&lt;a href="#web%e5%ad%98%e5%82%a8" class="header-anchor"&gt;&lt;/a&gt;Web存储
&lt;/h4&gt;&lt;p&gt;选择正确的存储机制对于本地设备存储和基于云的服务器存储都非常重要。 良好的存储引擎可确保以可靠的方式保存信息，并减少带宽和提升响应能力。正确的存储缓存策略是实现离线移动网页体验的核心构建基块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;存储分类&lt;/strong&gt;分为：数据模型、持久化、浏览器支持、事务处理、同步/异步。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182235281.png"
loading="lazy"
alt="缓存策略"
&gt;&lt;/p&gt;
&lt;h3 id="强黏贴用户"&gt;&lt;a href="#%e5%bc%ba%e9%bb%8f%e8%b4%b4%e7%94%a8%e6%88%b7" class="header-anchor"&gt;&lt;/a&gt;强黏贴用户
&lt;/h3&gt;&lt;h4 id="将站点添加至屏幕"&gt;&lt;a href="#%e5%b0%86%e7%ab%99%e7%82%b9%e6%b7%bb%e5%8a%a0%e8%87%b3%e5%b1%8f%e5%b9%95" class="header-anchor"&gt;&lt;/a&gt;将站点添加至屏幕
&lt;/h4&gt;&lt;p&gt;为了吸引并留住用户，不仅仅自己网站需要比较高质量的文章，良好的交互，还需要一些营销手段增强网站的曝光度，提升与用户的交互。&lt;/p&gt;
&lt;p&gt;如果用户对你的网站比较感兴趣，最好的方式将站点添加到主屏幕，不但可以省去用户开启浏览器的操作，提高其转化率，这样就可以对用户强黏贴了。&lt;/p&gt;
&lt;h4 id="消息通知"&gt;&lt;a href="#%e6%b6%88%e6%81%af%e9%80%9a%e7%9f%a5" class="header-anchor"&gt;&lt;/a&gt;消息通知
&lt;/h4&gt;&lt;p&gt;使用 service worker 的功能之一：通知 (notification)，它允许服务器向用户提示一些信息，并根据用户不同的行为进行一些简单的处理。&lt;/p&gt;
&lt;h3 id="用户自动登录"&gt;&lt;a href="#%e7%94%a8%e6%88%b7%e8%87%aa%e5%8a%a8%e7%99%bb%e5%bd%95" class="header-anchor"&gt;&lt;/a&gt;用户自动登录
&lt;/h3&gt;&lt;p&gt;账户是网站必不可少的组成部分。账户体系的存在，可以让网站给用户提供分级服务，同时网站也能够通过收集用户行为实现精准推送。但账号的存在将使得用户不得不多出一步登录的步骤，要知道根据“漏斗模型”理论，从起点到终点，每个环节都会产生用户的流失，依次递减。因此想办法省去烦人的账号密码输入过程，不但能提高用户体验，也能够提高网站转化率。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记住网站传统密码形式；&lt;/li&gt;
&lt;li&gt;凭证管理，第三方登陆验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="网络安全"&gt;&lt;a href="#%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8" class="header-anchor"&gt;&lt;/a&gt;网络安全
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Web安全；&lt;/li&gt;
&lt;li&gt;使用SSL 即 Https；&lt;/li&gt;
&lt;li&gt;同源策略；&lt;/li&gt;
&lt;li&gt;典型的安全漏洞；&lt;/li&gt;
&lt;li&gt;CSP（内容安全策略）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细内容请移步查看：https://lavas.baidu.com/pwa/web-security/introduction&lt;/p&gt;
&lt;h2 id="参考文章"&gt;&lt;a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%ab%a0" class="header-anchor"&gt;&lt;/a&gt;参考文章
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;什么是PWA | PWA 文档| Lavas&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://juejin.im/post/5a6c86e451882573505174e7" target="_blank" rel="noopener"
&gt;简单介绍一下Progressive Web App(PWA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://developer.mozilla.org/zh-CN/docs/Web/Progressive_web_apps" target="_blank" rel="noopener"
&gt;渐进式Web 应用（PWA） | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://segmentfault.com/a/1190000012353473" target="_blank" rel="noopener"
&gt;讲讲PWA - 前端学习- SegmentFault 思否&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://developers.google.com/web/progressive-web-apps/" target="_blank" rel="noopener"
&gt;Progressive Web Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Restful API 设计指北</title><link>https://blog.debuginn.com/p/design-restful-api/</link><pubDate>Sun, 13 Mar 2022 21:35:12 +0800</pubDate><guid>https://blog.debuginn.com/p/design-restful-api/</guid><description>&lt;img src="https://webp.debuginn.com/202303132137265.jpg" alt="Featured image of post Restful API 设计指北" /&gt;&lt;p&gt;近期学习了 Go 语言，跟着七米在学习，学习过程中了解到了 API 的一个设计规范，也就是本文要讲的 Restful API 设计模式，现在互联网处在前后端分离的阶段，API 的书写及规范化是非常重要的，针对于 API 中 Restful API 中设计比较规范的是 Github API，可以直接访问他们的 &lt;a class="link" href="https://api.github.com" target="_blank" rel="noopener"
&gt;https://api.github.com&lt;/a&gt; 直接查看 Github 针对与公共接口的链接及使用方法。&lt;/p&gt;
&lt;p&gt;此篇文章也是针对于这几天学习 Restful API 做了一个笔记或小结，若有不足之处还望批评指正，谢谢。&lt;/p&gt;
&lt;h2 id="使用-https-协议"&gt;&lt;a href="#%e4%bd%bf%e7%94%a8-https-%e5%8d%8f%e8%ae%ae" class="header-anchor"&gt;&lt;/a&gt;使用 HTTPS 协议
&lt;/h2&gt;&lt;p&gt;这个协议使用本身与这个 API 设计标准没有什么直接联系，使用 HTTPS 协议主要目的是将用户客户端与 API 服务器连接过程中保证其数据的安全性。&lt;/p&gt;
&lt;p&gt;注意：由于 API 接口使用 HTTPS 协议，&lt;strong&gt;不要让非 SSL 的链接访问重定向到 SSL 的链接&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id="api-地址和版本问题"&gt;&lt;a href="#api-%e5%9c%b0%e5%9d%80%e5%92%8c%e7%89%88%e6%9c%ac%e9%97%ae%e9%a2%98" class="header-anchor"&gt;&lt;/a&gt;API 地址和版本问题
&lt;/h2&gt;&lt;p&gt;为 API 使用专门子域名比较友好，例如使用如下链接使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;https://api.debuginn.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;也可以将 API 放在主域名下，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;https://debuginn.com/api/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当然，针对于 API 版本问题针对以上两种方法可以分别使用如下例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 针对于 API 子域名方式 api.domain/v1/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;https://api.debuginn.com/v1/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 针对于 主域名目录方式 domain/api/v1/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;https://debuginn.com/api/v1/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="schema-响应数据模式"&gt;&lt;a href="#schema-%e5%93%8d%e5%ba%94%e6%95%b0%e6%8d%ae%e6%a8%a1%e5%bc%8f" class="header-anchor"&gt;&lt;/a&gt;Schema 响应数据模式
&lt;/h2&gt;&lt;p&gt;现在前后端分离项目使用的数据响应模式大部分采用的是 JSON 格式数据，也有一些项目采用 XML 格式的数据。&lt;/p&gt;
&lt;p&gt;针对于用户客户端请求，服务器响应尽量有 状态码 Status Code 及详细解释。&lt;/p&gt;
&lt;h2 id="使用正确的-method"&gt;&lt;a href="#%e4%bd%bf%e7%94%a8%e6%ad%a3%e7%a1%ae%e7%9a%84-method" class="header-anchor"&gt;&lt;/a&gt;使用正确的 Method
&lt;/h2&gt;&lt;p&gt;使用正确的 Method 也就是使用正确的 HTTP 请求动词，即 HTTP 协议规定的常常使用的六种请求动词，并针对请求 SQL 语句辅助理解：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;GET 请求 =&amp;gt; SELECT 从服务端获取数据
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;POST 请求 =&amp;gt; CREATE 从服务端创建数据
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;PUT 请求 =&amp;gt; UPDATE 从服务端更新数据（将所有数据元素全部替换掉）
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;PATCH 请求 =&amp;gt; UPDATE 从服务端更新数据（将部分数据元素替换掉）
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;DELETE请求 =&amp;gt; DELETE 从服务端删除数据
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;还有两个不常使用的请求：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;HEAD 获取资源的元数据。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;OPTIONS 获取信息，关于资源的哪些属性是客户端可以改变的。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：更新和创建操作应该返回最新的资源，来通知用户资源的情况；删除资源一般不会返回内容。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="过滤信息"&gt;&lt;a href="#%e8%bf%87%e6%bb%a4%e4%bf%a1%e6%81%af" class="header-anchor"&gt;&lt;/a&gt;过滤信息
&lt;/h2&gt;&lt;p&gt;针对用户端查询数据，需要服务端查询对应数据，包括了筛选、分页等操作。&lt;/p&gt;
&lt;h3 id="筛选操作"&gt;&lt;a href="#%e7%ad%9b%e9%80%89%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;筛选操作
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;api.domain/user/limit/10 指定返回记录的数量;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;api.domain/user/offset/10 指定返回记录的开始位置;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;api.domain/user/animal_type_id/1 指定筛选条件
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;api.domain/user/page/2/per_page/100 指定第几页，以及每页的记录数;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;api.domain/user/sortby/name/order/asc 指定返回结果按照哪个属性排序，以及排序顺序
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="分页操作"&gt;&lt;a href="#%e5%88%86%e9%a1%b5%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;分页操作
&lt;/h3&gt;&lt;p&gt;当返回某个资源的列表时，如果要返回的数目特别多，比如 github 的 &lt;code&gt;/users&lt;/code&gt;，就需要使用分页分批次按照需要来返回特定数量的结果。&lt;/p&gt;
&lt;p&gt;分页的实现会用到上面提到的 url query，通过两个参数来控制要返回的资源结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;per_page：每页返回多少资源，如果没提供会使用预设的默认值；这个数量也是有一个最大值，不然用户把它设置成一个非常大的值（比如99999999）也失去了设计的初衷。&lt;/li&gt;
&lt;li&gt;page：要获取哪一页的资源，默认是第一页。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="状态码-status-code"&gt;&lt;a href="#%e7%8a%b6%e6%80%81%e7%a0%81-status-code" class="header-anchor"&gt;&lt;/a&gt;状态码 Status Code
&lt;/h2&gt;&lt;p&gt;HTTP 应答中，需要带一个很重要的字段：status code。它说明了请求的大致情况，是否正常完成、需要进一步处理、出现了什么错误，对于客户端非常重要。状态码都是三位的整数，大概分成了几个区间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2XX：请求正常处理并返回&lt;/li&gt;
&lt;li&gt;3XX：重定向，请求的资源位置发生变化&lt;/li&gt;
&lt;li&gt;4XX：客户端发送的请求有错误&lt;/li&gt;
&lt;li&gt;5XX：服务器端错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 HTTP API 设计中，经常用到的状态码以及它们的意义如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状态码&lt;/th&gt;
&lt;th&gt;LABEL&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;OK&lt;/td&gt;
&lt;td&gt;请求成功接收并处理，一般响应中都会有 body&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;Created&lt;/td&gt;
&lt;td&gt;请求已完成，并导致了一个或者多个资源被创建，最常用在 POST 创建资源的时候&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;Accepted&lt;/td&gt;
&lt;td&gt;请求已经接收并开始处理，但是处理还没有完成。一般用在异步处理的情况，响应 body 中应该告诉客户端去哪里查看任务的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;No Content&lt;/td&gt;
&lt;td&gt;请求已经处理完成，但是没有信息要返回，经常用在 PUT 更新资源的时候（客户端提供资源的所有属性，因此不需要服务端返回）。如果有重要的 metadata，可以放到头部返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;301&lt;/td&gt;
&lt;td&gt;Moved Permanently&lt;/td&gt;
&lt;td&gt;请求的资源已经永久性地移动到另外一个地方，后续所有的请求都应该直接访问新地址。服务端会把新地址写在 &lt;code&gt;Location&lt;/code&gt; 头部字段，方便客户端使用。允许客户端把 POST 请求修改为 GET。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;304&lt;/td&gt;
&lt;td&gt;Not Modified&lt;/td&gt;
&lt;td&gt;请求的资源和之前的版本一样，没有发生改变。用来缓存资源，和条件性请求（conditional request）一起出现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;307&lt;/td&gt;
&lt;td&gt;Temporary Redirect&lt;/td&gt;
&lt;td&gt;目标资源暂时性地移动到新的地址，客户端需要去新地址进行操作，但是不能修改请求的方法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;308&lt;/td&gt;
&lt;td&gt;Permanent Redirect&lt;/td&gt;
&lt;td&gt;和 301 类似，除了客户端不能修改原请求的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;400&lt;/td&gt;
&lt;td&gt;Bad Request&lt;/td&gt;
&lt;td&gt;客户端发送的请求有错误（请求语法错误，body 数据格式有误，body 缺少必须的字段等），导致服务端无法处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;403&lt;/td&gt;
&lt;td&gt;Forbidden&lt;/td&gt;
&lt;td&gt;服务器端接收到并理解客户端的请求，但是客户端的权限不足。比如，普通用户想操作只有管理员才有权限的资源。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;Not Found&lt;/td&gt;
&lt;td&gt;客户端要访问的资源不存在，链接失效或者客户端伪造 URL 的时候会遇到这个情况&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;405&lt;/td&gt;
&lt;td&gt;Method Not Allowed&lt;/td&gt;
&lt;td&gt;服务端接收到了请求，而且要访问的资源也存在，但是不支持对应的方法。服务端必须返回&lt;code&gt;Allow&lt;/code&gt;头部，告诉客户端哪些方法是允许的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;415&lt;/td&gt;
&lt;td&gt;Unsupported Media Type&lt;/td&gt;
&lt;td&gt;服务端不支持客户端请求的资源格式，一般是因为客户端在&lt;code&gt;Content-Type&lt;/code&gt;或者&lt;code&gt;Content-Encoding&lt;/code&gt;中申明了希望的返回格式，但是服务端没有实现。比如，客户端希望收到xml返回，但是服务端支持Json&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;429&lt;/td&gt;
&lt;td&gt;Too Many Requests&lt;/td&gt;
&lt;td&gt;客户端在规定的时间里发送了太多请求，在进行限流的时候会用到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;Internal Server Error&lt;/td&gt;
&lt;td&gt;服务器内部错误，导致无法完成请求的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;503&lt;/td&gt;
&lt;td&gt;Service Unavailable&lt;/td&gt;
&lt;td&gt;服务器因为负载过高或者维护，暂时无法提供服务。服务器端应该返回 Retry-After 头部，告诉客户端过一段时间再来重试&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;针对于状态码，请看此文章：&lt;a class="link" href="https://blog.debuginn.com/p/http-status-code/" target="_blank" rel="noopener"
&gt;HTTP常见状态码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="错误处理"&gt;&lt;a href="#%e9%94%99%e8%af%af%e5%a4%84%e7%90%86" class="header-anchor"&gt;&lt;/a&gt;错误处理
&lt;/h2&gt;&lt;p&gt;如果出错的话，在 response body 中通过 &lt;code&gt;message&lt;/code&gt; 给出明确的信息。&lt;/p&gt;
&lt;p&gt;比如客户端发送的请求有错误，一般会返回4XX Bad Request结果。这个结果很模糊，给出错误 message 的话，能更好地让客户端知道具体哪里有问题，进行快速修改。&lt;/p&gt;
&lt;p&gt;如果请求的 JSON 数据无法解析，会返回Problems parsing JSON；&lt;/p&gt;
&lt;p&gt;如果缺少必要的 filed，会返回422 Unprocessable Entity，除了 message 之外，还通过errors给出了哪些 field 缺少了，能够方便调用方快速排错。&lt;/p&gt;
&lt;p&gt;基本的思路就是尽可能提供更准确的错误信息：比如数据不是正确的 json，缺少必要的字段，字段的值不符合规定…… 而不是直接说“请求错误”之类的信息。&lt;/p&gt;
&lt;h2 id="验证及授权"&gt;&lt;a href="#%e9%aa%8c%e8%af%81%e5%8f%8a%e6%8e%88%e6%9d%83" class="header-anchor"&gt;&lt;/a&gt;验证及授权
&lt;/h2&gt;&lt;p&gt;一般来说，让任何人随意访问公开的 API 是不好的做法。验证和授权是两件事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证（Authentication）是为了确定用户是其声明的身份，比如提供账户的密码。不然的话，任何人伪造成其他身份（比如其他用户或者管理员）是非常危险的&lt;/li&gt;
&lt;li&gt;授权（Authorization）是为了保证用户有对请求资源特定操作的权限。比如用户的私人信息只能自己能访问，其他人无法看到；有些特殊的操作只能管理员可以操作，其他用户有只读的权限等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果没有通过验证（提供的用户名和密码不匹配，token 不正确等），需要返回&lt;code&gt;401 Unauthorized&lt;/code&gt;状态码，并在 body 中说明具体的错误信息；而没有被授权访问的资源操作，需要返回&lt;code&gt;403 Forbidden&lt;/code&gt;状态码，还有详细的错误信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：对某些用户未被授权访问的资源操作返回&lt;code&gt;404 Not Found&lt;/code&gt;，目的是为了防止私有资源的泄露（比如黑客可以自动化试探用户的私有资源，返回 403 的话，就等于告诉黑客用户有这些私有的资源，无异于是给黑客提供了方向）。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="hypermedia-api"&gt;&lt;a href="#hypermedia-api" class="header-anchor"&gt;&lt;/a&gt;Hypermedia API
&lt;/h2&gt;&lt;p&gt;RESTful API 最好做到 Hypermedia，即返回结果中提供链接，连向其他API方法，使得用户不查文档，也知道下一步应该做什么。&lt;/p&gt;
&lt;p&gt;比如访问 api.github.com，就可以看到 Github API 支持的资源操作。&lt;/p&gt;
&lt;h2 id="易读的-api-接口文档"&gt;&lt;a href="#%e6%98%93%e8%af%bb%e7%9a%84-api-%e6%8e%a5%e5%8f%a3%e6%96%87%e6%a1%a3" class="header-anchor"&gt;&lt;/a&gt;易读的 API 接口文档
&lt;/h2&gt;&lt;p&gt;API 最终是给人使用的，不管是公司内部，还是公开的 API 都是一样。即使我们遵循了上面提到的所有规范，设计的 API 非常优雅，用户还是不知道怎么使用我们的 API。最后一步，但非常重要的一步是：为你的 API 编写优秀的文档。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：对每个请求以及返回的参数给出说明，最好给出一个详细而完整的示例。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="参考资料"&gt;&lt;a href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" class="header-anchor"&gt;&lt;/a&gt;参考资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener"
&gt;RESTful API 设计指南 - 阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://cizixs.com/2016/12/12/restful-api-design-guide/" target="_blank" rel="noopener"
&gt;跟着 Github 学习 Restful HTTP API 设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://restfulapi.net/" target="_blank" rel="noopener"
&gt;REST API Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm" target="_blank" rel="noopener"
&gt;Representational State Transfer (REST) - Roy Fielding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>我们是如何用 Prometheus 对网关进行监控的</title><link>https://blog.debuginn.com/p/prometheus-gateway/</link><pubDate>Sat, 11 Dec 2021 20:00:00 +0800</pubDate><guid>https://blog.debuginn.com/p/prometheus-gateway/</guid><description>&lt;img src="https://webp.debuginn.com/202302262145770.jpg" alt="Featured image of post 我们是如何用 Prometheus 对网关进行监控的" /&gt;&lt;p&gt;近期，我们对 APP 网关 Gateway 做了升级，由于项目创建时间过早（6年前的项目），那时候还没有好的包管理工具，使用的是最原始的 Go Path 来进行项目的依赖管理，历史包袱比较重，项目中很多的第三方引用都是直接将代码拷贝到项目目录下，升级与维护起来特别麻烦，升级之后就是现在官方主推的是 Go module 包管理方式。&lt;/p&gt;
&lt;p&gt;解决了上面的这个痛点，网关程序就可以集成一些业界主流的基础工具，升级与维护起来就简单多了。&lt;/p&gt;
&lt;p&gt;言归正传，本文主要是讲的我们是如何用 Prometheus 对网关进行监控的，之前我们的网关程序也是集成了我们公司开源打点监控工具 &lt;a class="link" href="https://github.com/open-falcon/falcon-plus" target="_blank" rel="noopener"
&gt;Open falcon&lt;/a&gt;，并且使用 Grafana 进行绘图并查看，但是为啥我们不再继续使用了？之后我们为啥拥抱了 Prometheus 生态？还有一些打点、报警、绘图的思考，还有一些我们在使用的过程中出现的问题以及解决方案，一一讲解一下。&lt;/p&gt;
&lt;h2 id="抛弃-open-falcon-拥抱-prometheus"&gt;&lt;a href="#%e6%8a%9b%e5%bc%83-open-falcon-%e6%8b%a5%e6%8a%b1-prometheus" class="header-anchor"&gt;&lt;/a&gt;抛弃 Open falcon 拥抱 Prometheus
&lt;/h2&gt;&lt;p&gt;在决定使用 Prometheus 之前，我们的 Gateway 使用的是 Open falcon，但是一直存在着一个对于我们而言的痛点，就是作为网关程序，历史维护的路由太多了，接口可用性及接口报错无法聚合报警，也就是我们的监控体系存在着盲区，这个对我们而言来说是最为致命的，那个接口出现了问题会直接导致用户的使用，并且我们使用的那些上游服务出现问题我们也无法及时感知。&lt;/p&gt;
&lt;p&gt;使用 Prometheus 最主要的是我们可以通过 PromQL 语法进行正则匹配，实现对某个或多个接口的聚合计算并报警，这样就可以解决我们无法聚合报警的一个痛点。&lt;/p&gt;
&lt;h2 id="打点绘图报警"&gt;&lt;a href="#%e6%89%93%e7%82%b9%e7%bb%98%e5%9b%be%e6%8a%a5%e8%ad%a6" class="header-anchor"&gt;&lt;/a&gt;打点、绘图、报警
&lt;/h2&gt;&lt;h3 id="打点-全面量小"&gt;&lt;a href="#%e6%89%93%e7%82%b9-%e5%85%a8%e9%9d%a2%e9%87%8f%e5%b0%8f" class="header-anchor"&gt;&lt;/a&gt;打点 全面、量小
&lt;/h3&gt;&lt;p&gt;作为业务使用，怎么设计点位，既可以满足报警使用，对每个接口进行各项指标的监控，同时要保证点位数据是可穷举的（避免出现 OOM）和产生数据量比较小。简而言之，就是“&lt;strong&gt;监控要全面、打点数据量要小&lt;/strong&gt;”，因为数据量大的话在 Prometheus 拉取指标的时间及周期就不得不设置的过大，这样的后果就是造成图的绘制缓慢甚至超时，同时报警也失去了实效性。 我们网关使用的是 http 协议，可以充分利用 Go 的 &lt;code&gt;net/http&lt;/code&gt; 特性，使用中间件设计，对请求与返回进行打点，于是我们是这样设计的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对任意一个请求做一个 qps 的打点记录（无任何的业务参与其中）；&lt;/li&gt;
&lt;li&gt;对单个路由请求进行打点（区分业务状态码）；&lt;/li&gt;
&lt;li&gt;对单个路由请求进行耗时打点（区分业务状态码）。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;请求路由&lt;/strong&gt; 按照业界通用的设计：&lt;code&gt;/version/model/action&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;以上的场景，仅仅使用&lt;a class="link" href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener"
&gt;指标类型&lt;/a&gt;中的两种 Counter（计数器） 和 Histogram（直方图）就可以满足我们打点需求。&lt;/p&gt;
&lt;h3 id="绘图-清晰快速"&gt;&lt;a href="#%e7%bb%98%e5%9b%be-%e6%b8%85%e6%99%b0%e5%bf%ab%e9%80%9f" class="header-anchor"&gt;&lt;/a&gt;绘图 清晰、快速
&lt;/h3&gt;&lt;p&gt;构建一栋房子所需的材料都准备好了，准备建造， building&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;点位指标收集到了，接下来就是对点位进行各个维度的拼装，来呈现我们想要的图，这里解答一下为什么我们要把业务状态码打到指标中去，以及我们是如何使用的：我们的系统设计采用业务封装错误码，只要是传输调用链路没有问题，所有的场景都走业务状态码，类似的返回解决如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-json" data-lang="json"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;desc&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;result&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ok&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;code 为 0，代表当前请求是正常的，返回数据会封装在 data 中；&lt;/li&gt;
&lt;li&gt;code 不为 0，代表着当前请求存在业务上可捕获或者自定义的错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为网关程序，与下游微服务采用相同的接口设计，对我们现在的打点设计也是非常友好的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同样的，有的服务使用的是 Restful API 思想，使用的是 http 标准状态码，那就是 200 代表着成功，非 200 代表着业务或者系统存在错误，当然 5XX 错误可以单独拿出来做可用性或者细化的报警。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;之所以打点记录业务状态码，好处如下：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对业务状态码打点，可以对某个业务上的特定错误进行捕捉，看图及报警都是非常便捷的；&lt;/li&gt;
&lt;li&gt;不影响对接口可用性进行计算，可以多维度聚合计算可用性（根据业务定义而言）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，打点指标设置的&lt;strong&gt;粒度越小&lt;/strong&gt;，对应的点位的&lt;strong&gt;存储大小以及聚合运算&lt;/strong&gt;的代价也是成倍的提高的。 铺垫了好久，说一下我们是怎么进行绘图的，在打点的时候讲到使用 Counter、Histogram 进行打点，绘图的时候我们主要从以下三点进行可视化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接口的 qps 看图呈现；&lt;/li&gt;
&lt;li&gt;接口可用性（Pxx）看图呈现；&lt;/li&gt;
&lt;li&gt;接口请求PXX 耗时统计 看图呈现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="接口-qps-看图绘图"&gt;&lt;a href="#%e6%8e%a5%e5%8f%a3-qps-%e7%9c%8b%e5%9b%be%e7%bb%98%e5%9b%be" class="header-anchor"&gt;&lt;/a&gt;接口 qps 看图绘图
&lt;/h4&gt;&lt;p&gt;qps 的点位数据怎么打？就是充分利用中间件的设计，在一个请求 prepare 阶段就将该路由记录并获取进行打点。 使用 &lt;a class="link" href="https://prometheus.io/docs/prometheus/latest/querying/basics/" target="_blank" rel="noopener"
&gt;PromQL 语句&lt;/a&gt;就可以实现对对应信息看图的绘制。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-graphql" data-lang="graphql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;过去1分钟&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;每秒请求&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;qps&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;求和函数&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;计算范围向量中时间序列的每秒平均增长率&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;api_request_alert_counter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;指标名称&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;和&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;都是&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;kv参数&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;api_request_alert_counter&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="py"&gt;1m&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id="接口可用性看图绘图"&gt;&lt;a href="#%e6%8e%a5%e5%8f%a3%e5%8f%af%e7%94%a8%e6%80%a7%e7%9c%8b%e5%9b%be%e7%bb%98%e5%9b%be" class="header-anchor"&gt;&lt;/a&gt;接口可用性看图绘图
&lt;/h4&gt;&lt;p&gt;接口可用性就是验证当前接口在单位时间内的处理正确的请求数目比上总体的请求数目，在打点的时候也讲到，我们业务代码 0 代表着正确返回，非 0 的代表着存在问题，这样就可以很简单的算出来接口的可用性。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-graphql" data-lang="graphql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;过去1分钟&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;每秒接口可用性&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;求和函数&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;计算范围向量中时间序列的每秒平均增长率&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;api_request_cost_status_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;指标名称&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;和&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;都是&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;kv参数&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;api_request_cost_status_count&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;code&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="py"&gt;1m&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;api_request_cost_status_count&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;code&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="py"&gt;1m&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;api_request_cost_status_count&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;code&lt;/span&gt;&lt;span class="p"&gt;!=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="py"&gt;1m&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;100&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id="接口-pxx-耗时统计看图绘图"&gt;&lt;a href="#%e6%8e%a5%e5%8f%a3-pxx-%e8%80%97%e6%97%b6%e7%bb%9f%e8%ae%a1%e7%9c%8b%e5%9b%be%e7%bb%98%e5%9b%be" class="header-anchor"&gt;&lt;/a&gt;接口 Pxx 耗时统计看图绘图
&lt;/h4&gt;&lt;p&gt;接口耗时统计打点依赖 prometheus api 中的 histogram 实现，在呈现打点耗时的时候有时候局部的某个耗时过长并不能进行直接反应整体的，我们只需要关注 SLO （服务级别目标）目标下是否达标即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-graphql" data-lang="graphql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;过去1分钟&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;95&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;请求最大耗时统计&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;histogram_quantile&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="py"&gt;1000&lt;/span&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;histogram_quantile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;0&lt;/span&gt;&lt;span class="mf"&gt;.95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;api_request_cost_status_bucket&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="py"&gt;service_name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="py"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;v1.app.+&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="py"&gt;1m&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="py"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="py"&gt;le&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;histogram_quantile(φ float, b instant-vector) 从 bucket 类型的向量 b 中计算 φ (0 ≤ φ ≤ 1) 分位数（百分位数的一般形式）的样本的最大值。（有关 φ 分位数的详细说明以及直方图指标类型的使用，请参阅直方图和摘要）。向量 b 中的样本是每个 bucket 的采样点数量。每个样本的 labels 中必须要有 le 这个 label 来表示每个 bucket 的上边界，没有 le 标签的样本会被忽略。直方图指标类型自动提供带有 _bucket 后缀和相应标签的时间序列。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;上面是官方对于 &lt;a class="link" href="https://prometheus.io/docs/prometheus/latest/querying/functions/#histogram_quantile" target="_blank" rel="noopener"
&gt;histogram_quantile&lt;/a&gt; 函数的解释，关注的是 设置 φ 分位数 对应的 bucket 桶，但是实际中有 分位数计算误差的问题。 Prometheus 官方 histogram 设置的默认 buckets 如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;DefBuckets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;.005&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.025&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里可以看到我们的接口指标分界时间，每一个请求的耗时都会根据具体的设置的 bucket 的范围落到不同的区间内，这里设置的桶的范围直接影响到计算值的准确度（上面所提到的 分位数计算误差问题）。&lt;/p&gt;
&lt;h3 id="报警-及时准确"&gt;&lt;a href="#%e6%8a%a5%e8%ad%a6-%e5%8f%8a%e6%97%b6%e5%87%86%e7%a1%ae" class="header-anchor"&gt;&lt;/a&gt;报警 及时、准确
&lt;/h3&gt;&lt;p&gt;使用 Prometheus 的 Alert Manager 就可以对服务进行报警，但是如何及时又准确的报警，已经如何合理设置报警，我们就要引入 SLO 的概念，在实际的业务场景中，我们会发现某个接口某个时间段的耗时是一组离散的点：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302262154973.png"
loading="lazy"
alt="请求时间数量分布图"
&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到大部分的请求可以在 1s 之内就可以快速的返回，只有个别的请求可能由于网络的抖动、应用短暂升级或者其他因素导致过慢，若是我们直接设置接口最大请求耗时超过2s（持续一个时间段），那我们就面临着疯狂的告警轰炸，同时告警也就失去了针对某个接口的异常活动做出提示供开发人员处理的意义。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;服务级别目标&lt;/strong&gt;（Service-level objective，SLO）是指服务提供者向客户作出的服务保证的量化指标。服务级别目标与服务级别协议有所不同。服务级别协议是指服务提供者向客户保证会提供什么样的服务，服务级别目标则是服务的量化说明。
&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E7%BA%A7%E5%88%AB%E7%9B%AE%E6%A0%87" target="_blank" rel="noopener"
&gt;Service-level objective&lt;/a&gt; 服务级别目标&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302262155955.png"
loading="lazy"
alt="请求时间数量分布图"
&gt;&lt;/p&gt;
&lt;p&gt;比方说我们发现上面的 90% 请求都在 1s 内返回，我们就可以只需要对 90% 请求耗时做监控分析其调用链路并告警。 举个栗子，比方说我们一个首页的接口 &lt;code&gt;/v1/home/page&lt;/code&gt; 99% 的请求可以在 500ms 内返回，只有个别的请求超过 2s+ 的时间，大多数情况下我们就不会关心这 1%的请求，那我们就可以定制一个 &lt;strong&gt;持续 1分钟首页 99% 请求耗时大于 1s&lt;/strong&gt;的报警，这样当我们收到报警的时候，我们就可以第一时间知道首页出现了问题，我们就可以根据报警及时处理。&lt;/p&gt;
&lt;p&gt;**业务的报警是与接口的实现与调用链路的复杂度是紧密结合在一起的，根据不同的业务场景，配置合理的报警才满足我们及时准确的要求。**反之就是配置过高不灵敏、往往线上已经出现了好久报警就是没有，配置过低，分分钟触发报警，对业务开发人员增加了排查问题的时间成本。&lt;/p&gt;
&lt;h2 id="遇到的问题"&gt;&lt;a href="#%e9%81%87%e5%88%b0%e7%9a%84%e9%97%ae%e9%a2%98" class="header-anchor"&gt;&lt;/a&gt;遇到的问题
&lt;/h2&gt;&lt;h3 id="收集指标过大拉取超时"&gt;&lt;a href="#%e6%94%b6%e9%9b%86%e6%8c%87%e6%a0%87%e8%bf%87%e5%a4%a7%e6%8b%89%e5%8f%96%e8%b6%85%e6%97%b6" class="header-anchor"&gt;&lt;/a&gt;收集指标过大拉取超时
&lt;/h3&gt;&lt;p&gt;由于我们是 gateway BFF 层做得指标，本身的路由的基数就比较大，热点路由就有好几百个，再算上对路由的打点、耗时、错误码等等的打点，导致我们每台机器的指标数量都比较庞大，最终指标汇总的时候下游的 prometheus 节点拉取经常出现耗时问题。&lt;/p&gt;
&lt;p&gt;前期解决方案比较粗暴，就是修改 prometheus job 的拉取频率及其超时时间，这样可以解决超时问题，但是带来的结果就是最后通过 grafana 看板进行看图包括报警收集上来的点位数据延迟大，并且随着我们指标的设置越来越多的话必然会出现超时问题。&lt;/p&gt;
&lt;p&gt;目前的解决方案就是做分布式，采用 prometheus &lt;a class="link" href="https://prometheus.io/docs/prometheus/latest/federation/" target="_blank" rel="noopener"
&gt;联邦集群&lt;/a&gt;的方式来解决指标收集过大的问题，采用了分布式，就可以将机器分组收集汇总，之后就可以成倍速的缩小 prometheus 拉取的压力。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302262157871.png"
loading="lazy"
alt="联邦集群设计"
&gt;&lt;/p&gt;
&lt;h3 id="动态收集机器指标"&gt;&lt;a href="#%e5%8a%a8%e6%80%81%e6%94%b6%e9%9b%86%e6%9c%ba%e5%99%a8%e6%8c%87%e6%a0%87" class="header-anchor"&gt;&lt;/a&gt;动态收集机器指标
&lt;/h3&gt;&lt;p&gt;因为我们机器都是部署在集群上并且会随着活动大促动态调整机器的数量，联邦集群中配置文件最重要的就是配置各个收集节点指标的 IP:Port ，我们不可能每次都去手动维护这个配置，成本比较高，那么我们就需要将配置动态写入，针对此问题，在 leader 的建议下，使用运维服务树拿到该节点下的机器的 Ip，使用脚本程序动态维护起来就非常方便了，默认 Prometheus 是 20s 读取一次配置。&lt;/p&gt;
&lt;h3 id="请求的耗时看图与报警不准确"&gt;&lt;a href="#%e8%af%b7%e6%b1%82%e7%9a%84%e8%80%97%e6%97%b6%e7%9c%8b%e5%9b%be%e4%b8%8e%e6%8a%a5%e8%ad%a6%e4%b8%8d%e5%87%86%e7%a1%ae" class="header-anchor"&gt;&lt;/a&gt;请求的耗时看图与报警不准确
&lt;/h3&gt;&lt;p&gt;这个问题是在我们的业务中，请求耗时最常见的是在 2s 之内返回，但是通过 Prometheus histogram 对应 1-2s 的请求会落在 le 为 2.5 桶中，导致报警误报，我们看日志中的请求在 1.* s 的都算在 2.5 的桶上，而报警的配置是 大于 2s， emmm&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;DefBuckets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;.005&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.025&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;之后根据我们的业务场景调整了一下，使用了自己的 CustomBuckets：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;CustomBuckets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;.01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.025&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="references"&gt;&lt;a href="#references" class="header-anchor"&gt;&lt;/a&gt;References
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class="link" href="https://prometheus.io/docs/" target="_blank" rel="noopener"
&gt;Prometheus 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://prometheus.fuckcloudnative.io/" target="_blank" rel="noopener"
&gt;Prometheus 翻译文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E7%BA%A7%E5%88%AB%E7%9B%AE%E6%A0%87" target="_blank" rel="noopener"
&gt;wiki SLO 服务级别目标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%9D%87%E8%A1%A1%E5%8C%96" target="_blank" rel="noopener"
&gt;wiki 累积直方图&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>我的 MacBook Pro 又满血复活啦</title><link>https://blog.debuginn.com/p/mbp-resurrection/</link><pubDate>Thu, 13 Aug 2020 20:18:06 +0800</pubDate><guid>https://blog.debuginn.com/p/mbp-resurrection/</guid><description>&lt;img src="https://webp.debuginn.com/202303011926862.jpg" alt="Featured image of post 我的 MacBook Pro 又满血复活啦" /&gt;&lt;p&gt;经过近两个星期的检测，维修 ?，我的 MacBook 满血复活了，事情是这样的，两周前我的电脑突然之间就黑屏，有充电反馈，键盘，Bar 和触控板均失灵，拿到公司 IT 部门，给我的意见是去售后 ?，紧接着到了周末去了售后，给我的解决方案是更换硬件，告诉我说要更换主板，也就代表着硬盘数据没有了，允悲，我同时给他说明针对于我两次修复蝶形键盘的经历，售后人员决定给我申请键盘也更换，心中多少有些安慰，于是他给了我一个维修周期，届时来领取就可以了。&lt;/p&gt;
&lt;p&gt;于是我就拿着维修单回去了，过了两天，接到了售后的电话，我本以为修好了，并没有，售后给我说做了检测，显示器也有问题，需要给我更换，这，，，不就是更换全部的部件么，直接给我换台多效率 ?，显然苹果并没有那么给我做，现在拿到手中的就是除了下底壳没有更换，其他全部更换的九成新新机，百感交集呀。&lt;/p&gt;
&lt;p&gt;不过，最终是修好了，在公司入职的这么多天也学习了很多东西，近期在不断的整理，后续会总结分享的，感谢一个陌生网友的关怀，?，一个高更新的博客&lt;del&gt;要跑路了&lt;/del&gt;，虽然技术很菜，分享的技术网上一大堆，但是经验是积累的，相信自己的努力? 最终会成为大牛的，加油，嘿嘿。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>搭建流媒体服务器 PingOS 平台搭建</title><link>https://blog.debuginn.com/p/pingos-build-sever/</link><pubDate>Fri, 03 Apr 2020 23:19:45 +0800</pubDate><guid>https://blog.debuginn.com/p/pingos-build-sever/</guid><description>&lt;img src="https://webp.debuginn.com/202303121930279.jpg" alt="Featured image of post 搭建流媒体服务器 PingOS 平台搭建" /&gt;&lt;p&gt;近期由于工作原因需要更换公司原有 RTMP 协议推流，由于 Flash 插件今年年底就淘汰使用，并且一直在寻找一种并发好、延时低、同时便于回放功能的应用，在网上找到了基于Nginx + FFmpeg 推流的解决方案，可以实现 HLS 协议推流，看项目介绍可以实现 HLS+ 协议，这个工具安装比较便捷。&lt;/p&gt;
&lt;p&gt;首先介绍一下这个开源的项目，欢迎给他们 star，谢谢。&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://github.com/pingostack/pingos" target="_blank" rel="noopener"
&gt;https://github.com/pingostack/pingos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官网地址：&lt;a class="link" href="https://pingos.io/" target="_blank" rel="noopener"
&gt;https://pingos.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="安装"&gt;&lt;a href="#%e5%ae%89%e8%a3%85" class="header-anchor"&gt;&lt;/a&gt;安装
&lt;/h2&gt;&lt;p&gt;项目文档：&lt;a class="link" href="https://pingos.io/docs/zh/quick-start" target="_blank" rel="noopener"
&gt;https://pingos.io/docs/zh/quick-start&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在官方网站的项目文档中讲解的不是很清晰，特别是针对新手来说是有一定的难度，我这里使用的是 Linux CentOS 7.4 64位环境，需要提前安装 Git 应用，这个就不详细讲解了，接下来讲一下如何安装：&lt;/p&gt;
&lt;h3 id="1-下载源码"&gt;&lt;a href="#1-%e4%b8%8b%e8%bd%bd%e6%ba%90%e7%a0%81" class="header-anchor"&gt;&lt;/a&gt;1 下载源码
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git clone https://github.com/pingostack/pingos.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="2-快速安装"&gt;&lt;a href="#2-%e5%bf%ab%e9%80%9f%e5%ae%89%e8%a3%85" class="header-anchor"&gt;&lt;/a&gt;2 快速安装
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; pingos
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./release.sh -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="3-启动服务"&gt;&lt;a href="#3-%e5%90%af%e5%8a%a8%e6%9c%8d%e5%8a%a1" class="header-anchor"&gt;&lt;/a&gt;3 启动服务
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/pingos/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./sbin/nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="配置"&gt;&lt;a href="#%e9%85%8d%e7%bd%ae" class="header-anchor"&gt;&lt;/a&gt;配置
&lt;/h2&gt;&lt;p&gt;一般情况下，安装完毕 PingOS 后就可以使用了，通过配置文件可以看到 nginx 占用端口为80，rtmp 端口占用为1935 。&lt;/p&gt;
&lt;p&gt;但是在实际情况下，80 端口一般是使用于 HTTP 等服务，所以说尽量将服务端口设置为非 80 端口，由于使用了阿里云，可以关闭防火墙，同时配置安全组策略将 8080 入端口设置为允许状态。&lt;/p&gt;
&lt;p&gt;下面是修改好的配置文件，位置为：&lt;code&gt;/usr/local/pingos/conf/nginx.conf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt; 10
&lt;/span&gt;&lt;span class="lnt"&gt; 11
&lt;/span&gt;&lt;span class="lnt"&gt; 12
&lt;/span&gt;&lt;span class="lnt"&gt; 13
&lt;/span&gt;&lt;span class="lnt"&gt; 14
&lt;/span&gt;&lt;span class="lnt"&gt; 15
&lt;/span&gt;&lt;span class="lnt"&gt; 16
&lt;/span&gt;&lt;span class="lnt"&gt; 17
&lt;/span&gt;&lt;span class="lnt"&gt; 18
&lt;/span&gt;&lt;span class="lnt"&gt; 19
&lt;/span&gt;&lt;span class="lnt"&gt; 20
&lt;/span&gt;&lt;span class="lnt"&gt; 21
&lt;/span&gt;&lt;span class="lnt"&gt; 22
&lt;/span&gt;&lt;span class="lnt"&gt; 23
&lt;/span&gt;&lt;span class="lnt"&gt; 24
&lt;/span&gt;&lt;span class="lnt"&gt; 25
&lt;/span&gt;&lt;span class="lnt"&gt; 26
&lt;/span&gt;&lt;span class="lnt"&gt; 27
&lt;/span&gt;&lt;span class="lnt"&gt; 28
&lt;/span&gt;&lt;span class="lnt"&gt; 29
&lt;/span&gt;&lt;span class="lnt"&gt; 30
&lt;/span&gt;&lt;span class="lnt"&gt; 31
&lt;/span&gt;&lt;span class="lnt"&gt; 32
&lt;/span&gt;&lt;span class="lnt"&gt; 33
&lt;/span&gt;&lt;span class="lnt"&gt; 34
&lt;/span&gt;&lt;span class="lnt"&gt; 35
&lt;/span&gt;&lt;span class="lnt"&gt; 36
&lt;/span&gt;&lt;span class="lnt"&gt; 37
&lt;/span&gt;&lt;span class="lnt"&gt; 38
&lt;/span&gt;&lt;span class="lnt"&gt; 39
&lt;/span&gt;&lt;span class="lnt"&gt; 40
&lt;/span&gt;&lt;span class="lnt"&gt; 41
&lt;/span&gt;&lt;span class="lnt"&gt; 42
&lt;/span&gt;&lt;span class="lnt"&gt; 43
&lt;/span&gt;&lt;span class="lnt"&gt; 44
&lt;/span&gt;&lt;span class="lnt"&gt; 45
&lt;/span&gt;&lt;span class="lnt"&gt; 46
&lt;/span&gt;&lt;span class="lnt"&gt; 47
&lt;/span&gt;&lt;span class="lnt"&gt; 48
&lt;/span&gt;&lt;span class="lnt"&gt; 49
&lt;/span&gt;&lt;span class="lnt"&gt; 50
&lt;/span&gt;&lt;span class="lnt"&gt; 51
&lt;/span&gt;&lt;span class="lnt"&gt; 52
&lt;/span&gt;&lt;span class="lnt"&gt; 53
&lt;/span&gt;&lt;span class="lnt"&gt; 54
&lt;/span&gt;&lt;span class="lnt"&gt; 55
&lt;/span&gt;&lt;span class="lnt"&gt; 56
&lt;/span&gt;&lt;span class="lnt"&gt; 57
&lt;/span&gt;&lt;span class="lnt"&gt; 58
&lt;/span&gt;&lt;span class="lnt"&gt; 59
&lt;/span&gt;&lt;span class="lnt"&gt; 60
&lt;/span&gt;&lt;span class="lnt"&gt; 61
&lt;/span&gt;&lt;span class="lnt"&gt; 62
&lt;/span&gt;&lt;span class="lnt"&gt; 63
&lt;/span&gt;&lt;span class="lnt"&gt; 64
&lt;/span&gt;&lt;span class="lnt"&gt; 65
&lt;/span&gt;&lt;span class="lnt"&gt; 66
&lt;/span&gt;&lt;span class="lnt"&gt; 67
&lt;/span&gt;&lt;span class="lnt"&gt; 68
&lt;/span&gt;&lt;span class="lnt"&gt; 69
&lt;/span&gt;&lt;span class="lnt"&gt; 70
&lt;/span&gt;&lt;span class="lnt"&gt; 71
&lt;/span&gt;&lt;span class="lnt"&gt; 72
&lt;/span&gt;&lt;span class="lnt"&gt; 73
&lt;/span&gt;&lt;span class="lnt"&gt; 74
&lt;/span&gt;&lt;span class="lnt"&gt; 75
&lt;/span&gt;&lt;span class="lnt"&gt; 76
&lt;/span&gt;&lt;span class="lnt"&gt; 77
&lt;/span&gt;&lt;span class="lnt"&gt; 78
&lt;/span&gt;&lt;span class="lnt"&gt; 79
&lt;/span&gt;&lt;span class="lnt"&gt; 80
&lt;/span&gt;&lt;span class="lnt"&gt; 81
&lt;/span&gt;&lt;span class="lnt"&gt; 82
&lt;/span&gt;&lt;span class="lnt"&gt; 83
&lt;/span&gt;&lt;span class="lnt"&gt; 84
&lt;/span&gt;&lt;span class="lnt"&gt; 85
&lt;/span&gt;&lt;span class="lnt"&gt; 86
&lt;/span&gt;&lt;span class="lnt"&gt; 87
&lt;/span&gt;&lt;span class="lnt"&gt; 88
&lt;/span&gt;&lt;span class="lnt"&gt; 89
&lt;/span&gt;&lt;span class="lnt"&gt; 90
&lt;/span&gt;&lt;span class="lnt"&gt; 91
&lt;/span&gt;&lt;span class="lnt"&gt; 92
&lt;/span&gt;&lt;span class="lnt"&gt; 93
&lt;/span&gt;&lt;span class="lnt"&gt; 94
&lt;/span&gt;&lt;span class="lnt"&gt; 95
&lt;/span&gt;&lt;span class="lnt"&gt; 96
&lt;/span&gt;&lt;span class="lnt"&gt; 97
&lt;/span&gt;&lt;span class="lnt"&gt; 98
&lt;/span&gt;&lt;span class="lnt"&gt; 99
&lt;/span&gt;&lt;span class="lnt"&gt;100
&lt;/span&gt;&lt;span class="lnt"&gt;101
&lt;/span&gt;&lt;span class="lnt"&gt;102
&lt;/span&gt;&lt;span class="lnt"&gt;103
&lt;/span&gt;&lt;span class="lnt"&gt;104
&lt;/span&gt;&lt;span class="lnt"&gt;105
&lt;/span&gt;&lt;span class="lnt"&gt;106
&lt;/span&gt;&lt;span class="lnt"&gt;107
&lt;/span&gt;&lt;span class="lnt"&gt;108
&lt;/span&gt;&lt;span class="lnt"&gt;109
&lt;/span&gt;&lt;span class="lnt"&gt;110
&lt;/span&gt;&lt;span class="lnt"&gt;111
&lt;/span&gt;&lt;span class="lnt"&gt;112
&lt;/span&gt;&lt;span class="lnt"&gt;113
&lt;/span&gt;&lt;span class="lnt"&gt;114
&lt;/span&gt;&lt;span class="lnt"&gt;115
&lt;/span&gt;&lt;span class="lnt"&gt;116
&lt;/span&gt;&lt;span class="lnt"&gt;117
&lt;/span&gt;&lt;span class="lnt"&gt;118
&lt;/span&gt;&lt;span class="lnt"&gt;119
&lt;/span&gt;&lt;span class="lnt"&gt;120
&lt;/span&gt;&lt;span class="lnt"&gt;121
&lt;/span&gt;&lt;span class="lnt"&gt;122
&lt;/span&gt;&lt;span class="lnt"&gt;123
&lt;/span&gt;&lt;span class="lnt"&gt;124
&lt;/span&gt;&lt;span class="lnt"&gt;125
&lt;/span&gt;&lt;span class="lnt"&gt;126
&lt;/span&gt;&lt;span class="lnt"&gt;127
&lt;/span&gt;&lt;span class="lnt"&gt;128
&lt;/span&gt;&lt;span class="lnt"&gt;129
&lt;/span&gt;&lt;span class="lnt"&gt;130
&lt;/span&gt;&lt;span class="lnt"&gt;131
&lt;/span&gt;&lt;span class="lnt"&gt;132
&lt;/span&gt;&lt;span class="lnt"&gt;133
&lt;/span&gt;&lt;span class="lnt"&gt;134
&lt;/span&gt;&lt;span class="lnt"&gt;135
&lt;/span&gt;&lt;span class="lnt"&gt;136
&lt;/span&gt;&lt;span class="lnt"&gt;137
&lt;/span&gt;&lt;span class="lnt"&gt;138
&lt;/span&gt;&lt;span class="lnt"&gt;139
&lt;/span&gt;&lt;span class="lnt"&gt;140
&lt;/span&gt;&lt;span class="lnt"&gt;141
&lt;/span&gt;&lt;span class="lnt"&gt;142
&lt;/span&gt;&lt;span class="lnt"&gt;143
&lt;/span&gt;&lt;span class="lnt"&gt;144
&lt;/span&gt;&lt;span class="lnt"&gt;145
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user root&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;daemon on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;master_process on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;worker_processes 1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#worker_rlimit 4g;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#error_log logs/error.log;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#error_log logs/error.log notice;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;error_log logs/error.log info&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;worker_rlimit_nofile 102400&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;worker_rlimit_core 2G&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;working_directory /tmp&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#pid logs/nginx.pid;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;events &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# use epoll;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; worker_connections 1024&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; multi_listen unix:/tmp/http 8080&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; multi_listen unix:/tmp/rtmp 1935&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;stream_zone &lt;span class="nv"&gt;buckets&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="nv"&gt;streams&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4096&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;rtmp &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; log_format log_bandwidth &lt;span class="s1"&gt;&amp;#39;{&amp;#34;app&amp;#34;:&amp;#34;$app&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;$name&amp;#34;,&amp;#34;bitrate&amp;#34;:$bitrate,&amp;#34;args&amp;#34;:&amp;#34;$args&amp;#34;,&amp;#34;timestamp&amp;#34;:$ntp,&amp;#34;ts&amp;#34;:&amp;#34;$time_local&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;$command&amp;#34;,&amp;#34;remote_addr&amp;#34;:&amp;#34;$remote_addr&amp;#34;,&amp;#34;domain&amp;#34;:&amp;#34;$domain&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; access_log logs/bandwidth.log log_bandwidth &lt;span class="nv"&gt;trunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;60s&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; server &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; listen 1935&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; serverid 000&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; out_queue 2048&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; server_name localhost&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; application live &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; rtmp_auto_pull on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; rtmp_auto_pull_port unix:/tmp/rtmp&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# live_record on;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# live_record_path /tmp/record;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# recorder r1{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# record all;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# record_path /tmp/record;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# }&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# exec_publish bash -c &amp;#34;ffmepg -i rtmp://127.0.0.1/live/$name -c copy /tmp/mp4/$name-$starttime.mp4&amp;#34;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; live on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls_path /tmp/hls&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls_fragment 4000ms&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# hls_max_fragment 6000ms;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls_playlist_length 12000ms&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls2memory on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; mpegts_cache_time 20s&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls2_fragment 1300ms&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls2_max_fragment 1600ms&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls2_playlist_length 3900ms&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; wait_key on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; wait_video on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; cache_time 3s&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; low_latency off&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; fix_timestamp 2s&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# h265 codecid, default 12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hevc_codecid 12&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; include mime.types&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; default_type application/octet-stream&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; log_format main &lt;span class="s1"&gt;&amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s1"&gt;&amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_X-Forwarded-For&amp;#34; &amp;#34;$http_X-Real-IP&amp;#34; &amp;#34;$host&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; access_log logs/access.log main&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; sendfile on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;#tcp_nopush on;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;#keepalive_timeout 0;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; keepalive_timeout 65&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;#reset_server_name www.test1.com www.test2.com;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;#gzip on;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; server &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; listen 8080&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /rtmp_stat &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; rtmp_stat all&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; rtmp_stat_stylesheet /stat.xsl&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /xstat &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; rtmp_stat all&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /sys_stat &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; sys_stat&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /control &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; rtmp_control all&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /live &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; flv_live 1935&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; add_header &lt;span class="s1"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; add_header Cache-Control no-cache&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /ts &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ts_live &lt;span class="m"&gt;1935&lt;/span&gt; &lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;live&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /hls &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# Serve HLS fragments&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; types &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; application/vnd.apple.mpegurl m3u8&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; video/mp2t ts&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; root /tmp&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; add_header Cache-Control no-cache&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; add_header &lt;span class="s1"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location /hls2 &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; hls2_live &lt;span class="m"&gt;1935&lt;/span&gt; &lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;live&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; add_header &lt;span class="s1"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; add_header Cache-Control no-cache&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; location / &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; chunked_transfer_encoding on&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; root html/&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改完配置之后需要进行 nginx 服务重新载入等操作。&lt;/p&gt;
&lt;h2 id="命令"&gt;&lt;a href="#%e5%91%bd%e4%bb%a4" class="header-anchor"&gt;&lt;/a&gt;命令
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 进入到 PingOS 应用目录，下面所有操作皆以此目录下进行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/pingos/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 开启 nginx 服务器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./sbin/nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 检查 nginx 配置语法是否正确&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./sbin/nginx -t
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 重新加载 nginx 配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./sbin/nginx -s reload
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 停止 nginx 服务器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./sbin/nginx -s stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="推流"&gt;&lt;a href="#%e6%8e%a8%e6%b5%81" class="header-anchor"&gt;&lt;/a&gt;推流
&lt;/h2&gt;&lt;p&gt;配置好服务器，可以看一下流媒体服务器推流效果，这里我是用的是 OBS 推流应用，推流端使用的是 RTMP 协议，在播放端使用的是 hls+ 协议。&lt;/p&gt;
&lt;p&gt;这里给大家提供两个官方推荐查看推流效果的地址，也是应用提供的 Web 页面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://ip地址:端口/h5player/flv&lt;/code&gt; 无插件播放http-flv直播流&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://ip地址:端口/rtmp_stat&lt;/code&gt; 查看当前服务器推流统计数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122236851.png"
loading="lazy"
alt="OBS配置"
&gt;&lt;/p&gt;
&lt;p&gt;播放地址：&lt;code&gt;http://ip地址:端口/hls2/流名.m3u8&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="参考"&gt;&lt;a href="#%e5%8f%82%e8%80%83" class="header-anchor"&gt;&lt;/a&gt;参考
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://pingos.io/docs/zh/quick-start" target="_blank" rel="noopener"
&gt;PingOS 项目参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://zhuanlan.zhihu.com/p/87225094" target="_blank" rel="noopener"
&gt;怎么搭建hls低延时直播（lowlatency hls）- 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，这是一个系列的文章，后续还有针对 PingOS 流媒体服务还有对应优化，敬请关注&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>记一次不太正规的装机实践</title><link>https://blog.debuginn.com/p/computer-install/</link><pubDate>Sat, 21 Mar 2020 15:46:00 +0800</pubDate><guid>https://blog.debuginn.com/p/computer-install/</guid><description>&lt;img src="https://webp.debuginn.com/202303122249241.jpg" alt="Featured image of post 记一次不太正规的装机实践" /&gt;&lt;p&gt;早就想着装一台组装机，来实操一下高中学的计算机组装与维修 ?，哈哈，开玩笑，想着组装一台电脑是我早有打算的事情，凭借着在学校实验室的时候帮助老师修理百十来台电脑的经验也可以轻松应对，正好家里人有装电脑的需求，本想着装机是一件比较愉快的事情，实时是激动的心、残废的手，装机翻车了，不过整体流程还可以，最后也正常的运行了起来，听我细细道来吧。&lt;/p&gt;
&lt;h2 id="配置"&gt;&lt;a href="#%e9%85%8d%e7%bd%ae" class="header-anchor"&gt;&lt;/a&gt;配置
&lt;/h2&gt;&lt;p&gt;朋友出价，我出配置，4000左右机型，性能还可以。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;配件名称&lt;/th&gt;
&lt;th&gt;型号&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;英特尔（Intel）i5 9400F 酷睿六核 盒装CPU处理器&lt;/td&gt;
&lt;td&gt;¥1199&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主板&lt;/td&gt;
&lt;td&gt;技嘉（GIGABYTE）B365 M AORUS ELITE&lt;/td&gt;
&lt;td&gt;¥669&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显卡&lt;/td&gt;
&lt;td&gt;七彩虹（Colorful）iGame GeForce GTX 1650 SUPER AD Special OC 4G 1530-1755MHz&lt;/td&gt;
&lt;td&gt;¥1279&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内存条&lt;/td&gt;
&lt;td&gt;金士顿(Kingston) DDR4 2666 8GB 台式机内存条 骇客神条 Fury雷电系列&lt;/td&gt;
&lt;td&gt;¥359&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SSD&lt;/td&gt;
&lt;td&gt;东芝（TOSHIBA）250G SSD固态硬盘 M.2接口（NVME协议） RC500系列&lt;/td&gt;
&lt;td&gt;¥409&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电源&lt;/td&gt;
&lt;td&gt;鑫谷（Segotep）额定350W 核动力-巡洋舰 Q5 电源&lt;/td&gt;
&lt;td&gt;¥139&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;散热器&lt;/td&gt;
&lt;td&gt;酷冷至尊(Cooler Master) 暴雪T400i 风冷散热器&lt;/td&gt;
&lt;td&gt;¥89.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;机箱&lt;/td&gt;
&lt;td&gt;爱国者（aigo）炫影黑京东专供版 电脑机箱（配3把发光风扇/支持ATX主板/蜂窝玻璃面板/背线）&lt;/td&gt;
&lt;td&gt;¥229&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;总价&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;¥4322.90&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="包装"&gt;&lt;a href="#%e5%8c%85%e8%a3%85" class="header-anchor"&gt;&lt;/a&gt;包装
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122254830.jpg"
loading="lazy"
alt="包装"
&gt;&lt;/p&gt;
&lt;p&gt;不得不说，京东快递就是很快，不过，快归快，3000米，抱着这三个大箱子往住的地方跑，最后手抖不停???，看来要健身减肥了。&lt;/p&gt;
&lt;p&gt;打开了纸箱，买的配件都显露了出来，在床上摆拍了一下。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122255171.jpg"
loading="lazy"
alt="包装"
&gt;&lt;/p&gt;
&lt;p&gt;很壮观，也很有气势，哈哈，接下来就进行拆解组装了…………&lt;/p&gt;
&lt;h2 id="组装"&gt;&lt;a href="#%e7%bb%84%e8%a3%85" class="header-anchor"&gt;&lt;/a&gt;组装
&lt;/h2&gt;&lt;p&gt;一般组装都讲究顺序，作为从不看产品使用说明的我，上来就装起了主板 ?，看到 CPU 和散热风扇在孤零零的躺着，emmm，拆出来吧，唉，就这样才把 CPU 放上，装上了内存，固态 SSD，和散热器，由于太过锋利，又没有防护措施，唉，挂了彩。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122255566.jpg"
loading="lazy"
alt="挂了彩"
&gt;&lt;/p&gt;
&lt;p&gt;此处省略弱鸡的我装机，省略500子，最后终于安装成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;给大家一个实践得来的建议，装机顺序，一定要记好：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 CPU 及散热风扇；&lt;/li&gt;
&lt;li&gt;安装内存条、M.2 接口类型的固态；&lt;/li&gt;
&lt;li&gt;安装主板，固定扩展插槽位置对齐；&lt;/li&gt;
&lt;li&gt;安装电源；&lt;/li&gt;
&lt;li&gt;安装显卡；&lt;/li&gt;
&lt;li&gt;从背部走线，对应主板、CPU供电插槽、显卡供电插槽、音视频，USB2.0/3.0 、散热器供电插槽插上对应的线，同学们，看说明书；&lt;/li&gt;
&lt;li&gt;开机，测试安装如何；&lt;/li&gt;
&lt;li&gt;可以的话就整理线，用扎带固定好，关上机箱，就可以喽。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过以上安装步骤，终于安装完毕，请看结果：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122257806.jpeg"
loading="lazy"
alt="请看结果"
&gt;&lt;/p&gt;
&lt;p&gt;插上电源，为我爆灯………………&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122258728.jpg"
loading="lazy"
alt="为我爆灯"
&gt;&lt;/p&gt;
&lt;p&gt;正常运行，感觉良好，记下来就要装系统喽。&lt;/p&gt;
&lt;h2 id="系统"&gt;&lt;a href="#%e7%b3%bb%e7%bb%9f" class="header-anchor"&gt;&lt;/a&gt;系统
&lt;/h2&gt;&lt;p&gt;首当其从，当然是 Windows10 啦，嗯，没错，只有 Windows10 是可以配得上我亲手装的机器，所谓郎才配女貌 ??。从公司让同事帮忙借了一套显示器及无线键鼠，之后又安装了大白菜系统，开始安装。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122259537.jpg"
loading="lazy"
alt="系统"
&gt;&lt;/p&gt;
&lt;p&gt;不得不说，现在的配置安装 windows10 真的很快，并且开关机可以达到5秒内完成，牛掰。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303122259091.jpg"
loading="lazy"
alt="windows10"
&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>二维码会使用完么</title><link>https://blog.debuginn.com/p/will-the-qr-code-run-out/</link><pubDate>Wed, 20 Nov 2019 20:09:25 +0800</pubDate><guid>https://blog.debuginn.com/p/will-the-qr-code-run-out/</guid><description>&lt;img src="https://webp.debuginn.com/202303162011356.jpg" alt="Featured image of post 二维码会使用完么" /&gt;&lt;p&gt;现在生活中总是会使用到二维码，在支付中、博客的推广图片上、各种各样的商品推广，都有着二维码的身影，二维码已经是我们的日常生活中有着不可替代的便捷信息载体，近几日在网站了解到字节及腾讯根据自己的产品分别推出了抖音码及小程序码的解析流程，心中有一个疑问：“&lt;strong&gt;二维码会被使用完么&lt;/strong&gt;”，在近一周的资料查询及二维码原理分析，我得到的答案是“&lt;strong&gt;二维码会被使用完，但我们目前使用不完&lt;/strong&gt;”，“二维码会被使用完”是因为二维码是采用黑白点阵组成的一段特殊的代码，可以理解为一张特殊的图片，那么这张图片大小比较固定，那么也就代表着二维码会被使用完，而“我们目前使用不完”是因为点阵组成的二维码个数实在是太多了，即使在我们生活中大量应用，每天都有几百亿个二维码产生，还是使用不完。&lt;/p&gt;
&lt;p&gt;那么接下来就给大家介绍一下这个二维码是怎么产生及使用的吧。&lt;/p&gt;
&lt;h2 id="二维码是什么"&gt;&lt;a href="#%e4%ba%8c%e7%bb%b4%e7%a0%81%e6%98%af%e4%bb%80%e4%b9%88" class="header-anchor"&gt;&lt;/a&gt;二维码是什么
&lt;/h2&gt;&lt;p&gt;二维条码/二维码（2-dimensional bar code）是用某种特定的几何图形按一定规律在平面（二维方向上）分布的、黑白相间的、记录数据符号信息的图形；在代码编制上巧妙地利用构成计算机内部逻辑基础的“0”、“1”比特流的概念，使用若干个与二进制相对应的几何形体来表示文字数值信息，通过图象输入设备或光电扫描设备自动识读以实现信息自动处理：它具有条码技术的一些共性：每种码制有其特定的字符集；每个字符占有一定的宽度；具有一定的校验功能等。同时还具有对不同行的信息自动识别功能、及处理图形旋转变化点。&lt;/p&gt;
&lt;h2 id="二维码的结构"&gt;&lt;a href="#%e4%ba%8c%e7%bb%b4%e7%a0%81%e7%9a%84%e7%bb%93%e6%9e%84" class="header-anchor"&gt;&lt;/a&gt;二维码的结构
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303162012278.jpeg"
loading="lazy"
alt="二维码的结构"
&gt;&lt;/p&gt;
&lt;p&gt;二维码符号分为&lt;strong&gt;功能图形及编码区格式&lt;/strong&gt;，其中功能图形主要作用是辨别及定位二维码的位置，便于扫码操作。而编码区格式存储着定义的格式信息、版本信息及最为重要的数据和纠错码字，他们共同构成了我们常见到的二维码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;校正图形&lt;/strong&gt;：规格确定，校正图形的数量和位置也就确定了；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式信息&lt;/strong&gt;：表示该二维码的纠错级别，分为L、M、Q、H；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本信息&lt;/strong&gt;：即二维码的规格，QR码符号共有40种规格的矩阵（一般为黑白色），从21x21（版本1），到177x177（版本40），每一版本符号比前一版本 每边增加4个模块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据和纠错码字&lt;/strong&gt;：实际保存的二维码信息，和纠错码字（用于修正二维码损坏带来的错误）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;通过上面的图片可以想象到，二维码的大小就是那么大，无论采用怎样的编码格式绘制二维码，都会出现有限的组合数量。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="二维码数量"&gt;&lt;a href="#%e4%ba%8c%e7%bb%b4%e7%a0%81%e6%95%b0%e9%87%8f" class="header-anchor"&gt;&lt;/a&gt;二维码数量
&lt;/h2&gt;&lt;p&gt;QR Code的符号版本范围从版本1到版本40。每个版本具有不同的模块配置或模块数量。（模块是指构成QR Code的黑白点。）
“模块配置”是指符号中包含的模块数量，从版本1（21×21个模块）到版本40（177×177）模块）。每个更高的版本号每侧包含4个附加模块。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303162013973.png"
loading="lazy"
alt="二维码数量"
&gt;&lt;/p&gt;
&lt;p&gt;总数量：&lt;code&gt;2^177*177&lt;/code&gt; 个。&lt;/p&gt;
&lt;h2 id="reference"&gt;&lt;a href="#reference" class="header-anchor"&gt;&lt;/a&gt;Reference
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://blog.csdn.net/u012611878/article/details/53167009" target="_blank" rel="noopener"
&gt;CSDN 二维码（QR code）基本结构及生成原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://www.qrcode.com/en/about/version.html" target="_blank" rel="noopener"
&gt;Information capacity and versions of QR Code | QRcode.com | DENSO WAVE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>MacBook Pro 2019款 入手体验</title><link>https://blog.debuginn.com/p/mbp-2019/</link><pubDate>Sun, 03 Nov 2019 15:14:30 +0800</pubDate><guid>https://blog.debuginn.com/p/mbp-2019/</guid><description>&lt;img src="https://webp.debuginn.com/202303181131348.jpeg" alt="Featured image of post MacBook Pro 2019款 入手体验" /&gt;&lt;p&gt;购买MacBook Pro已经有了一个多月的时间，在这一段的时间中，首先给MBP给我的第一印象就是“&lt;strong&gt;真香&lt;/strong&gt;”，近乎完美的外表设计搭配自家MacOS，简直就是一款非常有效的生产力工具，2019款增加的Touch Bar就是一个不折不扣的加分项，接下来就听我细细道来吧。&lt;/p&gt;
&lt;h2 id="-目标"&gt;&lt;a href="#-%e7%9b%ae%e6%a0%87" class="header-anchor"&gt;&lt;/a&gt;✅ 目标
&lt;/h2&gt;&lt;p&gt;高中时期就对与乔帮主的创新创意所深深吸引，将一台笔记本压缩到一个档案袋一样大小，真的是一件了不起的事情，当时就被Mac电脑的精美，近乎完美的工业设计打动，但是当时迫于高考，再加上对于电脑的需求并没有那么高。高考结束后，自己考上了本省的一所普通二本院校，所学专业是计算机相关的，正是因为所学专业是计算机专业，当时一根脑筋的认为必须高性能的游戏本才能在自己大学四年来进行学习与编程，于是购置了一台&lt;strong&gt;Dell游匣7559款游戏本&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;大学期间，这台笔记本是真的够用，但也真的沉，太沉以至于在大学期间他没有几次走出我的大学实验室。另外就是windows系统是真的很崩溃，我人被它搞崩溃，系统也是跟给力，蓝屏问题一直都是一个不定时的炸弹，真的很苦恼，曾经有一段时间给游匣安装了黑苹果，最后迫于黑苹果网卡及各种驱动问题最后又改装了Windows系统，那时，自己的小目标就是实习期间一定要换一台属于自己的MacBook，接下来就有了现在的入手体验。&lt;/p&gt;
&lt;h2 id="-开箱"&gt;&lt;a href="#-%e5%bc%80%e7%ae%b1" class="header-anchor"&gt;&lt;/a&gt;✅ 开箱
&lt;/h2&gt;&lt;p&gt;苹果的包装一直都是比较讲究的，环保包装，简洁的只有三件（包装三包+MacBook+电源）。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181134689.jpg"
loading="lazy"
alt="MacBook开箱"
&gt;&lt;/p&gt;
&lt;p&gt;比较灵巧的设计，将两侧“耳朵”竖起，就自动将内包装抬起，挺巧妙的设计。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181134716.jpg"
loading="lazy"
alt="MacBook开箱"
&gt;&lt;/p&gt;
&lt;p&gt;拿出来之后，打开内侧包装，开始撕膜&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181134329.jpg"
loading="lazy"
alt="MacBook开箱"
&gt;&lt;/p&gt;
&lt;p&gt;由于本人撕膜之后过于兴奋，系统设置这一块忘记拍摄了，脑补喜悦的画面吧，接下来给大家介绍一下电脑的性能及系统配置吧。&lt;/p&gt;
&lt;h2 id="-配置"&gt;&lt;a href="#-%e9%85%8d%e7%bd%ae" class="header-anchor"&gt;&lt;/a&gt;✅ 配置
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181135828.jpg"
loading="lazy"
alt="macOS Catalina"
&gt;&lt;/p&gt;
&lt;p&gt;近期升级到了Catalina版本，看着增加了应用使用时间及iPad扩展功能，挺不错的，接下来看看配置吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt; 2.4GHz 四核 Intel Core i5 处理器 (Turbo Boost 最高可达 4.1GHz)，配备 128MB eDRAM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内存&lt;/strong&gt; 8GB 2133 MHz LPDDR3&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;显卡&lt;/strong&gt; Intel lris Plus Graphics 645 1536 MB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;显示器&lt;/strong&gt; 13.3英寸（2560 * 1600）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;固态硬盘&lt;/strong&gt; 256GB 固态硬盘&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拓展&lt;/strong&gt; 两个雷雳 3 (USB-C) 端口，USB 3.1 第二代 (速率最高可达 10Gb/s)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全尺寸背光键盘&lt;/strong&gt; 64 个 (ANSI) 或 65 个 (ISO) 按键&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wi-Fi&lt;/strong&gt; 网络 802.11ac Wi-Fi 无线网络 兼容 IEEE 802.11a/b/g/n&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;蓝牙&lt;/strong&gt; 蓝牙 5.0 无线技术&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;摄像头&lt;/strong&gt; 720p FaceTime 高清摄像头&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他&lt;/strong&gt; &lt;a class="link" href="https://www.apple.com/cn/macbook-pro/specs/" target="_blank" rel="noopener"
&gt;官网详细介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181137974.jpg"
loading="lazy"
alt="官网介绍渲染图片"
&gt;&lt;/p&gt;
&lt;h2 id="-系统"&gt;&lt;a href="#-%e7%b3%bb%e7%bb%9f" class="header-anchor"&gt;&lt;/a&gt;✅ 系统
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181137879.jpg"
loading="lazy"
alt="MacBook Pro"
&gt;&lt;/p&gt;
&lt;h3 id="全屏幕窗口方式"&gt;&lt;a href="#%e5%85%a8%e5%b1%8f%e5%b9%95%e7%aa%97%e5%8f%a3%e6%96%b9%e5%bc%8f" class="header-anchor"&gt;&lt;/a&gt;全屏幕窗口方式
&lt;/h3&gt;&lt;p&gt;由于苹果本身尺寸比较小，全屏幕的设计搭配触控板可以轻松实现对窗口的扩展，由于是从windows深度用户，开始不太习惯，不过用了两天就被它这功能所深深的吸引，真的特别便捷实用，给人以最大化工作界面的状态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这种用户界面将极大简化电脑的使用，减少多个窗口带来的困扰。它将使用户获得与iPhone、iPod touch和iPad用户相同的体验。计算体验并不会因此被削弱；相反，苹果正帮助用户更为有效地处理任务。
百度百科 Mac OS&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id="类linux系统"&gt;&lt;a href="#%e7%b1%bblinux%e7%b3%bb%e7%bb%9f" class="header-anchor"&gt;&lt;/a&gt;类Linux系统
&lt;/h3&gt;&lt;p&gt;这个无疑是我作为开发者实用Mac的神器，在日常工作使用中，对终端的操作，连接远程linux系统，系统本身安装环境都显得那么顺畅，这个是在windows原始Dos系统上不能体会到的，上手后你就了解了。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181138872.jpg"
loading="lazy"
alt="类unix系统"
&gt;&lt;/p&gt;
&lt;h3 id="touch-bar"&gt;&lt;a href="#touch-bar" class="header-anchor"&gt;&lt;/a&gt;Touch Bar
&lt;/h3&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303181138286.jpg"
loading="lazy"
alt="Touch Bar"
&gt;&lt;/p&gt;
&lt;p&gt;不得不说，带把的 &lt;del&gt;带bar&lt;/del&gt; 的就是好用，如果说键盘拯救了我们输入系统，那bar就拯救了我们手动的选择。&lt;/p&gt;
&lt;h3 id="无广告干扰"&gt;&lt;a href="#%e6%97%a0%e5%b9%bf%e5%91%8a%e5%b9%b2%e6%89%b0" class="header-anchor"&gt;&lt;/a&gt;无广告干扰
&lt;/h3&gt;&lt;p&gt;Mac系统软件开发本身就约束开发软件对广告的植入，不过VIP、SVIP，库克也无法拯救大家，目前使用了一个多月，几乎没有广告，用着非常省心。&lt;/p&gt;
&lt;h3 id="qq良心版"&gt;&lt;a href="#qq%e8%89%af%e5%bf%83%e7%89%88" class="header-anchor"&gt;&lt;/a&gt;QQ良心版
&lt;/h3&gt;&lt;p&gt;提到了QQ，简直就是开发者对Mac用户的优惠，红包提醒简直堪比外挂，都说抢红包抢的块，想想那些得到红包的是不是Mac用户？&lt;/p&gt;
&lt;h2 id="-总结"&gt;&lt;a href="#-%e6%80%bb%e7%bb%93" class="header-anchor"&gt;&lt;/a&gt;✅ 总结
&lt;/h2&gt;&lt;p&gt;Mac本虽然优点特别的多，但是由于本身电脑价格昂贵至今博主还在还白条中，不过苹果对于学生有学生教育优惠政策，原本人民币11499的价格便宜到10700，同时还免费赠送了一台Beats Studio3 Wireless 头戴式耳机，要是不满意这个耳机可以咸鱼出售，之后这台笔记本整体可以10k以内购买下来，即使如此对于学生党来说还是比较昂贵的，这也是我为什么实习更换笔记本的一大原因，在使用了一个多月的时间里，这台电脑优缺点兼备，之所以换电脑还是优点大于缺点的：&lt;/p&gt;
&lt;h3 id="优点"&gt;&lt;a href="#%e4%bc%98%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;优点
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;轻薄便携，出门或者随身携带重量可以接受；&lt;/li&gt;
&lt;li&gt;MacOS 使用过的电脑系统中最人性化设计的系统，没有之一；&lt;/li&gt;
&lt;li&gt;视网膜屏幕，对使用者十分友好；&lt;/li&gt;
&lt;li&gt;Touch Bar选择多样，真的很好用；&lt;/li&gt;
&lt;li&gt;电池?充满电之后可以重度使用6小时左右；&lt;/li&gt;
&lt;li&gt;类Unix设计，命令行上来就用；&lt;/li&gt;
&lt;li&gt;无广告干扰，使用很舒适；&lt;/li&gt;
&lt;li&gt;薄而坚固的机身，干净的外观设计。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="缺点"&gt;&lt;a href="#%e7%bc%ba%e7%82%b9" class="header-anchor"&gt;&lt;/a&gt;缺点
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;价格贵，即使使用了教育优惠，还是贵；&lt;/li&gt;
&lt;li&gt;第三代蝶式键盘，感觉没有键程，就像怼木头一样，使用过机械键盘的感觉明显；&lt;/li&gt;
&lt;li&gt;没有有线网口，只有两个闪电口，Wifi够用；&lt;/li&gt;
&lt;li&gt;配件贵，这个时代只要是和苹果沾边的都不便宜，除了?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整体来说，苹果本真是一个革命性质的笔记本，用起来的用户交互真的很人性化，要是想购买，最好是在实习入手，享受教育优惠的同时，自己又可以支付较为昂贵的价格，推荐大家为此买单，但是要理性消费哦。&lt;/p&gt;
&lt;p&gt;PS：图片均来自锤子 坚果Pro2 拍摄&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>一些好玩的代码构图</title><link>https://blog.debuginn.com/p/code-picture/</link><pubDate>Fri, 18 Oct 2019 17:42:41 +0800</pubDate><guid>https://blog.debuginn.com/p/code-picture/</guid><description>&lt;img src="https://webp.debuginn.com/202303181147944.jpg" alt="Featured image of post 一些好玩的代码构图" /&gt;&lt;p&gt;是不是经常在群中看到大神闲的无聊敲的代码构图，今天，他来了，搜集了网上尽可能多的代码构图，展示给大家，友情提示，推荐使用比较大的屏幕查看，效果会比较好的。&lt;/p&gt;
&lt;h2 id="no1-佛祖保佑永无bug"&gt;&lt;a href="#no1-%e4%bd%9b%e7%a5%96%e4%bf%9d%e4%bd%91%e6%b0%b8%e6%97%a0bug" class="header-anchor"&gt;&lt;/a&gt;No.1 佛祖保佑，永无Bug
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; _ooOoo_
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; o8888888o
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 88&lt;span class="s2"&gt;&amp;#34; . &amp;#34;&lt;/span&gt;&lt;span class="m"&gt;88&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; -_- &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; O&lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /O
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ____/&lt;span class="sb"&gt;`&lt;/span&gt;---&lt;span class="s1"&gt;&amp;#39;\____
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;// &lt;span class="sb"&gt;`&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; / &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; : &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;// &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; / _&lt;span class="o"&gt;||||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; -:- &lt;span class="o"&gt;||||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;- &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\\\ &lt;/span&gt; - /// &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\_&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\-&lt;/span&gt;--/&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="se"&gt;\ &lt;/span&gt; .-&lt;span class="se"&gt;\_&lt;/span&gt;_ &lt;span class="sb"&gt;`&lt;/span&gt;-&lt;span class="sb"&gt;`&lt;/span&gt; ___/-. /
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ___&lt;span class="sb"&gt;`&lt;/span&gt;. .&lt;span class="s1"&gt;&amp;#39; /--.--\ `. . __
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .&amp;#34;&amp;#34; &amp;#39;&lt;/span&gt;&amp;lt; &lt;span class="sb"&gt;`&lt;/span&gt;.___&lt;span class="se"&gt;\_&lt;/span&gt;&amp;lt;&lt;span class="p"&gt;|&lt;/span&gt;&amp;gt;_/___.&lt;span class="s1"&gt;&amp;#39; &amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; : &lt;span class="sb"&gt;`&lt;/span&gt;- &lt;span class="se"&gt;\`&lt;/span&gt;.&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;_ /&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;.&lt;span class="sb"&gt;`&lt;/span&gt;/ - &lt;span class="sb"&gt;`&lt;/span&gt; : &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;-. &lt;span class="se"&gt;\_&lt;/span&gt; __&lt;span class="se"&gt;\ &lt;/span&gt;/__ _/ .-&lt;span class="sb"&gt;`&lt;/span&gt; / /
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;======&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;-.____&lt;span class="sb"&gt;`&lt;/span&gt;-.___&lt;span class="se"&gt;\_&lt;/span&gt;____/___.-&lt;span class="sb"&gt;`&lt;/span&gt;____.-&lt;span class="s1"&gt;&amp;#39;======
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; `=---=&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 佛祖保佑 永无BUG
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no2-草泥马"&gt;&lt;a href="#no2-%e8%8d%89%e6%b3%a5%e9%a9%ac" class="header-anchor"&gt;&lt;/a&gt;No.2 草泥马
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ┌─┐ ┌─┐
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ┌──┘ ┴───────┘ ┴──┐
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ ─── │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ ─┬┘ └┬─ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ ─┴─ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; └───┐ ┌───┘
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ └──────────────┐
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ ├─┐
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ ┌─┘
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; └─┐ ┐ ┌───────┬──┐ ┌──┘
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; │ ─┤ ─┤ │ ─┤ ─┤
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; └──┴──┘ └──┴──┘
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 神兽保佑
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 代码无BUG!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no3-知识就是力量"&gt;&lt;a href="#no3-%e7%9f%a5%e8%af%86%e5%b0%b1%e6%98%af%e5%8a%9b%e9%87%8f" class="header-anchor"&gt;&lt;/a&gt;No.3 知识就是力量
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;span class="lnt"&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .-~~~~~~~~~-._ _.-~~~~~~~~~-.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; __.&lt;span class="s1"&gt;&amp;#39; ~. .~ `.__
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .&amp;#39;&lt;/span&gt;// &lt;span class="se"&gt;\.&lt;/span&gt;/ &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .&lt;span class="s1"&gt;&amp;#39;// | \\`.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .&amp;#39;&lt;/span&gt;// .-~&lt;span class="s2"&gt;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;~~~~-._ | _,-~~~~&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;~-. &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .&lt;span class="s1"&gt;&amp;#39;//.-&amp;#34; `-. | .-&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;-.\\`.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; .&amp;#39;//______.============-.. \ | / ..-============.______\\`.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;.&amp;#39;______________________________\|/______________________________`.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no4-史蒂文西蒙斯"&gt;&lt;a href="#no4-%e5%8f%b2%e8%92%82%e6%96%87%e8%a5%bf%e8%92%99%e6%96%af" class="header-anchor"&gt;&lt;/a&gt;No.4 史蒂文西蒙斯
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; _.---..._
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ./^ ^-._
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ./^C&lt;span class="o"&gt;===&lt;/span&gt;. ^&lt;span class="se"&gt;\.&lt;/span&gt; /&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; .&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; \\ _ ^|.^.|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; ___.--&amp;#39;&lt;/span&gt;_ &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; . ./ /&lt;span class="o"&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; /.---^T&lt;span class="se"&gt;\ &lt;/span&gt; , &lt;span class="p"&gt;|&lt;/span&gt; / /&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; C&lt;span class="s1"&gt;&amp;#39; ._`| ._ / __,-/ / /-,||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; \ \/ ; /O / _ |) )|,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; i \./^O\./_,-^/^ ,;-^,&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;--/ ..-^^ &lt;span class="p"&gt;|&lt;/span&gt;_-^
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\^&lt;/span&gt;- /&lt;span class="p"&gt;|&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; i. .-- / &lt;span class="s1"&gt;&amp;#39;|.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; i ==&amp;#39;&lt;/span&gt; /&lt;span class="s1"&gt;&amp;#39; |\._
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; _./`._ // |. ^-ooo.._
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; _.oo../&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; ^-.__./X/ . &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="c1"&gt;#######b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; d#### &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; ^^^^ / &lt;span class="p"&gt;|&lt;/span&gt; _&lt;span class="se"&gt;\#&lt;/span&gt;&lt;span class="c1"&gt;######&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;#####b ^^^^^^^^--. ...--^--^^^^^^^_.d######&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;######b._ Y _.d#########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;##########b._ | _.d#############&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;&amp;#34;Piccolo&amp;#34;&lt;/span&gt; no. &lt;span class="m"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;(&lt;/span&gt;from Dragonball Z&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --- Steven J. Simmons
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no5-这样很忍者"&gt;&lt;a href="#no5-%e8%bf%99%e6%a0%b7%e5%be%88%e5%bf%8d%e8%80%85" class="header-anchor"&gt;&lt;/a&gt;No.5 这样很忍者
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; _
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="se"&gt;\&amp;#34;&lt;/span&gt;-._ _.--&lt;span class="s2"&gt;&amp;#34;~~&amp;#34;&lt;/span&gt;--._
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="s2"&gt;&amp;#34; ^. ___
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; / \.-~_.-~
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; .-----&amp;#39; /\/&amp;#34;&lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;/~-._ /
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; / __ _/&lt;span class="se"&gt;\-&lt;/span&gt;.__&lt;span class="se"&gt;\L&lt;/span&gt;_.-/&lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;-.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; /.-&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="se"&gt;\_&lt;/span&gt;o&amp;gt;&lt;span class="s2"&gt;&amp;#34;&amp;lt;o_/ \ .--._\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; /&amp;#39; \ \: &amp;#34;&lt;/span&gt; :/_/ &lt;span class="s2"&gt;&amp;#34;`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; / /\ &amp;#34;&lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt; ~ /~&lt;span class="s2"&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \ I \/]&amp;#34;&lt;/span&gt;-._ _.-&lt;span class="s2"&gt;&amp;#34;[
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; ___ \|___/ ./ l \___ ___
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; .--v~ &amp;#34;&lt;/span&gt;v&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;-.__ __.-&lt;span class="s1"&gt;&amp;#39; ) ~v&amp;#34; ~v--.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .-{ | : \_ &amp;#34;~&amp;#34; _/ : | }-.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; / \ | ~-.,___,.-~ | / \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; ] \ | | / [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; /\ \| : : |/ /\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; / ^._ _K.___,^ ^.___,K_ _.^ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; / / &amp;#34;~/ &amp;#34;\ /&amp;#34; \~&amp;#34; \ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; / / / \ _ : _ / \ \ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;.^--./ / Y___________l___________Y \ \.--^.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;[ \ / | [/ ] | \ / ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;| &amp;#34;v&amp;#34; l________[____/]________j -Row }r&amp;#34; /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;}------t / \ /`-. /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;| | Y Y / &amp;#34;-._/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;}-----v&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; : &lt;span class="p"&gt;|&lt;/span&gt; 7-. /
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;_&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; l &lt;span class="p"&gt;|&lt;/span&gt; / . &lt;span class="s2"&gt;&amp;#34;-._/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;l .[_] : \ : r[]/_. /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \_____] &amp;#34;&lt;/span&gt;--. &lt;span class="s2"&gt;&amp;#34;-.____/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; &amp;#34;&lt;/span&gt;Dragonball Z&lt;span class="s2"&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; ---Row
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="no6-皮卡丘皮卡丘"&gt;&lt;a href="#no6-%e7%9a%ae%e5%8d%a1%e4%b8%98%e7%9a%ae%e5%8d%a1%e4%b8%98" class="header-anchor"&gt;&lt;/a&gt;No.6 皮卡丘皮卡丘
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;span class="lnt"&gt;34
&lt;/span&gt;&lt;span class="lnt"&gt;35
&lt;/span&gt;&lt;span class="lnt"&gt;36
&lt;/span&gt;&lt;span class="lnt"&gt;37
&lt;/span&gt;&lt;span class="lnt"&gt;38
&lt;/span&gt;&lt;span class="lnt"&gt;39
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;quu..__
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;$$$b&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;---.__
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="s2"&gt;b `--. ___.---uuudP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; `&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="s2"&gt;b `.__.------.__ __.---&amp;#39; &lt;/span&gt;&lt;span class="nv"&gt;$$$$&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="s2"&gt; -&amp;#39; `-.-&amp;#39; &lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;$&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; .&lt;span class="s1"&gt;&amp;#39;|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; &amp;#34;. d$&amp;#34; _.&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="sb"&gt;`&lt;/span&gt;. / ...&lt;span class="s2"&gt;&amp;#34; .&amp;#39; |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; `./ ..::-&amp;#39; _.&amp;#39; |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; / .:::-&amp;#39; .-&amp;#39; .&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; : ::&amp;#39;&amp;#39;\ _.&amp;#39; |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; .&amp;#39; .-. .-. `. .&amp;#39; |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; : /&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="s2"&gt;| .@&amp;#34;&lt;/span&gt;$&lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;. .&lt;span class="s1"&gt;&amp;#39; _.-&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .&lt;span class="s1"&gt;&amp;#39;|$u$$| |$$,$$| | &amp;lt; _.-&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;:&lt;span class="nv"&gt;$$&lt;/span&gt;:&lt;span class="s1"&gt;&amp;#39; :$$$$$: `. `. .-&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; : &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;--&amp;#39; | `-. \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; :##. == .###. `. `. `\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; |##: :###: | &amp;gt; &amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; |#&amp;#39; `..&amp;#39;`..&amp;#39; `###&amp;#39; x: / /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \ xXX| / ./
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \ xXXX&amp;#39;| / ./
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; /`-. `. / /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; : `- ..........., | / .&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | ``:::::::&amp;#39; . |&amp;lt; `.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | ``` | x| \ `.:``.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | .&amp;#39; /&amp;#39; xXX| `:`M`M&amp;#39;:.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | | ; /:&amp;#39; xXXX&amp;#39;| -&amp;#39;MMMMM:&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; `. .&amp;#39; : /:&amp;#39; |-&amp;#39;MMMM.-&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | | .&amp;#39; /&amp;#39; .&amp;#39;MMM.-&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; `&amp;#39;`&amp;#39; : ,&amp;#39; |MMM&amp;lt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | `&amp;#39; |tbap\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \ :MM.-&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \ | .&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; \. `. /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; / .:::::::.. : /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | .:::::::::::`. /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; | .:::------------\ /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; / .&amp;#39;&amp;#39; &amp;gt;::&amp;#39; /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; `&amp;#39;,: : .&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; `:.:&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no7-a-computer"&gt;&lt;a href="#no7-a-computer" class="header-anchor"&gt;&lt;/a&gt;No.7 A computer
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ,----------------, ,---------,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ,-----------------------, ,&lt;span class="s2"&gt;&amp;#34; ,&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ,&lt;span class="s2"&gt;&amp;#34; ,&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; ,&lt;span class="s2"&gt;&amp;#34; ,&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +-----------------------+ &lt;span class="p"&gt;|&lt;/span&gt; ,&lt;span class="s2"&gt;&amp;#34; ,&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;|&lt;/span&gt; .-----------------. &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; +---------+ &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; -&lt;span class="o"&gt;==&lt;/span&gt;----&lt;span class="s1"&gt;&amp;#39;| |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; | | I LOVE DOS! | | | | | |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; | | Bad command or | | |/----|`---= | |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; | | C:\&amp;gt;_ | | | ,/|==== ooo | ;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; | | | | | // |(((( [33]| ,&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; | `-----------------&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;,&lt;span class="s2"&gt;&amp;#34; .;&amp;#39;| |(((( | ,&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; +-----------------------+ &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;,&lt;span class="s2"&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; /_)______________(_/ //&amp;#39; | +---------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; ___________________________/___ `,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; / oooooooooooooooo .o. oooo /, \,&amp;#34;&lt;/span&gt;-----------
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; / &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;ooooooooooooooo&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;.o. &lt;span class="nv"&gt;ooo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; // ,&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="se"&gt;\-&lt;/span&gt;-&lt;span class="o"&gt;{)&lt;/span&gt;B ,&lt;span class="s2"&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;/_==__==========__==_ooo__ooo=_/&amp;#39; /___________,&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no8-翼龙"&gt;&lt;a href="#no8-%e7%bf%bc%e9%be%99" class="header-anchor"&gt;&lt;/a&gt;No.8 翼龙
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; __----~~~~~~~~~~~------___
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; . . ~~//&lt;span class="o"&gt;====&lt;/span&gt;...... __--~ ~~
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; -. &lt;span class="se"&gt;\_&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;// &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt; ~~~~~~::::... /~
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ___-&lt;span class="o"&gt;==&lt;/span&gt;_ _-~o~ &lt;span class="se"&gt;\/&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt; _/~~-
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; __---~~~.&lt;span class="o"&gt;==&lt;/span&gt;~&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="se"&gt;\=&lt;/span&gt;_ -_--~/_-~&lt;span class="p"&gt;|&lt;/span&gt;- &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt; _/~
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; _-~~ .&lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;-_ &lt;span class="s1"&gt;&amp;#39;-~7 /- / || \ /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .~ .~ | \\ -_ / /- / || \ /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;/ ____ / | \\ ~-_/ /|- _/ .|| \ /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;|~~ ~~|--~~~~--_ \ ~==-/ | \~--===~~ .\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; &amp;#39;&lt;/span&gt; ~-&lt;span class="p"&gt;|&lt;/span&gt; /&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;-~&lt;span class="se"&gt;\~&lt;/span&gt;~ __--~~
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;|&lt;/span&gt;-~~-_/ &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; ~&lt;span class="se"&gt;\_&lt;/span&gt; _-~ /&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; / &lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="se"&gt;\_&lt;/span&gt;_ &lt;span class="se"&gt;\/&lt;/span&gt;~ &lt;span class="se"&gt;\_&lt;/span&gt;_
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; _--~ _/ &lt;span class="p"&gt;|&lt;/span&gt; .-~~____--~-/ ~~&lt;span class="o"&gt;==&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;((&lt;/span&gt;-&amp;gt;/~ &lt;span class="s1"&gt;&amp;#39;.|||&amp;#39;&lt;/span&gt; -_&lt;span class="p"&gt;|&lt;/span&gt; ~~-/ , . _&lt;span class="o"&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; -_ ~&lt;span class="se"&gt;\ &lt;/span&gt; ~~---l__i__i__i--~~_/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; _-~-__ ~&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\-&lt;/span&gt;-______________--~~
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; //.-~~~-~_--~- &lt;span class="p"&gt;|&lt;/span&gt;-------~~~~~~~~
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; //.-~~~--&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no9-不知道像啥"&gt;&lt;a href="#no9-%e4%b8%8d%e7%9f%a5%e9%81%93%e5%83%8f%e5%95%a5" class="header-anchor"&gt;&lt;/a&gt;No.9 不知道像啥
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; /+++&lt;span class="o"&gt;=))&lt;/span&gt; &lt;span class="o"&gt;((=&lt;/span&gt;+++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; /++++++++// &lt;span class="se"&gt;\\&lt;/span&gt;+++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; /++++++++++//&lt;span class="o"&gt;(&lt;/span&gt; /&lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;++++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; /+++++++++++// &lt;span class="se"&gt;\\&lt;/span&gt;^^// &lt;span class="se"&gt;\\&lt;/span&gt;+++++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; _/++++++++++++// &lt;span class="o"&gt;{{&lt;/span&gt;@::@&lt;span class="o"&gt;}}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;++++++++++++&lt;span class="se"&gt;\_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; /+++++++++++++&lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;+++++++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; /+++++++++++++++&lt;span class="se"&gt;\\&lt;/span&gt; &amp;lt;**&amp;gt; //+++++++++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; /+++++++++++++++++&lt;span class="se"&gt;\\&lt;/span&gt; / VV &lt;span class="se"&gt;\ &lt;/span&gt; //+++++++++++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt;/+++++++++++++++++++&lt;span class="se"&gt;\\&lt;/span&gt;/******&lt;span class="se"&gt;\/&lt;/span&gt;/+++++++++++++++++++&lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;+/&lt;span class="p"&gt;|&lt;/span&gt;++++++++++/&lt;span class="se"&gt;\+&lt;/span&gt;+++++&lt;span class="o"&gt;(&lt;/span&gt;***/&lt;span class="se"&gt;\*&lt;/span&gt;**&lt;span class="o"&gt;)&lt;/span&gt;++++++/&lt;span class="se"&gt;\+&lt;/span&gt;+++++++++&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\+\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;/ &lt;span class="p"&gt;|&lt;/span&gt;+/&lt;span class="se"&gt;\+&lt;/span&gt;/&lt;span class="se"&gt;\+&lt;/span&gt;/&lt;span class="se"&gt;\/&lt;/span&gt; &lt;span class="se"&gt;\+&lt;/span&gt;/&lt;span class="se"&gt;\+&lt;/span&gt;+&lt;span class="se"&gt;\*&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;**&lt;span class="p"&gt;|&lt;/span&gt;**/++/&lt;span class="se"&gt;\+&lt;/span&gt;/ &lt;span class="se"&gt;\/\+&lt;/span&gt;/&lt;span class="se"&gt;\+&lt;/span&gt;/&lt;span class="se"&gt;\+&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;v &lt;span class="p"&gt;|&lt;/span&gt;/ V V V V &lt;span class="se"&gt;\+\|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;**&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;/+/ V v V V &lt;span class="se"&gt;\|&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; v /*&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;**&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="se"&gt;\.&lt;/span&gt;.. v
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;(&lt;/span&gt;**&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;**&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;**&lt;span class="o"&gt;)&lt;/span&gt;. .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; __&lt;span class="se"&gt;\*&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;**&lt;span class="p"&gt;|&lt;/span&gt;*&lt;span class="p"&gt;|&lt;/span&gt;*/__. .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;(&lt;/span&gt;vvv&lt;span class="o"&gt;(&lt;/span&gt;VVV&lt;span class="o"&gt;)(&lt;/span&gt;VVV&lt;span class="o"&gt;)&lt;/span&gt;vvv&lt;span class="o"&gt;)&lt;/span&gt;. .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ............../ /
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; / ............../
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;((&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no10-性感的-girl"&gt;&lt;a href="#no10-%e6%80%a7%e6%84%9f%e7%9a%84-girl" class="header-anchor"&gt;&lt;/a&gt;No.10 性感的 girl
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .::::::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; :::::::::::
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ..:::::::::::&lt;span class="s1"&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; &amp;#39;&lt;/span&gt;::::::::::::&lt;span class="s1"&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .::::::::::
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; &amp;#39;&lt;/span&gt;::::::::::::::..
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ..::::::::::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="sb"&gt;``&lt;/span&gt;::::::::::::::::
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ::::&lt;span class="sb"&gt;``&lt;/span&gt;:::::::::&lt;span class="s1"&gt;&amp;#39; .:::.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; ::::&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;:::::&amp;#39;&lt;/span&gt; .::::::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .::::&lt;span class="s1"&gt;&amp;#39; :::: .:::::::&amp;#39;&lt;/span&gt;::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .:::&lt;span class="s1"&gt;&amp;#39; ::::: .:::::::::&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;:::::.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt; .::&amp;#39;&lt;/span&gt; :::::.:::::::::&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;:::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .::&lt;span class="s1"&gt;&amp;#39; ::::::::::::::&amp;#39;&lt;/span&gt; &lt;span class="sb"&gt;``&lt;/span&gt;::::.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;...::: ::::::::::::&lt;span class="s1"&gt;&amp;#39; ``::.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;```` &amp;#39;&lt;/span&gt;:. &lt;span class="s1"&gt;&amp;#39;:::::::::&amp;#39;&lt;/span&gt; ::::..
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s1"&gt;&amp;#39;.:::::&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;````&lt;/span&gt;..
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="no11-最后一张龙珠"&gt;&lt;a href="#no11-%e6%9c%80%e5%90%8e%e4%b8%80%e5%bc%a0%e9%be%99%e7%8f%a0" class="header-anchor"&gt;&lt;/a&gt;No.11 最后一张龙珠
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt; 10
&lt;/span&gt;&lt;span class="lnt"&gt; 11
&lt;/span&gt;&lt;span class="lnt"&gt; 12
&lt;/span&gt;&lt;span class="lnt"&gt; 13
&lt;/span&gt;&lt;span class="lnt"&gt; 14
&lt;/span&gt;&lt;span class="lnt"&gt; 15
&lt;/span&gt;&lt;span class="lnt"&gt; 16
&lt;/span&gt;&lt;span class="lnt"&gt; 17
&lt;/span&gt;&lt;span class="lnt"&gt; 18
&lt;/span&gt;&lt;span class="lnt"&gt; 19
&lt;/span&gt;&lt;span class="lnt"&gt; 20
&lt;/span&gt;&lt;span class="lnt"&gt; 21
&lt;/span&gt;&lt;span class="lnt"&gt; 22
&lt;/span&gt;&lt;span class="lnt"&gt; 23
&lt;/span&gt;&lt;span class="lnt"&gt; 24
&lt;/span&gt;&lt;span class="lnt"&gt; 25
&lt;/span&gt;&lt;span class="lnt"&gt; 26
&lt;/span&gt;&lt;span class="lnt"&gt; 27
&lt;/span&gt;&lt;span class="lnt"&gt; 28
&lt;/span&gt;&lt;span class="lnt"&gt; 29
&lt;/span&gt;&lt;span class="lnt"&gt; 30
&lt;/span&gt;&lt;span class="lnt"&gt; 31
&lt;/span&gt;&lt;span class="lnt"&gt; 32
&lt;/span&gt;&lt;span class="lnt"&gt; 33
&lt;/span&gt;&lt;span class="lnt"&gt; 34
&lt;/span&gt;&lt;span class="lnt"&gt; 35
&lt;/span&gt;&lt;span class="lnt"&gt; 36
&lt;/span&gt;&lt;span class="lnt"&gt; 37
&lt;/span&gt;&lt;span class="lnt"&gt; 38
&lt;/span&gt;&lt;span class="lnt"&gt; 39
&lt;/span&gt;&lt;span class="lnt"&gt; 40
&lt;/span&gt;&lt;span class="lnt"&gt; 41
&lt;/span&gt;&lt;span class="lnt"&gt; 42
&lt;/span&gt;&lt;span class="lnt"&gt; 43
&lt;/span&gt;&lt;span class="lnt"&gt; 44
&lt;/span&gt;&lt;span class="lnt"&gt; 45
&lt;/span&gt;&lt;span class="lnt"&gt; 46
&lt;/span&gt;&lt;span class="lnt"&gt; 47
&lt;/span&gt;&lt;span class="lnt"&gt; 48
&lt;/span&gt;&lt;span class="lnt"&gt; 49
&lt;/span&gt;&lt;span class="lnt"&gt; 50
&lt;/span&gt;&lt;span class="lnt"&gt; 51
&lt;/span&gt;&lt;span class="lnt"&gt; 52
&lt;/span&gt;&lt;span class="lnt"&gt; 53
&lt;/span&gt;&lt;span class="lnt"&gt; 54
&lt;/span&gt;&lt;span class="lnt"&gt; 55
&lt;/span&gt;&lt;span class="lnt"&gt; 56
&lt;/span&gt;&lt;span class="lnt"&gt; 57
&lt;/span&gt;&lt;span class="lnt"&gt; 58
&lt;/span&gt;&lt;span class="lnt"&gt; 59
&lt;/span&gt;&lt;span class="lnt"&gt; 60
&lt;/span&gt;&lt;span class="lnt"&gt; 61
&lt;/span&gt;&lt;span class="lnt"&gt; 62
&lt;/span&gt;&lt;span class="lnt"&gt; 63
&lt;/span&gt;&lt;span class="lnt"&gt; 64
&lt;/span&gt;&lt;span class="lnt"&gt; 65
&lt;/span&gt;&lt;span class="lnt"&gt; 66
&lt;/span&gt;&lt;span class="lnt"&gt; 67
&lt;/span&gt;&lt;span class="lnt"&gt; 68
&lt;/span&gt;&lt;span class="lnt"&gt; 69
&lt;/span&gt;&lt;span class="lnt"&gt; 70
&lt;/span&gt;&lt;span class="lnt"&gt; 71
&lt;/span&gt;&lt;span class="lnt"&gt; 72
&lt;/span&gt;&lt;span class="lnt"&gt; 73
&lt;/span&gt;&lt;span class="lnt"&gt; 74
&lt;/span&gt;&lt;span class="lnt"&gt; 75
&lt;/span&gt;&lt;span class="lnt"&gt; 76
&lt;/span&gt;&lt;span class="lnt"&gt; 77
&lt;/span&gt;&lt;span class="lnt"&gt; 78
&lt;/span&gt;&lt;span class="lnt"&gt; 79
&lt;/span&gt;&lt;span class="lnt"&gt; 80
&lt;/span&gt;&lt;span class="lnt"&gt; 81
&lt;/span&gt;&lt;span class="lnt"&gt; 82
&lt;/span&gt;&lt;span class="lnt"&gt; 83
&lt;/span&gt;&lt;span class="lnt"&gt; 84
&lt;/span&gt;&lt;span class="lnt"&gt; 85
&lt;/span&gt;&lt;span class="lnt"&gt; 86
&lt;/span&gt;&lt;span class="lnt"&gt; 87
&lt;/span&gt;&lt;span class="lnt"&gt; 88
&lt;/span&gt;&lt;span class="lnt"&gt; 89
&lt;/span&gt;&lt;span class="lnt"&gt; 90
&lt;/span&gt;&lt;span class="lnt"&gt; 91
&lt;/span&gt;&lt;span class="lnt"&gt; 92
&lt;/span&gt;&lt;span class="lnt"&gt; 93
&lt;/span&gt;&lt;span class="lnt"&gt; 94
&lt;/span&gt;&lt;span class="lnt"&gt; 95
&lt;/span&gt;&lt;span class="lnt"&gt; 96
&lt;/span&gt;&lt;span class="lnt"&gt; 97
&lt;/span&gt;&lt;span class="lnt"&gt; 98
&lt;/span&gt;&lt;span class="lnt"&gt; 99
&lt;/span&gt;&lt;span class="lnt"&gt;100
&lt;/span&gt;&lt;span class="lnt"&gt;101
&lt;/span&gt;&lt;span class="lnt"&gt;102
&lt;/span&gt;&lt;span class="lnt"&gt;103
&lt;/span&gt;&lt;span class="lnt"&gt;104
&lt;/span&gt;&lt;span class="lnt"&gt;105
&lt;/span&gt;&lt;span class="lnt"&gt;106
&lt;/span&gt;&lt;span class="lnt"&gt;107
&lt;/span&gt;&lt;span class="lnt"&gt;108
&lt;/span&gt;&lt;span class="lnt"&gt;109
&lt;/span&gt;&lt;span class="lnt"&gt;110
&lt;/span&gt;&lt;span class="lnt"&gt;111
&lt;/span&gt;&lt;span class="lnt"&gt;112
&lt;/span&gt;&lt;span class="lnt"&gt;113
&lt;/span&gt;&lt;span class="lnt"&gt;114
&lt;/span&gt;&lt;span class="lnt"&gt;115
&lt;/span&gt;&lt;span class="lnt"&gt;116
&lt;/span&gt;&lt;span class="lnt"&gt;117
&lt;/span&gt;&lt;span class="lnt"&gt;118
&lt;/span&gt;&lt;span class="lnt"&gt;119
&lt;/span&gt;&lt;span class="lnt"&gt;120
&lt;/span&gt;&lt;span class="lnt"&gt;121
&lt;/span&gt;&lt;span class="lnt"&gt;122
&lt;/span&gt;&lt;span class="lnt"&gt;123
&lt;/span&gt;&lt;span class="lnt"&gt;124
&lt;/span&gt;&lt;span class="lnt"&gt;125
&lt;/span&gt;&lt;span class="lnt"&gt;126
&lt;/span&gt;&lt;span class="lnt"&gt;127
&lt;/span&gt;&lt;span class="lnt"&gt;128
&lt;/span&gt;&lt;span class="lnt"&gt;129
&lt;/span&gt;&lt;span class="lnt"&gt;130
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMM .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; HMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMM M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMM M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMM M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMM:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; oMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .MMMMMMMMMMMMMMo MMMMMMMMMMMMMMM M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;MMMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMM. oMMMMMMMMMMMMMMM.M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM: H
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM . MMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM M MMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM M MMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MM. MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM M MMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM .MMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .MMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; HMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMM MMM.oMMMMMMM..MMMMMMMMM:MMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMM MM..MMMMMMM...MMMMMMM. MMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMM ..MMMMMM...MMMMMM ..MMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMM:M.MMM.M.. MMMMM M..MMMMM...MMMMMMMMMMMMMMMMMM MMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMM. .M..MM.M...MMMMMM..MMMMM.. MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMM..M....M.....:MMM .MMMMMM..MMMMMMM...MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMM.M.. ...M......MM.MMMMM.......MHM.M .MMMMMMMMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMM..MM. . MMM.....MMMMMM.M.....M ..MM..M MMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .MMMMMHMM. ..MMMM. MMM............o..... . .MMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMM. M... .........................M..:.MMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; oMMM............ .................M.M.MMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .....MM........................ . MMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M.....M.....................o.MM.MMMMMMMM.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M........................M.. ...MMMMMMMMMMMMMo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; :....MMM..............MMM..oMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...MMM.............MMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .............:MMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..... MMM.....M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M M.............
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ................M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ooM.................MM MoMMMMMoooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMoooM......................MoooooooH..oMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MHooooMoM.....................MMooooooM........M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; oooooooMoooM......... o........MoooooooM............
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Mooooooooooo.......M.........Moooooooo:..............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooMoooooooooM...M........:Mooooooooooo:..............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..oooooooooooo .........Mooooooooooooooo..............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...Mooo:oooooooo.M....ooooooooooooooooooo..M...........M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ...oooooMoooooooM..Mooooooooooooo:oooooooM.M...........M.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...ooooooMoo:ooooMoooooooooooooHoooooooooH:M. ...........:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..MoooooooMoooooooooooooooooo:ooooooMooooMoM..............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..ooooooooooMooooooooooooooHoooooooMooHooooM...............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ...ooooooooooooooooooo:MooooooooooooooMoMoooM................
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...oooooooooooooooooooooooooooooooooooooMooMM................M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ...MooooooooooooooooooooooooooooooooooooooooMo ................
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ...MooooooooooooooooooooooooooooooooooooooooM M................M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...ooooooooooooooooooooooooooooooooooooooooM ................M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ...MoooooooooooooooooooooooooooooooooooooooMM .:...............
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .....MooooooooooooooooooooooooooooooooooooMoo .............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...... ooooooooooooooooooooooooooooooooooooM M..............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M........MooooMMM MM MM MMMMMMMMMooooooooM M...............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .........HM M: MM :MMMMMM M M...............
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..........M M MoM M M................M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M.........:M MoH M M M MooooHoooMM. M M...............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..........Moooo MMooM oooooMooooooooM M..............H
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M.........MooooM Mooo : ooooooMooooMoooM M........ . .o.M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; H.. .....ooooo oooo M MooooooooooooooM M... MMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMooooM M oooo . ooooooMooooooooM .MMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMooooH : ooooH oooooooooooooooo MMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMoooo ooooM Moooooooooooooooo .MMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMoooo ooooM MooooooooooooooooM MMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMoooM ooooM ooooooooooooooooo MMMMMMMMMMM:M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMoooM MooooM oooooooooooMoooooo MH...........
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; . ......Mooo. MooooM oooooooooooooooooo M............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M.M......oooo MooooM Moooooooooooooooooo: .........M.....
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M.M.....Moooo MooooM ooooooooooooooooooM .M............
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .......MooooH MooooM oooooooooMoooooooooo M..o...M..o....M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .o....HMooooM MooooH MooooooooMooooooooooM .:M...M.......M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M..M.....MoooM :oooo: .MooooooooHooMoooooooooM M M... ..oM.M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M...M.:.Mooo. MMMMooooo oooooooooooMoooooooooooooM ....M. M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M:M..o.Moooooooooooooo MooooooooooooooMooooooooooooM .Mo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooooooooooooMooooooooooooMoMoooooooooooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Mooooooooooooooo:ooooooooooooooooooooooooooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ooooooooooooooooMooooooooooMoooooooooooooooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ooooooooooooooooMoooooooooooMooooooooooooooooHo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ooMooooooooooooooMoooooooooooooooooooooooooooMoM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooMoooooooooooooo.ooooooooooooooooooooooooooo:oM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MoooooooooooooooooooooooooooooooooooooooooooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MoooMooooooooooooooMooooooooooooooooooooooooooooo.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MoooMooooooooooooooMoooooooooooooooooooooooooMooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooooooooooooooooMoooooooooooooooooooooooooMoooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooMoooooooooooooMoooooooooooooooooooooooooMoHooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ooooooMooooooooooooooooooooooooooooooooooooooooMoMoooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooooooooooooooooooMooooooooooooooooooooooooooMoooooH:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MoooooooMooooooooooooMoooooooooooooooooooooooooooooHoooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooooooMoooooooooooMoooooooooooooooooooooooooMoooMooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Moooooooooooooooooooooooooooooooooooooooooooooo.oooMooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MoooooooooooooooooooooooooooooooooooooooooooooMoooooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooooooooooooooooooMoooooooooooooooooooooooooooooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooooooooooooooooooMHooooooooooooooooooooMoooo:ooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMooooooooooooooooooMoMHoooooooooooooooooooooooMooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMoooooooooooooooMMooo MMooooooooooooooooooooooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMoooooooooooooMooooo oooooooooooooooooooooMooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooMMoooooooooMoooMMoM ooooHooooooooooooooooMooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MooooMooooooMooooMoooM MoooooMoooooooooooooMooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ooooooMMooooooooMooooM MoooooooooMooooooooooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; HooooooMoooooooMooooM HoooooooHooMooooooooooooo
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; oooMoooooooooHoooM MoooooooooMoooooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; HooooooooooooHM MooooooooMMoooooooM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMM Moooooo:MooooHMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMM: ... MMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M............M MMMMMMMMM ....
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M.MM.......... M.............M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; M ..............MM M..............
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMM............MMMM ..MMMMMMMM ....M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMM...M
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .MMMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; :MMMMMMMMMMMMMMMMMMH MMMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; By EBEN Jérôme MMMMMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MMMMMMMMMMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; HMMMMMM
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>关于5G的SA与NSA架构</title><link>https://blog.debuginn.com/p/about-5g-sa-nsa/</link><pubDate>Sat, 17 Aug 2019 22:43:36 +0800</pubDate><guid>https://blog.debuginn.com/p/about-5g-sa-nsa/</guid><description>&lt;img src="https://webp.debuginn.com/202303182246662.jpg" alt="Featured image of post 关于5G的SA与NSA架构" /&gt;&lt;p&gt;今天又一次看了何同学的5G的视频，从视频上看了关于何同学讲联通试运行的是NSA架构，SA架构还在研发试运行中，我就纳闷了，作为一个计算机行业的学生，怎么不明白这个架构名词，是自己out了么，后来上网找了资料，原来这个是通讯技术的专业名词，今天算是恶补了一下。&lt;/p&gt;
&lt;p&gt;2018年12月份的时候，我们其实已经发布了“半个”5G标准。是的没错，那个时候是“非独立组网(NSA)”的5G标准。 现在在等待SA组网标准。&lt;/p&gt;
&lt;h2 id="举个栗子"&gt;&lt;a href="#%e4%b8%be%e4%b8%aa%e6%a0%97%e5%ad%90" class="header-anchor"&gt;&lt;/a&gt;举个栗子
&lt;/h2&gt;&lt;p&gt;为了大家能够通俗易懂的描述这5G的两个架构，给大家举个栗子：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182247885.jpg"
loading="lazy"
alt="举个栗子"
&gt;&lt;/p&gt;
&lt;p&gt;话说这个张老板，家里养着一头肥朵1， 肥朵1 的小日子过得也很不错！&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182248732.jpg"
loading="lazy"
alt=" 肥朵1 的小日子"
&gt;&lt;/p&gt;
&lt;p&gt;但是突然有一天 肥朵 的价钱大涨，张老板想再养一只 肥朵，可是由于资金不足，（理想状态是一头 肥朵 需要有一个单独的房间）张老板很是苦恼，于是张老板给想出了两套方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方案一：养 肥朵2 的时候，给 肥朵2 在建一个房子；&lt;/li&gt;
&lt;li&gt;方案二：把 肥朵1 和 肥朵2 养在一起，只需将房子变大一点就可以了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方案一按照理想状态的话，有一个比较大的缺点就是花费比较多，这就比较难受了&amp;hellip;&amp;hellip;，但是 肥朵 比较开心~~~~&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182248092.jpg"
loading="lazy"
alt="方案一理想状态"
&gt;&lt;/p&gt;
&lt;p&gt;方案二是将房子重新升级变大即可作为资金花费最少，同时能够获得最大效益，张老板选择的面比较大，可就难受了 肥朵，唉，万恶的资本家。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182249596.jpg"
loading="lazy"
alt="方案二节省资金"
&gt;&lt;/p&gt;
&lt;p&gt;想必大家就已经知道&lt;strong&gt;制约SA和NSA的因素&lt;/strong&gt;了吧！就是money~~~&lt;/p&gt;
&lt;p&gt;而 &lt;strong&gt;肥朵1&lt;/strong&gt; 我们就可以看作是 &lt;strong&gt;4G基站&lt;/strong&gt; ，而把 &lt;strong&gt;肥朵2&lt;/strong&gt; 看作是 &lt;strong&gt;5G基站&lt;/strong&gt;；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按照方案一 肥朵1 的房子 可以看作是 4G核心网络；&lt;/li&gt;
&lt;li&gt;按照方案一 肥朵2 的房子 可以看作是 5G核心网络；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182251067.jpg"
loading="lazy"
alt="方案一对比"
&gt;&lt;/p&gt;
&lt;p&gt;按照方案二的话是将 &lt;strong&gt;肥朵1 和肥朵2的房子&lt;/strong&gt; 看作是&lt;strong&gt;4G核心网络&lt;/strong&gt;，而 &lt;strong&gt;肥朵1&lt;/strong&gt; 也是 &lt;strong&gt;4G基站&lt;/strong&gt;，&lt;strong&gt;肥朵2&lt;/strong&gt; 也是&lt;strong&gt;5G基站&lt;/strong&gt;，请看下图 ：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182252318.jpg"
loading="lazy"
alt="方案二"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简而言之，之所以有SA与NSA架构主要是因为运营商愿意不愿意出钱重新部署。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="5g网络架构"&gt;&lt;a href="#5g%e7%bd%91%e7%bb%9c%e6%9e%b6%e6%9e%84" class="header-anchor"&gt;&lt;/a&gt;5G网络架构
&lt;/h2&gt;&lt;p&gt;目前讲到的都是 5G网络架构 中的两种，其实还有以下多种选项：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182252847.png"
loading="lazy"
alt="5G网络架构的8个选项"
&gt;&lt;/p&gt;
&lt;p&gt;这8个选项分为独立组网和非独立组网两组。其中选项1，2，5，6是独立组网，选项3，4，7，8是非独立组网。非独立组网的选项3，4，7还有不同的子选项。&lt;/p&gt;
&lt;p&gt;在这些选项中，选项1早已在4G结构中实现，选项6和选项8仅是理论存在的部署场景，不具有实际部署价值，标准中不予考虑。&lt;/p&gt;
&lt;h3 id="独立组网sa"&gt;&lt;a href="#%e7%8b%ac%e7%ab%8b%e7%bb%84%e7%bd%91sa" class="header-anchor"&gt;&lt;/a&gt;独立组网SA
&lt;/h3&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182254891.png"
loading="lazy"
alt="独立组网SA"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选项1：就是单纯的4G核心网+4G核心站，就是纯4G组网架构；&lt;/li&gt;
&lt;li&gt;选项2：可以看得出来，就是我们上面例子的方案一，纯5G组网架构；&lt;/li&gt;
&lt;li&gt;选项5：只是对原本4G基站做了升级，变为增强型4G基站【eLTE eNB】；&lt;/li&gt;
&lt;li&gt;选项6：就是将原本4G基站换为5G基站，然而核心网还是4G。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="非独立组网nsa"&gt;&lt;a href="#%e9%9d%9e%e7%8b%ac%e7%ab%8b%e7%bb%84%e7%bd%91nsa" class="header-anchor"&gt;&lt;/a&gt;非独立组网NSA
&lt;/h3&gt;&lt;p&gt;个人感觉NSA还是要比SA复杂一些，但是这样是比较省钱的一种方式，在节省资金的情况下，不影响用户5G体验，相信这也是当下某某运营商的升级过渡期的优先解决方案。&lt;/p&gt;
&lt;p&gt;在非独立组网主要是分为3系、7系、和4系，但是单纯的说你是不会明白的，通信的例外，好吧，你就是不会明白?，请看下面的介绍：&lt;/p&gt;
&lt;h4 id="nsa3系"&gt;&lt;a href="#nsa3%e7%b3%bb" class="header-anchor"&gt;&lt;/a&gt;NSA3系
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182256536.png"
loading="lazy"
alt="NSA3系"
&gt;&lt;/p&gt;
&lt;p&gt;可以看到3系的解决方案就是将原有4G网络升级加5G基站，让手机实现“双通道上网”，但是控制面在4G，用户面4G与5G互相向用户终端提供支持，这样的好处就是可以在5G升级过度时期起到临时代替作用，但是这样会加大4G基站的负荷，本来好好的够1头肥朵居住，突然之间加到了10头肥朵，想想也是有些吃不消的。&lt;/p&gt;
&lt;h4 id="nsa7系"&gt;&lt;a href="#nsa7%e7%b3%bb" class="header-anchor"&gt;&lt;/a&gt;NSA7系
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182257729.png"
loading="lazy"
alt="NSA7系"
&gt;&lt;/p&gt;
&lt;p&gt;看到了7系你是不是有了对3系的对比，相比而言，7系有三点改进：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将3系4G基站升级为增强型4G基站；&lt;/li&gt;
&lt;li&gt;将原有4G核心网淘汰掉，采用5G核心网；&lt;/li&gt;
&lt;li&gt;最后一点改进是7x中，将原有4G基站对接5G核心网络升级为增强型4G基站只传输控制流，将数据流负荷直接转移到了5G基站上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在这种方式，特别是7x，对于运营商在初中期过度时期，这种方式又节省成本，同时又能在过渡期给用户提供高质量5G服务，相信现在XX运营商就这么搞的吧。&lt;/p&gt;
&lt;h4 id="nsa4系"&gt;&lt;a href="#nsa4%e7%b3%bb" class="header-anchor"&gt;&lt;/a&gt;NSA4系
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182258069.png"
loading="lazy"
alt="NSA4系"
&gt;&lt;/p&gt;
&lt;p&gt;可以看到，到达4系阶段，把控制权交了出来，5G就距离SA架构只差一步了吧，这种状态应该是目前转型阶段后期的事情了吧！这样的架构方式同时能享受到4G的低费率，5G的高速率，你是不是有所期待！！！&lt;/p&gt;
&lt;h2 id="最后感悟"&gt;&lt;a href="#%e6%9c%80%e5%90%8e%e6%84%9f%e6%82%9f" class="header-anchor"&gt;&lt;/a&gt;最后感悟
&lt;/h2&gt;&lt;p&gt;5G时代所谓的NSA与SA架构只不过是4G时代向5G时代过渡的不同方案，所谓的NSA又何尝不是对于SA的追求，5G时代大家的感觉是速度真快，然而在快的同时我们又怎么抓住机遇，获得5G时代的红利呢？&lt;/p&gt;
&lt;p&gt;今天做这个文章借鉴了不少前辈的文章及视频知识，并不是想借鉴5G这个热点，自己涉猎的知识面还是狭隘，所学所思才是真正的进步。&lt;/p&gt;
&lt;p&gt;PS：举个栗子是我自己P图?，最后讲解方案的用图均引用至&lt;a class="link" href="https://network.51cto.com/art/201903/594121.htm" target="_blank" rel="noopener"
&gt;51CTO&lt;/a&gt;，看着画的不错自己就偷个懒，不自己构图了，感谢这个知识共享的年代，谢谢。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;看到这里，你要是感觉此文对你有所帮助，希望你转发给更多的人看到，5G时代的我们，更应该知识共享。。。&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>看完了《影》，黄海海报展走一波</title><link>https://blog.debuginn.com/p/movie-ying/</link><pubDate>Wed, 24 Jul 2019 23:02:03 +0800</pubDate><guid>https://blog.debuginn.com/p/movie-ying/</guid><description>&lt;img src="https://webp.debuginn.com/202303182303574.jpg" alt="Featured image of post 看完了《影》，黄海海报展走一波" /&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182306053.jpeg"
loading="lazy"
alt="《影》"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182306614.jpg"
loading="lazy"
alt="《影》"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182307230.jpg"
loading="lazy"
alt="《捉妖记》"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182307618.jpg"
loading="lazy"
alt="《捉妖记》"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182308105.jpg"
loading="lazy"
alt="《道士下山》"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182308924.jpg"
loading="lazy"
alt="《黄金时代》美版"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303182308915.jpg"
loading="lazy"
alt="《黄飞鸿》"
&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Python 数据挖掘实例 决策树分析</title><link>https://blog.debuginn.com/p/python-decision-tree/</link><pubDate>Mon, 17 Jun 2019 16:00:00 +0800</pubDate><guid>https://blog.debuginn.com/p/python-decision-tree/</guid><description>&lt;h2 id="安装anaconda-python集成环境"&gt;&lt;a href="#%e5%ae%89%e8%a3%85anaconda-python%e9%9b%86%e6%88%90%e7%8e%af%e5%a2%83" class="header-anchor"&gt;&lt;/a&gt;安装Anaconda Python集成环境
&lt;/h2&gt;&lt;h3 id="下载环境"&gt;&lt;a href="#%e4%b8%8b%e8%bd%bd%e7%8e%af%e5%a2%83" class="header-anchor"&gt;&lt;/a&gt;下载环境
&lt;/h3&gt;&lt;p&gt;官网： &lt;a class="link" href="https://www.anaconda.com/" target="_blank" rel="noopener"
&gt;https://www.anaconda.com/&lt;/a&gt;
下载： &lt;a class="link" href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener"
&gt;https://www.anaconda.com/distribution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241219353.png"
loading="lazy"
alt="anaconda 下载选择"
&gt;&lt;/p&gt;
&lt;h3 id="安装环境"&gt;&lt;a href="#%e5%ae%89%e8%a3%85%e7%8e%af%e5%a2%83" class="header-anchor"&gt;&lt;/a&gt;安装环境
&lt;/h3&gt;&lt;p&gt;下载过程中使用默认，但有一个页面需要确认，如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241219803.png"
loading="lazy"
alt="anaconda选择页面"
&gt;&lt;/p&gt;
&lt;p&gt;第一个勾是是否把 Anaconda 加入环境变量，这涉及到能否直接在 cmd中使用 conda、jupyter、 ipython 等命令，推荐打勾。&lt;/p&gt;
&lt;p&gt;第二个是是否设置 Anaconda 所带的 Python 3.6 为系统默认的 Python 版本，可以打勾。&lt;/p&gt;
&lt;p&gt;安装完成后，在开始菜单中显示“Anaconda2”如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241220350.png"
loading="lazy"
alt="安装显示界面"
&gt;&lt;/p&gt;
&lt;h3 id="安装第三方程序包-graphviz"&gt;&lt;a href="#%e5%ae%89%e8%a3%85%e7%ac%ac%e4%b8%89%e6%96%b9%e7%a8%8b%e5%ba%8f%e5%8c%85-graphviz" class="header-anchor"&gt;&lt;/a&gt;安装第三方程序包 Graphviz
&lt;/h3&gt;&lt;p&gt;目的是在决策树算法中八进制最终的树结构。&lt;/p&gt;
&lt;p&gt;1、打开 Anaconda Prompt ，输入 conda install python-graphviz，回车即可完成安装，如下图所示，本图所示已经安装 了 graphviz 包，若之前没有安装，这时会花点时间安装，安装不用干预。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241221843.png"
loading="lazy"
alt="安装决策树依赖包"
&gt;&lt;/p&gt;
&lt;p&gt;安装完成后先输入 python，然后再输入 import graphviz，测试是否成功安装，如上图所示。
需要设置环境变量，才能使用新安装的 graphviz。&lt;/p&gt;
&lt;h3 id="anaconda及依赖包环境变量设置"&gt;&lt;a href="#anaconda%e5%8f%8a%e4%be%9d%e8%b5%96%e5%8c%85%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f%e8%ae%be%e7%bd%ae" class="header-anchor"&gt;&lt;/a&gt;Anaconda及依赖包环境变量设置
&lt;/h3&gt;&lt;p&gt;首先查看 anaconda 安装在哪个目录下，可以打开 Spyder 的属性，看一看目标是什么目 录。例如本机的 anaconda 安装路径为 C:\Users\lenovo\Anaconda2。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面设置环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在用户变量“path”里添加 &lt;code&gt;C:\Users\debuginn\Anaconda2\Library\bin\graphviz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在系统变量的“path”里添加 &lt;code&gt;C:\Users\debuginn\Anaconda2\Library\bin\graphviz\dot.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果现在有正在打开的 anaconda 程序，例如正在 Spyder，那么关闭 Spyder，再启动，这 样刚才设置的环境变量生效。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="决策树分析"&gt;&lt;a href="#%e5%86%b3%e7%ad%96%e6%a0%91%e5%88%86%e6%9e%90" class="header-anchor"&gt;&lt;/a&gt;决策树分析
&lt;/h2&gt;&lt;h3 id="格式化原始数据"&gt;&lt;a href="#%e6%a0%bc%e5%bc%8f%e5%8c%96%e5%8e%9f%e5%a7%8b%e6%95%b0%e6%8d%ae" class="header-anchor"&gt;&lt;/a&gt;格式化原始数据
&lt;/h3&gt;&lt;p&gt;将下图的表 demo 输入到 Excel 中，保存为.csv 文件（.csv 为逗号分隔值文件格式）。
注意将表 demo 中的汉字值转换成数据字值，例如“是否是公司职员”列中的“是”为“1”， “否”为“0”。转换后的表中数据如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241222952.png"
loading="lazy"
alt="学习表"
&gt;&lt;/p&gt;
&lt;h3 id="编写数据分析代码"&gt;&lt;a href="#%e7%bc%96%e5%86%99%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90%e4%bb%a3%e7%a0%81" class="header-anchor"&gt;&lt;/a&gt;编写数据分析代码
&lt;/h3&gt;&lt;p&gt;编写程序对上面的数据进行决策树分类，采用信息熵（entropy）作为度量标准。参考代码如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.tree&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DecisionTreeClassifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;export_graphviz&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;graphviz&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;demo.csv&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DecisionTreeClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;criterion&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;entropy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;dot_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;export_graphviz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;graphviz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dot_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;table&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;digraph Tree &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;node &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;box&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;X[0] &amp;lt;= 0.5\nentropy = 0.94\nsamples = 14\nvalue = [9, 5]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;X[1] &amp;lt;= 1.5\nentropy = 0.985\nsamples = 7\nvalue = [3, 4]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;0&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;labeldistance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2.5, &lt;span class="nv"&gt;labelangle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;45, &lt;span class="nv"&gt;headlabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;True&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 3\nvalue = [0, 3]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;X[1] &amp;lt;= 2.5\nentropy = 0.811\nsamples = 4\nvalue = [3, 1]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 2\nvalue = [2, 0]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;X[3] &amp;lt;= 0.5\nentropy = 1.0\nsamples = 2\nvalue = [1, 1]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 1\nvalue = [1, 0]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 1\nvalue = [0, 1]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;X[1] &amp;lt;= 2.5\nentropy = 0.592\nsamples = 7\nvalue = [6, 1]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;0&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;labeldistance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2.5, &lt;span class="nv"&gt;labelangle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-45, &lt;span class="nv"&gt;headlabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;False&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 4\nvalue = [4, 0]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;8&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;X[3] &amp;lt;= 0.5\nentropy = 0.918\nsamples = 3\nvalue = [2, 1]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;8&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 2\nvalue = [2, 0]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;10&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;entropy = 0.0\nsamples = 1\nvalue = [0, 1]&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;10&lt;/span&gt; -&amp;gt; &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="数据分析结果"&gt;&lt;a href="#%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90%e7%bb%93%e6%9e%9c" class="header-anchor"&gt;&lt;/a&gt;数据分析结果
&lt;/h3&gt;&lt;p&gt;程序运行结果在与该程序在同一目录下的 table.pdf 文件中，将每一个叶子结点转换成 IF-THEN 规则。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241223943.png"
loading="lazy"
alt="决策树分析结果"
&gt;&lt;/p&gt;
&lt;h3 id="if-then分类规则"&gt;&lt;a href="#if-then%e5%88%86%e7%b1%bb%e8%a7%84%e5%88%99" class="header-anchor"&gt;&lt;/a&gt;IF-THEN分类规则
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（1）IF&lt;span class="s2"&gt;&amp;#34;不是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄大于等于40&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;不买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（2）IF&lt;span class="s2"&gt;&amp;#34;不是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄小于40&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（3）IF&lt;span class="s2"&gt;&amp;#34;不是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄大于50&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;信用为良&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;不买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（4）IF&lt;span class="s2"&gt;&amp;#34;不是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄大于40&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;信用为优&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（5）IF&lt;span class="s2"&gt;&amp;#34;是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄小于50&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;不买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（6）IF&lt;span class="s2"&gt;&amp;#34;是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄小于50&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;信用为优&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;（7）IF&lt;span class="s2"&gt;&amp;#34;是公司员工&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;年龄小于50&amp;#34;&lt;/span&gt; AND &lt;span class="s2"&gt;&amp;#34;信用为良&amp;#34;&lt;/span&gt;, THEN &lt;span class="s2"&gt;&amp;#34;不买保险&amp;#34;&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>网络笔记之端口及常见端口号</title><link>https://blog.debuginn.com/p/network-notes-port/</link><pubDate>Sat, 15 Jun 2019 10:59:47 +0800</pubDate><guid>https://blog.debuginn.com/p/network-notes-port/</guid><description>&lt;h2 id="端口定义"&gt;&lt;a href="#%e7%ab%af%e5%8f%a3%e5%ae%9a%e4%b9%89" class="header-anchor"&gt;&lt;/a&gt;端口定义
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;通信端口，又称为连接端口、端口、协议端口在计算机网络中是一种经由软件创建的服务，在一个计算机操作系统中扮演通信的端点。每个通信端口都会与主机的IP地址及通信协议关联。通信端口以16比特数字来表示，这被称为通信端口编号。 位于传输层的通信协议通常需要指定端口号，例如在TCP/IP协议族之下的TCP与UDP协议。
引用来源：维基百科&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;传输层协议，如传输控制协议（TCP）与用户数据包协议（UDP），在分组表头中，定义了来源端口号与目的端口号。&lt;/p&gt;
&lt;p&gt;一个通信端口号使用16位无符号整数（unsigned integer）来表示，其范围介于0与65535之间。&lt;/p&gt;
&lt;p&gt;在TCP协议中，端口号0是被保留的，不可使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1&amp;ndash;1023 系统保留，只能由root用户使用。&lt;/li&gt;
&lt;li&gt;1024&amp;mdash;4999 由客户端程序自由分配。&lt;/li&gt;
&lt;li&gt;5000&amp;mdash;65535 由服务器端程序自由分配在UDP协议中，来源端口号是可以选择要不要填上，如果设为0，则代表没有来源端口号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="常见端口对照表"&gt;&lt;a href="#%e5%b8%b8%e8%a7%81%e7%ab%af%e5%8f%a3%e5%af%b9%e7%85%a7%e8%a1%a8" class="header-anchor"&gt;&lt;/a&gt;常见端口对照表
&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;端口号码 / 层&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;注释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;tcpmux&lt;/td&gt;
&lt;td&gt;TCP 端口服务多路复用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;rje&lt;/td&gt;
&lt;td&gt;远程作业入口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;echo&lt;/td&gt;
&lt;td&gt;Echo 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;discard&lt;/td&gt;
&lt;td&gt;用于连接测试的空服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;systat&lt;/td&gt;
&lt;td&gt;用于列举连接了的端口的系统状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;daytime&lt;/td&gt;
&lt;td&gt;给请求主机发送日期和时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;qotd&lt;/td&gt;
&lt;td&gt;给连接了的主机发送每日格言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;msp&lt;/td&gt;
&lt;td&gt;消息发送协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;chargen&lt;/td&gt;
&lt;td&gt;字符生成服务；发送无止境的字符流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;ftp-data&lt;/td&gt;
&lt;td&gt;FTP 数据端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;ftp&lt;/td&gt;
&lt;td&gt;文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;ssh&lt;/td&gt;
&lt;td&gt;安全 Shell（SSH）服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;telnet&lt;/td&gt;
&lt;td&gt;Telnet 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;smtp&lt;/td&gt;
&lt;td&gt;简单邮件传输协议（SMTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;time&lt;/td&gt;
&lt;td&gt;时间协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;rlp&lt;/td&gt;
&lt;td&gt;资源定位协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;nameserver&lt;/td&gt;
&lt;td&gt;互联网名称服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;nicname&lt;/td&gt;
&lt;td&gt;WHOIS 目录服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;tacacs&lt;/td&gt;
&lt;td&gt;用于基于 TCP/IP 验证和访问的终端访问控制器访问控制系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;re-mail-ck&lt;/td&gt;
&lt;td&gt;远程邮件检查协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;域名服务（如 BIND）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;whois++&lt;/td&gt;
&lt;td&gt;WHOIS++，被扩展了的 WHOIS 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;bootps&lt;/td&gt;
&lt;td&gt;引导协议（BOOTP）服务；还被动态主机配置协议（DHCP）服务使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;td&gt;bootpc&lt;/td&gt;
&lt;td&gt;Bootstrap（BOOTP）客户；还被动态主机配置协议（DHCP）客户使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;tftp&lt;/td&gt;
&lt;td&gt;小文件传输协议（TFTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;gopher&lt;/td&gt;
&lt;td&gt;Gopher 互联网文档搜寻和检索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;netrjs-1&lt;/td&gt;
&lt;td&gt;远程作业服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;netrjs-2&lt;/td&gt;
&lt;td&gt;远程作业服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;td&gt;netrjs-3&lt;/td&gt;
&lt;td&gt;远程作业服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;td&gt;netrjs-4&lt;/td&gt;
&lt;td&gt;远程作业服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;td&gt;finger&lt;/td&gt;
&lt;td&gt;用于用户联系信息的 Finger 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;http&lt;/td&gt;
&lt;td&gt;用于万维网（WWW）服务的超文本传输协议（HTTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;td&gt;kerberos&lt;/td&gt;
&lt;td&gt;Kerberos 网络验证系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;supdup&lt;/td&gt;
&lt;td&gt;Telnet 协议扩展&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;hostname&lt;/td&gt;
&lt;td&gt;SRI-NIC 机器上的主机名服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;iso-tsap&lt;/td&gt;
&lt;td&gt;ISO 开发环境（ISODE）网络应用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;csnet-ns&lt;/td&gt;
&lt;td&gt;邮箱名称服务器；也被 CSO 名称服务器使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;rtelnet&lt;/td&gt;
&lt;td&gt;远程 Telnet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;td&gt;pop2&lt;/td&gt;
&lt;td&gt;邮局协议版本2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;pop3&lt;/td&gt;
&lt;td&gt;邮局协议版本3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;sunrpc&lt;/td&gt;
&lt;td&gt;用于远程命令执行的远程过程调用（RPC）协议，被网络文件系统（NFS）使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;auth&lt;/td&gt;
&lt;td&gt;验证和身份识别协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;sftp&lt;/td&gt;
&lt;td&gt;安全文件传输协议（SFTP）服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;uucp-path&lt;/td&gt;
&lt;td&gt;Unix 到 Unix 复制协议（UUCP）路径服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;119&lt;/td&gt;
&lt;td&gt;nntp&lt;/td&gt;
&lt;td&gt;用于 USENET 讨论系统的网络新闻传输协议（NNTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;ntp&lt;/td&gt;
&lt;td&gt;网络时间协议（NTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;137&lt;/td&gt;
&lt;td&gt;netbios-ns&lt;/td&gt;
&lt;td&gt;在红帽企业 Linux 中被 Samba 使用的 NETBIOS 名称服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;138&lt;/td&gt;
&lt;td&gt;netbios-dgm&lt;/td&gt;
&lt;td&gt;在红帽企业 Linux 中被 Samba 使用的 NETBIOS 数据报服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;139&lt;/td&gt;
&lt;td&gt;netbios-ssn&lt;/td&gt;
&lt;td&gt;在红帽企业 Linux 中被 Samba 使用的NET BIOS 会话服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;143&lt;/td&gt;
&lt;td&gt;imap&lt;/td&gt;
&lt;td&gt;互联网消息存取协议（IMAP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;161&lt;/td&gt;
&lt;td&gt;snmp&lt;/td&gt;
&lt;td&gt;简单网络管理协议（SNMP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;162&lt;/td&gt;
&lt;td&gt;snmptrap&lt;/td&gt;
&lt;td&gt;SNMP 的陷阱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;163&lt;/td&gt;
&lt;td&gt;cmip-man&lt;/td&gt;
&lt;td&gt;通用管理信息协议（CMIP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;164&lt;/td&gt;
&lt;td&gt;cmip-agent&lt;/td&gt;
&lt;td&gt;通用管理信息协议（CMIP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;174&lt;/td&gt;
&lt;td&gt;mailq&lt;/td&gt;
&lt;td&gt;MAILQ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;177&lt;/td&gt;
&lt;td&gt;xdmcp&lt;/td&gt;
&lt;td&gt;X 显示管理器控制协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;178&lt;/td&gt;
&lt;td&gt;nextstep&lt;/td&gt;
&lt;td&gt;NeXTStep 窗口服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;179&lt;/td&gt;
&lt;td&gt;bgp&lt;/td&gt;
&lt;td&gt;边界网络协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;191&lt;/td&gt;
&lt;td&gt;prospero&lt;/td&gt;
&lt;td&gt;Cliffod Neuman 的 Prospero 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;194&lt;/td&gt;
&lt;td&gt;irc&lt;/td&gt;
&lt;td&gt;互联网中继聊天（IRC）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;199&lt;/td&gt;
&lt;td&gt;smux&lt;/td&gt;
&lt;td&gt;SNMP UNIX 多路复用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;at-rtmp&lt;/td&gt;
&lt;td&gt;AppleTalk 选路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;at-nbp&lt;/td&gt;
&lt;td&gt;AppleTalk 名称绑定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;at-echo&lt;/td&gt;
&lt;td&gt;AppleTalk echo 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;206&lt;/td&gt;
&lt;td&gt;at-zis&lt;/td&gt;
&lt;td&gt;AppleTalk 区块信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;209&lt;/td&gt;
&lt;td&gt;qmtp&lt;/td&gt;
&lt;td&gt;快速邮件传输协议（QMTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;210&lt;/td&gt;
&lt;td&gt;z39.50&lt;/td&gt;
&lt;td&gt;NISO Z39.50 数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;213&lt;/td&gt;
&lt;td&gt;ipx&lt;/td&gt;
&lt;td&gt;互联网络分组交换协议（IPX），被 Novell Netware 环境常用的数据报协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;220&lt;/td&gt;
&lt;td&gt;imap3&lt;/td&gt;
&lt;td&gt;互联网消息存取协议版本3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;245&lt;/td&gt;
&lt;td&gt;link&lt;/td&gt;
&lt;td&gt;LINK&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;347&lt;/td&gt;
&lt;td&gt;fatserv&lt;/td&gt;
&lt;td&gt;Fatmen 服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;363&lt;/td&gt;
&lt;td&gt;rsvp_tunnel&lt;/td&gt;
&lt;td&gt;RSVP 隧道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;369&lt;/td&gt;
&lt;td&gt;rpc2portmap&lt;/td&gt;
&lt;td&gt;Coda 文件系统端口映射器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;370&lt;/td&gt;
&lt;td&gt;codaauth2&lt;/td&gt;
&lt;td&gt;Coda 文件系统验证服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;372&lt;/td&gt;
&lt;td&gt;ulistproc&lt;/td&gt;
&lt;td&gt;UNIX Listserv&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;389&lt;/td&gt;
&lt;td&gt;ldap&lt;/td&gt;
&lt;td&gt;轻型目录存取协议（LDAP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;427&lt;/td&gt;
&lt;td&gt;svrloc&lt;/td&gt;
&lt;td&gt;服务位置协议（SLP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;434&lt;/td&gt;
&lt;td&gt;mobileip-agent&lt;/td&gt;
&lt;td&gt;可移互联网协议（IP）代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;435&lt;/td&gt;
&lt;td&gt;mobilip-mn&lt;/td&gt;
&lt;td&gt;可移互联网协议（IP）管理器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;https&lt;/td&gt;
&lt;td&gt;安全超文本传输协议（HTTP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;444&lt;/td&gt;
&lt;td&gt;snpp&lt;/td&gt;
&lt;td&gt;小型网络分页协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;445&lt;/td&gt;
&lt;td&gt;microsoft-ds&lt;/td&gt;
&lt;td&gt;通过 TCP/IP 的服务器消息块（SMB）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;464&lt;/td&gt;
&lt;td&gt;kpasswd&lt;/td&gt;
&lt;td&gt;Kerberos 口令和钥匙改换服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;468&lt;/td&gt;
&lt;td&gt;photuris&lt;/td&gt;
&lt;td&gt;Photuris 会话钥匙管理协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;487&lt;/td&gt;
&lt;td&gt;saft&lt;/td&gt;
&lt;td&gt;简单不对称文件传输（SAFT）协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;488&lt;/td&gt;
&lt;td&gt;gss-http&lt;/td&gt;
&lt;td&gt;用于 HTTP 的通用安全服务（GSS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;496&lt;/td&gt;
&lt;td&gt;pim-rp-disc&lt;/td&gt;
&lt;td&gt;用于协议独立的多址传播（PIM）服务的会合点发现（RP-DISC）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;isakmp&lt;/td&gt;
&lt;td&gt;互联网安全关联和钥匙管理协议（ISAKMP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;535&lt;/td&gt;
&lt;td&gt;iiop&lt;/td&gt;
&lt;td&gt;互联网内部对象请求代理协议（IIOP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;538&lt;/td&gt;
&lt;td&gt;gdomap&lt;/td&gt;
&lt;td&gt;GNUstep 分布式对象映射器（GDOMAP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;546&lt;/td&gt;
&lt;td&gt;dhcpv6-client&lt;/td&gt;
&lt;td&gt;动态主机配置协议（DHCP）版本6客户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;547&lt;/td&gt;
&lt;td&gt;dhcpv6-server&lt;/td&gt;
&lt;td&gt;动态主机配置协议（DHCP）版本6服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;554&lt;/td&gt;
&lt;td&gt;rtsp&lt;/td&gt;
&lt;td&gt;实时流播协议（RTSP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;563&lt;/td&gt;
&lt;td&gt;nntps&lt;/td&gt;
&lt;td&gt;通过安全套接字层的网络新闻传输协议（NNTPS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;565&lt;/td&gt;
&lt;td&gt;whoami&lt;/td&gt;
&lt;td&gt;whoami&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;587&lt;/td&gt;
&lt;td&gt;submission&lt;/td&gt;
&lt;td&gt;邮件消息提交代理（MSA）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;610&lt;/td&gt;
&lt;td&gt;npmp-local&lt;/td&gt;
&lt;td&gt;网络外设管理协议（NPMP）本地 / 分布式排队系统（DQS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;611&lt;/td&gt;
&lt;td&gt;npmp-gui&lt;/td&gt;
&lt;td&gt;网络外设管理协议（NPMP）GUI / 分布式排队系统（DQS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;612&lt;/td&gt;
&lt;td&gt;hmmp-ind&lt;/td&gt;
&lt;td&gt;HMMP 指示 / DQS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;631&lt;/td&gt;
&lt;td&gt;ipp&lt;/td&gt;
&lt;td&gt;互联网打印协议（IPP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;636&lt;/td&gt;
&lt;td&gt;ldaps&lt;/td&gt;
&lt;td&gt;通过安全套接字层的轻型目录访问协议（LDAPS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;674&lt;/td&gt;
&lt;td&gt;acap&lt;/td&gt;
&lt;td&gt;应用程序配置存取协议（ACAP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;694&lt;/td&gt;
&lt;td&gt;ha-cluster&lt;/td&gt;
&lt;td&gt;用于带有高可用性的群集的心跳服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;749&lt;/td&gt;
&lt;td&gt;kerberos-adm&lt;/td&gt;
&lt;td&gt;Kerberos 版本5（v5）的“kadmin”数据库管理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;750&lt;/td&gt;
&lt;td&gt;kerberos-iv&lt;/td&gt;
&lt;td&gt;Kerberos 版本4（v4）服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;765&lt;/td&gt;
&lt;td&gt;webster&lt;/td&gt;
&lt;td&gt;网络词典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;767&lt;/td&gt;
&lt;td&gt;phonebook&lt;/td&gt;
&lt;td&gt;网络电话簿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;873&lt;/td&gt;
&lt;td&gt;rsync&lt;/td&gt;
&lt;td&gt;rsync 文件传输服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;992&lt;/td&gt;
&lt;td&gt;telnets&lt;/td&gt;
&lt;td&gt;通过安全套接字层的 Telnet（TelnetS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;993&lt;/td&gt;
&lt;td&gt;imaps&lt;/td&gt;
&lt;td&gt;通过安全套接字层的互联网消息存取协议（IMAPS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;994&lt;/td&gt;
&lt;td&gt;ircs&lt;/td&gt;
&lt;td&gt;通过安全套接字层的互联网中继聊天（IRCS）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;995&lt;/td&gt;
&lt;td&gt;pop3s&lt;/td&gt;
&lt;td&gt;通过安全套接字层的邮局协议版本3（POPS3）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>再见Windows7，中学时期的一代神器</title><link>https://blog.debuginn.com/p/windows7-bye/</link><pubDate>Wed, 05 Jun 2019 16:09:53 +0800</pubDate><guid>https://blog.debuginn.com/p/windows7-bye/</guid><description>&lt;img src="https://webp.debuginn.com/202303241241419.jpg" alt="Featured image of post 再见Windows7，中学时期的一代神器" /&gt;&lt;p&gt;今天不经意间开启了windows7的虚拟机，用了半天，给出了下面的弹窗，一看，原来是微软最后做windows7的更新停止工作，想想用Windows7这个系统，记忆中从小学就开始使用了，用着它参加了我人生中的大考，山东省2016年春季高考，也算是圆了自己的一个大学梦，考上了本科院校，PS（自己学校实在是emm，一年出不了多少本科生），在这写着一篇文章纪念一下自己使用了近十年的系统。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241242751.jpg"
loading="lazy"
alt="windows7"
&gt;&lt;/p&gt;
&lt;p&gt;社会的进步，同时又看出美帝国主义的险恶，不过好消息是华为要推出自己的操作系统，鸿蒙OS，比较期待，现如今我们只有软件、硬件强大起来，打破美帝的垄断，才能在互联网有得自己的一席之地，加油，中国、加油，新时代的程序猿、加油，华为，加油、中华民族，加油！！！&lt;/p&gt;
&lt;p&gt;最后给大家展示一下Windows7这个系统的告白网页吧，以后Windows家族何去何从，大家拭目以待，致敬Win7。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241243464.png"
loading="lazy"
alt="windows7"
&gt;&lt;/p&gt;
&lt;p&gt;不得不说，最后还要推一波广告，哈哈，Windows10现在已经是我的主要使用的OS了！！&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>微信小程序入门笔记</title><link>https://blog.debuginn.com/p/mini-program-notes/</link><pubDate>Tue, 04 Jun 2019 20:36:37 +0800</pubDate><guid>https://blog.debuginn.com/p/mini-program-notes/</guid><description>&lt;img src="https://webp.debuginn.com/202303241244369.jpg" alt="Featured image of post 微信小程序入门笔记" /&gt;&lt;blockquote&gt;
&lt;p&gt;最近两个星期在学习小程序，主要是应对“全国大学生计算机应用能力与信息素养比赛”，虽然最后没有取得一个比较好的成绩（PS：国家安慰奖），但是收获了不少，边学习边敲代码也是不错的，嘿嘿，下面就是我对这个学习小程序的代码笔记及我设计的小程序的演示图片，嘿嘿，在此处建立一个里程碑吧！&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="小程序学习笔记"&gt;&lt;a href="#%e5%b0%8f%e7%a8%8b%e5%ba%8f%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0" class="header-anchor"&gt;&lt;/a&gt;小程序学习笔记
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241245588.png"
loading="lazy"
alt="小程序学习笔记"
&gt;&lt;/p&gt;
&lt;h2 id="设计小程序图例"&gt;&lt;a href="#%e8%ae%be%e8%ae%a1%e5%b0%8f%e7%a8%8b%e5%ba%8f%e5%9b%be%e4%be%8b" class="header-anchor"&gt;&lt;/a&gt;设计小程序图例
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241245667.png"
loading="lazy"
alt="设计小程序图例"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241246567.png"
loading="lazy"
alt="设计小程序图例"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241246058.png"
loading="lazy"
alt="设计小程序图例"
&gt;&lt;/p&gt;
&lt;h2 id="ppt-文稿"&gt;&lt;a href="#ppt-%e6%96%87%e7%a8%bf" class="header-anchor"&gt;&lt;/a&gt;PPT 文稿
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241247487.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241247242.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241248773.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241248524.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241248347.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241249125.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241249763.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241249463.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241250103.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241250804.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241250283.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241250987.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241251928.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241251241.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241252101.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241253383.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241253374.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241253786.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241253113.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241254101.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241254296.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241254531.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241255333.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256859.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256172.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256172.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256389.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256719.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256347.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256380.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256978.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241256892.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241257014.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241257796.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241257727.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241257343.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303241257384.jpg"
loading="lazy"
alt="PPT文稿"
&gt;&lt;/p&gt;
&lt;h2 id="总结"&gt;&lt;a href="#%e6%80%bb%e7%bb%93" class="header-anchor"&gt;&lt;/a&gt;总结
&lt;/h2&gt;&lt;p&gt;这个框架才用了ColorUI设计，界面个人感觉清新爽目，嘿嘿，，，，，遗憾的是没有做后台，相比其他学校终结了一下，缺少以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绝大部分作品与本学校教务处对接，已经运行上线；&lt;/li&gt;
&lt;li&gt;后台设计及算法优化比较先进；&lt;/li&gt;
&lt;li&gt;采用多种技术，只是采用小程序做显示及基本功能的实现，主要寄托于后台；&lt;/li&gt;
&lt;li&gt;获得国一的作品用了Python进行爬虫及数据分析，膜拜大佬。。。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;算了，以后就不比赛了，准备北漂工作了，加油！！！&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>数据仓库与数据挖掘 使用SQL语句实现AdventureWorksDW数据仓库的多维数据分析</title><link>https://blog.debuginn.com/p/data-mining-adventureworksdw/</link><pubDate>Wed, 27 Mar 2019 21:40:26 +0800</pubDate><guid>https://blog.debuginn.com/p/data-mining-adventureworksdw/</guid><description>&lt;h2 id="准备工作"&gt;&lt;a href="#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;准备工作
&lt;/h2&gt;&lt;p&gt;AdventureWork各种版本下载链接：&lt;/p&gt;
&lt;p&gt;此操作数据库版本为：2014版本。&lt;/p&gt;
&lt;h2 id="切片操作"&gt;&lt;a href="#%e5%88%87%e7%89%87%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;切片操作
&lt;/h2&gt;&lt;p&gt;进行切片操作切片。选择地点维、产品维和时间维查看2012年3月份的销售额&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品地区&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;月份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;销售额&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303252142124.png"
loading="lazy"
alt="result"
&gt;&lt;/p&gt;
&lt;h2 id="切块操作"&gt;&lt;a href="#%e5%88%87%e5%9d%97%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;切块操作
&lt;/h2&gt;&lt;p&gt;切块操作切块。选择地点维、产品维和时间维查看2011年3月份和4月份的销售额&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品地区&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;月份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;销售额&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;BETWEEN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303252144018.png"
loading="lazy"
alt="切块操作切块"
&gt;&lt;/p&gt;
&lt;h2 id="旋转操作"&gt;&lt;a href="#%e6%97%8b%e8%bd%ac%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;旋转操作
&lt;/h2&gt;&lt;p&gt;旋转操作旋转。选择地点维、产品维和时间维,以地区维为主视图查看销售额&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品地区&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;年份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;月份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;销售额&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- 产品表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- 销售地区表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- 销售量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303252144795.png"
loading="lazy"
alt="旋转操作旋转"
&gt;&lt;/p&gt;
&lt;h2 id="旋转切块"&gt;&lt;a href="#%e6%97%8b%e8%bd%ac%e5%88%87%e5%9d%97" class="header-anchor"&gt;&lt;/a&gt;旋转+切块
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品地区&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;年份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;月份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;销售额&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- 产品表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- 销售地区表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;-- 销售量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BETWEEN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303252145242.png"
loading="lazy"
alt="旋转&amp;#43;切块"
&gt;&lt;/p&gt;
&lt;h2 id="上钻操作"&gt;&lt;a href="#%e4%b8%8a%e9%92%bb%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;上钻操作
&lt;/h2&gt;&lt;p&gt;上钻。选择地点维、产品维和时间维查看不同年份的销售额&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品地区&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;月份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;销售额&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303252146458.png"
loading="lazy"
alt="上钻"
&gt;&lt;/p&gt;
&lt;h2 id="下钻操作"&gt;&lt;a href="#%e4%b8%8b%e9%92%bb%e6%93%8d%e4%bd%9c" class="header-anchor"&gt;&lt;/a&gt;下钻操作
&lt;/h2&gt;&lt;p&gt;下钻。选择地点维、产品维和时间维查看不同日期的销售额&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;产品地区&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;月份&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesAmount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;销售额&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductKey&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimProduct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EnglishProductName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DimSalesTerritory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SalesTerritoryRegion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FactInternetSales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OrderDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>【NCRE四级网络工程师】操作系统单选题</title><link>https://blog.debuginn.com/p/test-ncre-os-single-topic/</link><pubDate>Tue, 26 Feb 2019 21:41:48 +0800</pubDate><guid>https://blog.debuginn.com/p/test-ncre-os-single-topic/</guid><description>&lt;img src="https://webp.debuginn.com/202303261146594.jpg" alt="Featured image of post 【NCRE四级网络工程师】操作系统单选题" /&gt;&lt;p&gt;&lt;strong&gt;在不同类型的操作系统中，批处理操作系统的缺点是：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺少交互性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;页式存储管理方案中，若一个进程的虚拟地址空间为2GB，页面大小为4KB，当用4字节标识物理页号时，页表需要占用多少个页面？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个进程的虚拟地址空间为2GB，页面大小为4KB，则共有&lt;code&gt;2*1024*1024/4&lt;/code&gt;个页表项；&lt;/p&gt;
&lt;p&gt;每个页面用4个字节标识物理块号，则需要2&lt;em&gt;1024&lt;/em&gt;1024/4*4大小的页表，由于每个页表为4KB，即&lt;code&gt;2*1024*1024/4*4/（4*1024）&lt;/code&gt;=512个页面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假设某文件由100个逻辑记录组成，每个逻辑记录长度为80个字符。磁盘空间被划分为若干块，块大小为1024字符。在没有采用成组操作时，磁盘空间的利用率为多少？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在没有成组操作时，每一个记录占用一个块，那么磁盘空间的利用率为&lt;code&gt;80/1024=8%&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假设某文件由100个逻辑记录组成，每个逻辑记录文件长度为80个字符。磁盘空间被划分为若干块，块大小为1024个字符。若才作用成组操作，块因子为12，那么磁盘空间的利用率为多少？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;若采用成组操作时，每12个记录占用一个块，那么磁盘空间的利用率为&lt;code&gt;80*12/1024=94%&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下列关于死锁与安全状态的描述中，那个事正确的？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;死锁状态一定是不安全状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在可变分区存储管理方案中，为加快内存分配，当采用最佳适应算法时空闲区的组织应该是：按空闲区大小递增顺序排列。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假设某文件系统的物理结构采用类UNIX的二级索引结构。主索引表有12项，前10项给出文件前10块的磁盘地址，第11项给出一级索引表的地址，第12项给出二级索引表的地址。一级和二级索引表的大小均为一个磁盘块，可存放100个磁盘地址。在找到主索引表之后，要访问文件的第1000块，还需要启动多少次磁盘？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1~10块采用的是直接索引，需要启动磁盘1次；&lt;/li&gt;
&lt;li&gt;11~110块采用的是一级索引，需要启动磁盘2次；&lt;/li&gt;
&lt;li&gt;111~10110块采用的是二级索引，需要启动磁盘3次。&lt;/li&gt;
&lt;li&gt;第1000块访问时，找到主索引后，需要启动磁盘2次。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在文件系统中，文件的逻辑块与存储介质上物理块存放顺序一致的物理结构是：顺序结构。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开文件时，系统主要完成以下工作：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①根据文件路径名查目录，找到&lt;strong&gt;FCB主部&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;②根据打开方式，&lt;strong&gt;共享说明和用户身份检查访问合法性&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;③根据&lt;strong&gt;文件号查系统打开文件表&lt;/strong&gt;，看文件是否已被打开；&lt;/li&gt;
&lt;li&gt;④在用户打开文件表中取一空表项，填写打开方式等，并指向系统打开文件表对应表项。&lt;strong&gt;系统返回用户文件描述符fd，用于以后读写文件。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;假设某文件系统的物理结构采用类UNIX的二级索引结构。主索引表有12项，前10项给出文件前10块的磁盘地址，第11项给出一级索引表的地址，第12项给出二级索引表的地址。一级和二级索引表的大小均为一个磁盘块，可存放100个磁盘地址。针对以上描述的文件系统，一个文件最大为多少块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接索引磁盘块有10个，&lt;/li&gt;
&lt;li&gt;采用一级索引的磁盘块有100个，&lt;/li&gt;
&lt;li&gt;采用二级索引的磁盘块有100*100个，合计为10000个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;假设某文件系统的物理结构采用类UNIX的二级索引结构。主索引表有12项，前10项给出文件前10块的磁盘地址，第11项给出一级索引表的地址，第12项给出二级索引表的地址。一级和二级索引表的大小均为一个磁盘块，可存放100个磁盘地址。在找到主索引表之后，要访问文件的第1000块，还需要启动多少次磁盘？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1&lt;del&gt;10块采用的是直接索引，需要启动磁盘1次；11&lt;/del&gt;110块采用的是一级索引，需要启动磁盘2次；111~10110块采用的是二级索引，需要启动磁盘3次。第1000块访问时，找到主索引后，需要启动磁盘2次。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程从运行态转换为阻塞态的原因是（ A ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 需要的数据没有准备好&lt;/li&gt;
&lt;li&gt;B) 需要的设备不存在&lt;/li&gt;
&lt;li&gt;C) 分配给该进程的时间片用完&lt;/li&gt;
&lt;li&gt;D) 运算过程中栈溢出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一个运行着的进程打开了一个新的文件，则指向该文件数据结构的关键指针存放在（ D ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 文件目录中&lt;/li&gt;
&lt;li&gt;B) 文件句柄中&lt;/li&gt;
&lt;li&gt;C) 进程头文件中&lt;/li&gt;
&lt;li&gt;D) 进程控制块中&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;进程控制块中的进程资源清单，列出所拥有的除CPU外的资源记录，如拥有的I/O设备，打开的文件列表等。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在内存分区管理中，下列哪一种技术可以将零碎的空闲区集中为一个大的空闲区（ C ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 覆盖技术&lt;/li&gt;
&lt;li&gt;B) 交换技术&lt;/li&gt;
&lt;li&gt;C) 内存紧缩&lt;/li&gt;
&lt;li&gt;D) 动态重定位&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;解决碎片问题的办法&lt;/strong&gt;是在适当时刻进行碎片整理，通过移动内存中的程序，把所有空闲碎片合并成一个连续的大空闲区并且放在内存的一端，而把所有程序放在另一端，这技术称为“移动技术”或“紧缩技术”。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在内存分配方案中，下列哪一种方法使内存的利用率较高且管理简单（ B ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 段式分配&lt;/li&gt;
&lt;li&gt;B) 页式分配&lt;/li&gt;
&lt;li&gt;C) 可变分区分配&lt;/li&gt;
&lt;li&gt;D) 固定分区分配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;页式分配的优点有：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;① 由于它不要求作业或进程的程序段和数据在内存中连续存放，从而有效地解决了碎片问题。&lt;/li&gt;
&lt;li&gt;② 动态页式管理提供了内存和外存统一管理的虚存实现方式，使用户可以利用的存储空间大大增加。这既提高了主存的利用率，又有利于组织多道程序执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在一个虚拟存储系统中，决定虚拟存储空间最大容量的要素是（ A ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 计算机系统地址位宽&lt;/li&gt;
&lt;li&gt;B) 计算机系统数据字长&lt;/li&gt;
&lt;li&gt;C) 内存和磁盘容量之和&lt;/li&gt;
&lt;li&gt;D) 交换空间容量&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实现虚拟存储器需要系统有容量足够大的外存、系统有一定容量的外存，最主要的是，硬件提供实现虚-实地址映射的机制。在一个虚拟存储系统中，&lt;strong&gt;决定虚拟存储空间最大容量的要素是计算机系统地址位宽。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在虚拟页式存储管理系统中，若采用请求调页方式，当用户需要装入一个新的页面时，其调入的页面来自（磁盘文件区）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;UNIX操作系统中，对文件系统中空闲区的管理通常采用 &lt;strong&gt;成组链接法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于FAT32文件系统，它采用的是哪一种文件物理结构 &lt;strong&gt;链接结构&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于操作系统的结构，下列特性中，哪一个不是微内核结构的特点&lt;/strong&gt;（清晰的单向依赖和单向调用性）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;程序局部性原理分为空间局部性和时间局部性，空间局部性是指&lt;/strong&gt;（程序代码的顺序性）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;程序的并发执行产生了一些和程序顺序执行时不同的特性(并发程序与计算过程无法一一对应)。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在Pthread线程包关于条件变量的使用中，pthread_mutex_init()表示的是（创建一个互斥量）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;init是初始化变量，和git操作初始化一致，小技巧&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;程序的并发执行产生了一些和程序顺序执行时不同的特性，下列哪一个特性是正确的（并发程序在执行期间具有相互制约关系）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了保证计算机中临界资源的正确使用，进程在对临界资源访问前，必须首先调用下列哪一区的代码（ 进入区 ）。&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>【NCRE四级网络工程师】操作系统多选题</title><link>https://blog.debuginn.com/p/test-ncre-os-multiple-choice/</link><pubDate>Tue, 26 Feb 2019 16:13:53 +0800</pubDate><guid>https://blog.debuginn.com/p/test-ncre-os-multiple-choice/</guid><description>&lt;img src="https://webp.debuginn.com/202303261146594.jpg" alt="Featured image of post 【NCRE四级网络工程师】操作系统多选题" /&gt;&lt;p&gt;&lt;strong&gt;保存在进程控制块中的是&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进程标识符&lt;/li&gt;
&lt;li&gt;进程当前状态&lt;/li&gt;
&lt;li&gt;代码段指针&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;PCB的内容可以分为调度信息和现场信息两大部分。调度信息供进程调度时使用。调度信息供进程调度时使用，描述了进程当前所处的状态，包括进程名、进程号、存储信息、优先级、当前状态、资源清单、家族关系、消息队列指针、当前打开文件等。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;下列关于地址映射的叙述中，正确的是：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地址映射过程通常是有硬件完成的；&lt;/li&gt;
&lt;li&gt;地址映射是将虚拟地址转换为物理地址；&lt;/li&gt;
&lt;li&gt;页表项的一些内容是由硬件决定的；&lt;/li&gt;
&lt;li&gt;根据页表项的有效位确定所需访问的页面时都已经在内存。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列对于块表的叙述中，正确的是：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块表的另一个名称是TLB&lt;/li&gt;
&lt;li&gt;当切换进程时，要刷新快表；&lt;/li&gt;
&lt;li&gt;快表存放在高速缓存中；&lt;/li&gt;
&lt;li&gt;对块表的查找是按内容并行进行的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列各项中，那些事文件控制块中必须保存的信息？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件名&lt;/li&gt;
&lt;li&gt;文件大小&lt;/li&gt;
&lt;li&gt;文件创建时间&lt;/li&gt;
&lt;li&gt;磁盘块起始地址&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文件控制块FCB包括：文件名、用户名、文件号、文件地址、文件长度、文件类型、文件属性、共享技术、文件的建立日期、保存期限、最后修改日期、最后访问日期、口令、文件文件物理结构等等。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;设计文件系统时应尽量减少访问磁盘的次数，以提高文件系统的性能。下列各项措施中，哪些可以提高文件系统的性能？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块高速缓存&lt;/li&gt;
&lt;li&gt;磁盘驱动调度&lt;/li&gt;
&lt;li&gt;目录项分解法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;设备与CPU之间的数据传送和控制方式有多种，他们是：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;程序直接控制方式&lt;/li&gt;
&lt;li&gt;中断控制方式&lt;/li&gt;
&lt;li&gt;DMA方式&lt;/li&gt;
&lt;li&gt;通道控制方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;当前测到系统发生死锁之后，解除死锁的方法是？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;剥夺某些进程所占有的资源；&lt;/li&gt;
&lt;li&gt;撤销某些进程&lt;/li&gt;
&lt;li&gt;从新启动系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;测试与设置指令（Test&amp;amp;Set）是解决互斥访问临界区的硬件方法。下列关于该指令功能的叙述中，哪些是正确的&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 测试W的值，若W=1，则返回重新测试&lt;/li&gt;
&lt;li&gt;B) 测试W的值，若W=0，置位W=1，进入临界区&lt;/li&gt;
&lt;li&gt;C) 退出临界区时，复位W=0&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TS指令实现互斥的算法&lt;/strong&gt;是：测试锁变量的值，如为1，则重复执行本命令，不断重复测试变量的值；如为0，则立即将锁变量测值置为1，进入临界区；测试并设置指令是一条完整的指令，而在一条指令的执行中间是不会被中断的，保证了锁的测试和关闭的连续性；退出临界区时，将锁变量测试值设为0。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;下列关于虚拟存储器的叙述中，哪些是正确的？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在虚拟存储系统中，进程的部分程序装入后便可运行&lt;/li&gt;
&lt;li&gt;虚拟存储技术允许用户使用比物理内存更大的存储空间&lt;/li&gt;
&lt;li&gt;实现虚存必须有硬件支持&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;段页式存储管理为用户提供了一个二维地址空间，满足程序和信息的逻辑分段的要求。其基本思想是用页式方法来分配和管理内存空间，即把内存划分为若干大小相等的页面。内存是以页为基本单位分配给每个用户程序的，逻辑上相邻的页面在物理内存中不一定相邻。内存空间最小的单位是页而不是段。页式存储管理的特征是等分内存，有效的克服了碎片，提高了存储器的利用率。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;下列文件的物理结构中，哪些结构适合文件的随机存取&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连续结构&lt;/li&gt;
&lt;li&gt;索引结构&lt;/li&gt;
&lt;li&gt;多级索引结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在程序控制I/O方式中，若输出设备向处理机返回“准备就绪”信号，则表示（）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输出缓冲区已空&lt;/li&gt;
&lt;li&gt;可以向输出缓冲区写数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在设备分配中，预防死锁的策略包括（）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 建立SPOOLing系统&lt;/li&gt;
&lt;li&gt;B) 一次分配所有资源&lt;/li&gt;
&lt;li&gt;C) 有序分配资源&lt;/li&gt;
&lt;li&gt;D) 剥夺其他进程的资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在设计系统时确定资源分配算法，限制进程对资源的申请，从而保证不发生死锁。具体的做法是破坏产生死锁的四个必要条件之一：&lt;/p&gt;
&lt;p&gt;①破坏“互斥条件”：可以通过采用假脱机（SPOOLing）技术，允许若干个进程同时输出；&lt;/p&gt;
&lt;p&gt;②破坏“不可剥夺”条件：如果资源没有被等待进程占有，那么该进程必须等待，在其等待过程中，其资源也有可能被剥夺；&lt;/p&gt;
&lt;p&gt;③破坏“请求和保持”条件：可以采用静态分配资源策略，将满足进程条件的资源一次性分配给进程，也可以采用动态资源分配，即需要资源时才提出申请，系统在进行分配；&lt;/p&gt;
&lt;p&gt;④破坏“循环等待”条件：进程申请资源时，必须严格按照资源编号的顺序进行，否则系统不予分配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下列关于进程的叙述中，哪些是正确的（ BC ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 一个进程的状态变化必定会引起另一个进程的状态变化&lt;/li&gt;
&lt;li&gt;B) 信号量的初值一定大于等于零&lt;/li&gt;
&lt;li&gt;C) 进程是资源分配的基本单位，线程是处理机调度的基本单位&lt;/li&gt;
&lt;li&gt;D) 进程被挂起后，它的状态一定为阻塞态&lt;/li&gt;
&lt;li&gt;E) 操作系统中引入P、V操作主要是为了解决死锁问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在下列存储管理方案中，能支持多道程序设计的是（ ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 可变分区存储管理&lt;/li&gt;
&lt;li&gt;B) 页式存储管理&lt;/li&gt;
&lt;li&gt;C) 单一分区存储管理&lt;/li&gt;
&lt;li&gt;D) 固定分区存储管理&lt;/li&gt;
&lt;li&gt;E) 段页式存储管理&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;单一分区存储器管理，只充许一道程序独占内存空间，因此不能支持多道程序设计技术。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在计算机系统中，形成死锁的必要条件是（ ABCD ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 资源互斥使用&lt;/li&gt;
&lt;li&gt;B) 部分分配资源&lt;/li&gt;
&lt;li&gt;C) 已分配资源不可剥夺&lt;/li&gt;
&lt;li&gt;D) 资源申请形成环路&lt;/li&gt;
&lt;li&gt;E) 系统资源不足&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;当前Android操作系统应用广泛，它具有下列哪些特性（ BC ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 批处理&lt;/li&gt;
&lt;li&gt;B) 移动应用&lt;/li&gt;
&lt;li&gt;C) 支持网络&lt;/li&gt;
&lt;li&gt;D) 分布式&lt;/li&gt;
&lt;li&gt;E) 兼容性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列关于进程控制块的叙述中，哪些是正确的（ ABC ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 进程控制块的英文缩写是PCB&lt;/li&gt;
&lt;li&gt;B) 每个进程都拥有自己的进程控制块&lt;/li&gt;
&lt;li&gt;C) 进程控制块必须常驻内存&lt;/li&gt;
&lt;li&gt;D) 进程控制块必须指明其兄弟进程的进程号&lt;/li&gt;
&lt;li&gt;E) 进程创建完毕后，系统将其进程控制块插入等待队列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列关于信号量使用的叙述中，哪些是正确的（ ABD ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 信号量初始化后，只能实施P、V原语操作&lt;/li&gt;
&lt;li&gt;B) 在互斥信号量与同步信号量都使用的进程中，应先执行同步信号量的P操作&lt;/li&gt;
&lt;li&gt;C) 在互斥信号量与同步信号量都使用的进程中，应先执行同步信号量的V操作&lt;/li&gt;
&lt;li&gt;D) 信号量的初值不能小于0&lt;/li&gt;
&lt;li&gt;E) 互斥信号量的变化范围只能是正整数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列页面置换算法中，哪些算法需要用到访问位（引用位）（ CDE ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 先进先出算法FIFO&lt;/li&gt;
&lt;li&gt;B) 最佳置换算法OPT&lt;/li&gt;
&lt;li&gt;C) 最近最久未使用算法LRU&lt;/li&gt;
&lt;li&gt;D) 时钟算法CLOCK&lt;/li&gt;
&lt;li&gt;E) 最近未使用算法NRU&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;从简单页式存储管理方案发展到虚拟页式存储管理方案，页表项中通常需要增加的信息有：有效位，修改位，访问位。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;SPOOLing系统的主要组成部分是（ ABC ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 输入井和输出井&lt;/li&gt;
&lt;li&gt;B) 输入缓冲区和输出缓冲区&lt;/li&gt;
&lt;li&gt;C) 输入进程和输出进程&lt;/li&gt;
&lt;li&gt;D) 输入控制器和输出控制器&lt;/li&gt;
&lt;li&gt;E) 输入分配器和互斥分配器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列关于死锁的叙述中，哪些是正确的（ ABC ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 死锁产生的原因是进程推进顺序不当&lt;/li&gt;
&lt;li&gt;B) 环路是死锁产生的必要条件&lt;/li&gt;
&lt;li&gt;C) 采用银行家算法能有效地实现死锁避免&lt;/li&gt;
&lt;li&gt;D) 当系统中只有一个进程时也可能会产生死锁&lt;/li&gt;
&lt;li&gt;E) 系统出现死锁是因为进程调度不当&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进程（线程）调度的主要功能有（ ABCD ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 根据一定的调度算法选择被调度的进程（线程）&lt;/li&gt;
&lt;li&gt;B) 将CPU分配给选中的进程（线程）&lt;/li&gt;
&lt;li&gt;C) 将换下CPU的进程（线程）的现场信息保存到进程控制块中&lt;/li&gt;
&lt;li&gt;D) 将选中的进程（线程）的现场信息送入到相应寄存器中&lt;/li&gt;
&lt;li&gt;E) 将阻塞的进程（线程）唤醒并置为就绪状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列哪一种存储管理方案以一个进程为单位分配一组连续的内存单元（ AB ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 固定分区&lt;/li&gt;
&lt;li&gt;B) 可变分区&lt;/li&gt;
&lt;li&gt;C) 页式&lt;/li&gt;
&lt;li&gt;D) 段式&lt;/li&gt;
&lt;li&gt;E) 段页式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在虚拟页式存储方案中，当判断一个页面是否已调入内存时需要用到页表表项的哪些位（ AB ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 驻留位&lt;/li&gt;
&lt;li&gt;B) 中断位&lt;/li&gt;
&lt;li&gt;C) 修改位&lt;/li&gt;
&lt;li&gt;D) 访问位&lt;/li&gt;
&lt;li&gt;E) 保护位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下列哪些文件是按照文件的组织形式划分的文件类型（ BDE ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 系统文件&lt;/li&gt;
&lt;li&gt;B) 普通文件&lt;/li&gt;
&lt;li&gt;C) 临时文件&lt;/li&gt;
&lt;li&gt;D) 目录文件&lt;/li&gt;
&lt;li&gt;E) 特殊文件&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>【NCRE四级网络工程师】计算机网络单选题</title><link>https://blog.debuginn.com/p/test-ncre-network-single-topic/</link><pubDate>Tue, 26 Feb 2019 11:58:07 +0800</pubDate><guid>https://blog.debuginn.com/p/test-ncre-network-single-topic/</guid><description>&lt;img src="https://webp.debuginn.com/202303261146594.jpg" alt="Featured image of post 【NCRE四级网络工程师】计算机网络单选题" /&gt;&lt;p&gt;&lt;strong&gt;如果交换机的总带宽为14.4Gbps，它具有12个百兆的全双工端口，则其千兆的全双工端口数量最多为？&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全双工交换机的带宽计算方法是：端口数&lt;em&gt;端口速率&lt;/em&gt;2。&lt;/p&gt;
&lt;p&gt;12个百兆的全双工端口占用的带宽为12&lt;em&gt;2&lt;/em&gt;100=2400 Mbps，则剩余带宽
为14400-2400=12000Mbps。用于千兆的全双工端口，则12000/(2*1000)=6。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Ethernet网卡使用的物理地址的长度为（48位）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每个物理网络都有自己的MTU，MTU主要规定:一个帧最多能够携带的数据量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在客户机/服务器模型中，服务器响应客户机的请求有两种实现方案，它们是并发服务器方案和（重复服务器）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在DNS系统中，如果解析器收到一条“非授权的”服务器响应，那么解析器可以认为（该响应提供的信息可能不准确）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在POP3协议中，查询报文总数和长度可以使用的命令为（STAT）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于即时通信系统的描述中，正确的是（RFC2778规定了其通讯模型）。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;即时通信IM是一种基于Internet的通信服务，由以色列Mirabils公司最早提出，它提供近实时的信息交换和用户状态跟踪。文件
RFC2778，描述了即时通信系统的功能，正式为即时通信系统勾勒出了模型框架。IM系统一般采用两种通信模式，一种是客户机/服务器模式，另一种采用用户/用户模式，IM软件的文本消息大多使用客户机/服务器模式，而文件传送等大数据量业务使用的是用户/用户模式。在聊天通信中，聊天信息通过加密的方式传输。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于即时通信协议的描述中，正确的是（XMPP基于JABBER）。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前，很多即时通信系统都采用服务提供商自己设计开发的IM协议，如微软MSN采用自己的MSNP协议，AOL采用OSCAR协议，QQ采用自己的私有
协议。目前IM通用的协议主要由两个代表：基于SIP协议框架的SIMPLE协议簇及基于Jabber协议框架的XMPP协议簇。SIP协议称为会话发起协议，它是一种在IP网络上实现实时通信的应用层的控制（信令）协议。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;即时通信系统通常需要支持两种基本的服务，它们是：呈现服务和即时消息服务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于P2P文件共享系统的描述中，错误的是（A）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) BitTorrent不使用Tracker服务器&lt;/li&gt;
&lt;li&gt;B) Maze系统含有搜索引擎&lt;/li&gt;
&lt;li&gt;C) 早期的Napster是一个音乐分享系统&lt;/li&gt;
&lt;li&gt;D) eDonkey2000采用哈希信息进行文件定位&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;BitTorrent协议要求文件的发布者制作一个.torrent文件，被称为“种子”文件，种子文件中包含了Tracker服务器的相关信息和发布者共享的
文件的信息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;搜索引擎主要由4个关键部分组成，它们是搜索器、检索器、用户接口和（索引器）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用公钥加密和数字签名技术建立的安全服务基础设施称为（PKI）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于对称加密的描述中，正确的是（C）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 加密密钥与解密密钥不同&lt;/li&gt;
&lt;li&gt;B) 加密算法与密钥可以公开&lt;/li&gt;
&lt;li&gt;C) DES属于对称加密方法&lt;/li&gt;
&lt;li&gt;D) DSA属于对称加密方法&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对称加密技术使用相同的密钥对信息进行加密和解密。由于通信双方加密与解密使用同一个密钥，所以密钥在加密方和解密方之间的传递和分发必须通过安全通道进行。常用的对称加密算法有DES（数字加密算法）、IDEA算法、RC2算法、RC4算法与Skipjack算法等。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于MD5的描述中，错误的是（C）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 是一种单向散列函数&lt;/li&gt;
&lt;li&gt;B) 可用于判断数据完整性&lt;/li&gt;
&lt;li&gt;C) 属于对称加密方法&lt;/li&gt;
&lt;li&gt;D) 不能从散列值计算出原始数据&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;散列函数MD5属于一种认证函数，不属于对称加密方法。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于P2P文件共享的描述中，正确的是（理论基础是六度分割）。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;**P2P文件共享的基础是“六度分割”理论。**一般认为P2P文件共享起源于Napster，采用集中式结构，利用
点对点下载过程下载软件，随后另一种P2P文件共享网络Gnutella出现，采用分布式网络共享。BitTorrent即比特洪流，种子文件的扩展名为.torrent。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在网络管理服务中，定义管理对象结构的是（管理信息库（MIB））。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;管理信息库（MIB）是TCP/IP网络管理协议标准框架的内容之一&lt;/strong&gt;，MIB定义了受管设备必须保存的数据项、允许对每个数据
项进行的操作及其含义，即管理系统可访问的受管设备的控制和状态信息等数据变量都保存在MIB中。所以在网络管理服务中，定义管理对象结构的是MIB。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于CMIP协议的描述中，正确的是（）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 由IETF制定&lt;/li&gt;
&lt;li&gt;B) 针对TCP/IP环境&lt;/li&gt;
&lt;li&gt;C) 是网络管理的事实标准&lt;/li&gt;
&lt;li&gt;D) 采用委托监控机制&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;国际标准化组织（ISO）最先在1979年对网络管理通信进行标准化工作，主要针对OSI（开放系统互联）模型而设计。ISO的成果是CMIS和CMIP。
CMIP提供管理信息传输服务的应用层协议，而CMIS支持管理进程和管理代理之间的通信要求，二者规定了OSI系统的网络管理标准。在网络管理过程中，CMIP不是通过轮询而是通过事件报告进行工作的。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;瓦特斯利用电子邮件验证“小世界假设”理论时，邮件平均被转发多少次即可到达接收者手中（6）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IP数据报是IP协议单元使用的数据单元，它的格式可以分为报头区和数据区两大部分，其中数据区包括高层需要传输的数据，而报头区是为了正确传输高层数据而增加的控制信息。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在域名系统中，解析器收到一个“非权威性”的映射时，解析器可以认为&lt;/strong&gt;（响应服务器不是该域名的授权管理者）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果一个IP数据报的报头长度为256b，那么该数据报报头长度字段的值为（ 8 ）。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;头部的IHL域指明了该头部有多长（以32位字的长度为单位），所以256/32=8。&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>【NCRE四级网络工程师】计算机网络多选题</title><link>https://blog.debuginn.com/p/test-ncre-network-multiple-choice/</link><pubDate>Tue, 26 Feb 2019 11:45:27 +0800</pubDate><guid>https://blog.debuginn.com/p/test-ncre-network-multiple-choice/</guid><description>&lt;img src="https://webp.debuginn.com/202303261146594.jpg" alt="Featured image of post 【NCRE四级网络工程师】计算机网络多选题" /&gt;&lt;p&gt;&lt;strong&gt;在以下几种帧中，属于IEEE 802.11管理帧的是（BC）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 信标帧&lt;/p&gt;
&lt;p&gt;B) 探测帧&lt;/p&gt;
&lt;p&gt;C) 认证帧&lt;/p&gt;
&lt;p&gt;D) RTS帧&lt;/p&gt;
&lt;p&gt;E) ACK帧&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;属于IEEE 802.11管理帧的是探测帧和认证帧。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于千兆以太网物理层标准的描述中，错误的是（ABE）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 1000Base-T使用屏蔽双绞线&lt;/p&gt;
&lt;p&gt;B) 1000Base-CX使用非屏蔽双绞线&lt;/p&gt;
&lt;p&gt;C) 1000Base-LX使用单模光纤&lt;/p&gt;
&lt;p&gt;D) 1000Base-SX使用多模光纤&lt;/p&gt;
&lt;p&gt;E) 1000Base-W使用无线传输介质&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1000Base-T使用5类非屏蔽双绞线作为传输介质，双绞线长度可达100m。1000Base-CX使用的是屏蔽双绞线，双绞线长度可达25m。&lt;/p&gt;
&lt;p&gt;1000Base-LX使用波长为1300nm的单模光纤，光纤长度可达3000m。1000Base-SX使用波长为250nm的多模光纤，光纤长度可达300~500m。&lt;/p&gt;
&lt;p&gt;千兆类型以太网中没有1000Base-W类型。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于Internet接入方式的描述中，正确的是（ACD）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) HFC采用共享信道传输方式&lt;/p&gt;
&lt;p&gt;B) HFC发展与电话网普及密不可分&lt;/p&gt;
&lt;p&gt;C) ADSL需要进行调制解调&lt;/p&gt;
&lt;p&gt;D) ADSL
的上、下行速率可以不同&lt;/p&gt;
&lt;p&gt;E) HFC的上、下行速率必须相同&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Internet的接入方式主要有4种：通过电话线网接入、利用ADSL（非对称数字用户线路）接入、使用HFC（混合光纤同轴电缆网）接入、通过数据通信线路接入。&lt;/p&gt;
&lt;p&gt;HFC是在有线电视网的基础上发展起来的。与ADSL类似，HFC也采用非对称的数据传输速率。一般的上行速率在10Mbps左右，下行速率在10~40Mbps左右。HFC采用共享式的传输方式，所有通过Cable Modem的发送和接收使用同一个上行和下行信道。&lt;/p&gt;
&lt;p&gt;在ADSL用户端，用户需要使用一个ADSL终端（传统的调制解调器类似）来连接电话线路。通常ADSL可以提供最高1Mbps的上行速率和最高8Mbps的下行速率。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;为了解决慢收敛问题，RIP协议可以采用的策略为（BDE）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 加密传输
B) 水平分割
C) 用户认证
D) 毒性逆转
E) 触发刷新&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了解决慢收敛问题，RIP协议采用限制路径最大“距离”对策、水平分隔对策、保持对策、带触发刷新的毒性逆转对策。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在VoIP系统中，网关的主要功能包括（）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 号码查询
B) 信号调制
C) 路由寻址
D) 呼叫控制
E) 身份验证&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP电话网关位于公用交换电话网与IP网的接口处，它是电话用户使用IP电话的接入设备。它的主要功能为号码查询、建立通信连接、信号调制、信号压缩和解压、路由寻址。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;网络故障管理的功能主要包括（ABD）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 维护错误日志
B) 执行诊断检测
C) 生成用户账单
D) 跟踪错误
E) 发布安全事件报告&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网络故障管理包括检测故障、隔离故障和纠正故障3个方面，应包括典型的功能有维护并检测错误日志、接收错误检测报告并作出响应、跟踪与辨认错误、执行诊断测试、纠正错误。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于IPSec的描述中，正确的是（ABDE）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 在网络层提供安全服务
B) 主要协议包括AH和ESP
C) SPI使用64位连接标识符
D) AH头位于原IP数据报数据和IP头之间
E) SA定义的逻辑连接是单向的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于无线局域网的描述中，正确的是（）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 以无线电波作为传输介质
B) 协议标准是IEEE 802.11
C) 可采用直接序列扩频技术
D) 可作为有线局域网的补充&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无线局域网络利用微波、激光和红外线等无线电波作为传输介质，它是有线局域网的补充。按采用的传输技术可以分为3类：红外线局域网、扩频局域网（调频扩频或直接序列扩频）、窄带微波局域网，采用IEEE 802.11标准，支持基于漫游访问（Nomadic Access）和无线访问接入点（Wireless Access Point，AP）访问模式。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在以下P2P网络中，哪些采用了分布式结构化拓扑（）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pastry
Tapestry
Chord
CAN&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P2P中采用了分布式结构化拓扑有Pastry、Tapestry、Chord和CAN，Napster采用集中式结构。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于RSA算法的描述中，正确的是（）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 安全性建立在大素数分解的基础上
B) 常用于数字签名中
C) Rivest是发明人之一
E) 加密强度取决于密钥长度&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RSA公钥加密算法是1977年由罗纳德•李维斯特（Ron Rivest）、阿迪•萨莫尔（Adi Shamir）和伦纳德•阿德曼（Leonard
Adleman）一起提出的一种公钥密码，也是一种分组密码，也是一种既能用于数据加密和数字签名的算法，RSA的安全性依赖于大数分解，但是否等同于大数分解一直未能得到理论上的证明。RSA密钥长度随着保密级别提高，增加很快。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在Internet中，IP路由器应具备的主要功能包括（ ABD ）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 转发所收到的IP数据报
B) 为投递的IP数据报选择最佳路径
C) 分析IP数据报所携带的TCP内容
D) 维护路由表信息
E) 解析用户的域名&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;路由器是Internet种最重要的设备，它是网络与网络之间连接的桥梁。它主要的功能是：维护路由表信息（路由表决定着IP数据报发往何处），转发所收到的IP数据报，为投递的IP数据报选择最佳路径。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在IP数据报分片后，分片报头中的哪些字段与原数据报中的字段一定相同（ AC ）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A) 标识
B) 标志
C) 目的地址
D) 片偏移
E) 头部校验和&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提高域名系统解析效率的技术包括（ ADE ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 解析从本地域名服务器开始&lt;/li&gt;
&lt;li&gt;B) 减小资源记录的TTL值&lt;/li&gt;
&lt;li&gt;C) 拒绝使用”非权威性的”映射报告&lt;/li&gt;
&lt;li&gt;D) 本地主机上采用高速缓冲技术&lt;/li&gt;
&lt;li&gt;E) 域名服务器中使用高速缓冲技术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关于Ethernet帧结构的描述中，错误的是（ ABCD ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 前导码字段的长度是1字节&lt;/li&gt;
&lt;li&gt;B) 源地址字段使用的是IP地址&lt;/li&gt;
&lt;li&gt;C) 数据字段的最小长度为64字节&lt;/li&gt;
&lt;li&gt;D) 类型字段指出应用层协议类型&lt;/li&gt;
&lt;li&gt;E) 帧校验字段采用的是CRC校验&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关于VLAN技术的描述中，正确的是（ BCDE ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 可利用集线器组建VLAN&lt;/li&gt;
&lt;li&gt;B) 可基于广播组定义VLAN&lt;/li&gt;
&lt;li&gt;C) 可基于IP地址划分VLAN&lt;/li&gt;
&lt;li&gt;D) 可基于MAC地址划分VLAN&lt;/li&gt;
&lt;li&gt;E) 可基于交换机端口划分VLAN&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关于浏览器安全性的描述中，正确的是（ BD ）。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) 为了避免非安全软件的危害，可在浏览器中加载自己的证书&lt;/li&gt;
&lt;li&gt;B) 为了验证站点的真实性，可要求站点将它的证书传送过来&lt;/li&gt;
&lt;li&gt;C) 为了避免他人假冒自己，可将Internet分成几个区域&lt;/li&gt;
&lt;li&gt;D) 为了避免传送过程中第三方偷看，可使用SSL技术&lt;/li&gt;
&lt;li&gt;E) 为了防止传送过程中第三方篡改，可使用base64编码技术&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>数据仓库与数据挖掘 - 大数据在SEO网站优化领域的具体应用案例</title><link>https://blog.debuginn.com/p/data-mining-seo-in-website/</link><pubDate>Mon, 25 Feb 2019 21:51:49 +0800</pubDate><guid>https://blog.debuginn.com/p/data-mining-seo-in-website/</guid><description>&lt;p&gt;当今互联网行业中，大大小小几百万公司成立，相对而来的就是成百上千的官方网站的陆续建立，但是怎样使自己公司的官网在百度、谷歌、必应等大牌搜索引擎中被收录，同时提高公司官网访问数量及知名度？&lt;/p&gt;
&lt;p&gt;提高官网服务质量是第一位的，但是还需要对网站做SEO优化，但是怎样做SEO优化？&lt;/p&gt;
&lt;p&gt;大公司的SEO优化都是形成体系的，提高网站的被搜索权重，同时增加特色关键字，增加网站访问量、加大网站被搜索引擎的索引等等方式。&lt;/p&gt;
&lt;p&gt;作为一个计算机系的学生，对CSDN网站的需求量在浏览器中算是有着比较大的权重，接下来我借用CSDN网站的大数据网站分析，通过站长之家平台数据进行阐述个人对于大数据在SEO优化领域的具体应用。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303262153884.png"
loading="lazy"
alt="SEO优化"
&gt;&lt;/p&gt;
&lt;p&gt;上图是通过站长平台获取的对程序员网站CSDN的搜索排名，可以从图中得知CSDN占中文网站排名158、技术编程排名3、北京市排名85、百度权重6、Google权重7、反链数：4278，可以看出，此网站网络排名是较同等网站排名还是比较靠前的，同时由上图可以看到整站日均IP访问量达到100万响应之多，其数据承载量及SEO优化量还是比较大的。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303262154244.png"
loading="lazy"
alt="CSDN"
&gt;&lt;/p&gt;
&lt;p&gt;上图可以看到CSDN中网站百度流量统计达到了1万2900，同时网站关键词库有着6196的热门关键词，其中索引量达到了234万7195，可见网站索引量都是比较大额的。&lt;/p&gt;
&lt;p&gt;接下来我们看一下网站的收录及反链情况，见下图：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303262154409.png"
loading="lazy"
alt="收录及反链情况"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收录：百度占155万、谷歌占62万、360占140万、搜狗占341万；&lt;/li&gt;
&lt;li&gt;反链：百度占171万、谷歌占3万左右、360占416万。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303262155903.png"
loading="lazy"
alt="SEO标题"
&gt;&lt;/p&gt;
&lt;p&gt;上图可以看到CSDN网站的热门标题及优化建议，CSDN全程“CSDN-专业IT技术社区”，这一标题占据着网站整体SEO关键词搜索，其中站长之家提供了对搜索的优化建议：一般不超过80个字符，这样来说对搜索引擎来说是比较友好的，便于搜索引擎的搜录及索引。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303262156571.png"
loading="lazy"
alt="搜索引擎"
&gt;&lt;/p&gt;
&lt;p&gt;通过站长之家云平台可以看到，CSDN的百度权重走势、Alexa排名趋势、百度收录量变化趋势、整体来看，CSDN网站数据流量是稳步上升，众所周知，CSDN的文章来源至中国绝大部分程序员的技术经验及感受等文章，并呈现稳步增长趋势。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202303262156187.png"
loading="lazy"
alt="CSDN的文章"
&gt;&lt;/p&gt;
&lt;p&gt;CSDN网站的关键词由上图可以看到主要是技术类的关键字，例如“HTTP、a-b、或与非、程序、下载”等关键词，这些词索引量搜录量都在100000000之中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;根据CSDN网站得出SEO优化的途径，主要优化来源有以下几点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主动使网站让百度、Google、必应、360搜索引擎索引；&lt;/li&gt;
&lt;li&gt;用户数量提升、访问数量提升，基数做大，访问量才会稳定；&lt;/li&gt;
&lt;li&gt;关键词尽量不要和大牌网站关键词冲突，发掘新颖关键词；&lt;/li&gt;
&lt;li&gt;升级网站为HTTPS协议，使网站安全且不会被挂马；&lt;/li&gt;
&lt;li&gt;必要时购买百度、360权重，提升搜索时展示位置；&lt;/li&gt;
&lt;li&gt;购买信用产品，提升网站信用值，吸引浏览者访问；&lt;/li&gt;
&lt;li&gt;适当做网站分享，引流，提升访问量；&lt;/li&gt;
&lt;li&gt;搜索体验及用户体验优化。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>计算机网络 网络技术基础</title><link>https://blog.debuginn.com/p/natwork-notes/</link><pubDate>Sat, 02 Dec 2017 23:09:19 +0800</pubDate><guid>https://blog.debuginn.com/p/natwork-notes/</guid><description>&lt;h2 id="计算机网络技术的形成与发展"&gt;&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e6%8a%80%e6%9c%af%e7%9a%84%e5%bd%a2%e6%88%90%e4%b8%8e%e5%8f%91%e5%b1%95" class="header-anchor"&gt;&lt;/a&gt;计算机网络技术的形成与发展
&lt;/h2&gt;&lt;h3 id="主要知识点记录"&gt;&lt;a href="#%e4%b8%bb%e8%a6%81%e7%9f%a5%e8%af%86%e7%82%b9%e8%ae%b0%e5%bd%95" class="header-anchor"&gt;&lt;/a&gt;主要知识点记录
&lt;/h3&gt;&lt;p&gt;“三网融合” ：计算机网络、电信网与电视网之间的融合。&lt;/p&gt;
&lt;h3 id="unix操作系统"&gt;&lt;a href="#unix%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f" class="header-anchor"&gt;&lt;/a&gt;UNIX操作系统
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;集中式、分时、多用户的系统架构&lt;/li&gt;
&lt;li&gt;制订了基于Unix的易移植操作系统环境（POSIX）标准&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="linux操作系统"&gt;&lt;a href="#linux%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f" class="header-anchor"&gt;&lt;/a&gt;Linux操作系统
&lt;/h3&gt;&lt;p&gt;常见的发行版本：Rad Hat、Mandrake、Slackware、SUSE、TurbpLinux、Debian、Caldera、Ubuntu，国内的有蓝点、红旗等。&lt;/p&gt;
&lt;h2 id="计算机网络的基本概念"&gt;&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5" class="header-anchor"&gt;&lt;/a&gt;计算机网络的基本概念
&lt;/h2&gt;&lt;h3 id="计算机网络的定义"&gt;&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e7%9a%84%e5%ae%9a%e4%b9%89" class="header-anchor"&gt;&lt;/a&gt;计算机网络的定义
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;计算机网络&lt;/strong&gt; 用相互共享资源的方式互联起来的自治计算机系统的集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特征：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主要目的是资源的共享&lt;/li&gt;
&lt;li&gt;互联的计算机是分布在不同地理位置的多台独立的“自治计算机”&lt;/li&gt;
&lt;li&gt;联网计算机之间的通讯需要遵循共同的网络协议。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;常见计算机名词区分：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;术语&lt;/th&gt;
&lt;th&gt;英文名称&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;计算机网络&lt;/td&gt;
&lt;td&gt;computer network&lt;/td&gt;
&lt;td&gt;用相互共享资源的方式互联起来的自治计算机系统的集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络互联&lt;/td&gt;
&lt;td&gt;internet&lt;/td&gt;
&lt;td&gt;将多个计算机网络互联成大型网络系统的技术&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;互联网&lt;/td&gt;
&lt;td&gt;Internet&lt;/td&gt;
&lt;td&gt;指目前广泛应用、覆盖了全世界的大型网络系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内部的专用网络系统&lt;/td&gt;
&lt;td&gt;Intranet&lt;/td&gt;
&lt;td&gt;将分布在不同地理位置的部门局域网连接起来的企业内部专用网络。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="计算机网络的分类"&gt;&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e7%9a%84%e5%88%86%e7%b1%bb" class="header-anchor"&gt;&lt;/a&gt;计算机网络的分类
&lt;/h3&gt;&lt;p&gt;按照覆盖的地理范围划分为：广域网、城域网、局域网、个人区域网。&lt;/p&gt;
&lt;h4 id="广域网技术"&gt;&lt;a href="#%e5%b9%bf%e5%9f%9f%e7%bd%91%e6%8a%80%e6%9c%af" class="header-anchor"&gt;&lt;/a&gt;广域网技术
&lt;/h4&gt;&lt;p&gt;WAN又称为远程网，覆盖的地理位置从几十千米到几千千米。&lt;/p&gt;
&lt;h4 id="城域网技术"&gt;&lt;a href="#%e5%9f%8e%e5%9f%9f%e7%bd%91%e6%8a%80%e6%9c%af" class="header-anchor"&gt;&lt;/a&gt;城域网技术
&lt;/h4&gt;&lt;p&gt;IEEE802协会对其的定义与特征表述：&lt;/p&gt;
&lt;p&gt;以光纤为传输介质，能够提供45-150Mbps的高传输速率，支持数据、语音和视频综合业务的数据传输，可以覆盖50~100km的城市范围，实现高速的数据传输。&lt;/p&gt;
&lt;h4 id="局域网技术"&gt;&lt;a href="#%e5%b1%80%e5%9f%9f%e7%bd%91%e6%8a%80%e6%9c%af" class="header-anchor"&gt;&lt;/a&gt;局域网技术
&lt;/h4&gt;&lt;p&gt;局域网用于将有限范围的各种计算机，终端与外部设备互联成网。&lt;/p&gt;
&lt;p&gt;特征如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;局域网覆盖有限的地理范围&lt;/li&gt;
&lt;li&gt;提供高传输速率（10Mbps~100Gbps）、低误码率的高质量数据传输环境&lt;/li&gt;
&lt;li&gt;一般为一个单位所有，易于建立、维护与扩展&lt;/li&gt;
&lt;li&gt;决定局域网的三个因素：
&lt;ul&gt;
&lt;li&gt;拓扑&lt;/li&gt;
&lt;li&gt;传输介质&lt;/li&gt;
&lt;li&gt;介质访问控制方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从介质访问控制方法的角度，分为以下两方面：
&lt;ul&gt;
&lt;li&gt;共享介质式局域网&lt;/li&gt;
&lt;li&gt;交换式局域网&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="个人局域网技术"&gt;&lt;a href="#%e4%b8%aa%e4%ba%ba%e5%b1%80%e5%9f%9f%e7%bd%91%e6%8a%80%e6%9c%af" class="header-anchor"&gt;&lt;/a&gt;个人局域网技术
&lt;/h4&gt;&lt;p&gt;自身附近范围的个人操作空间。&lt;/p&gt;
&lt;p&gt;无线个人局域网络 用无线通信技术实现联网设备之间的通信。&lt;/p&gt;
&lt;h3 id="计算机网络的拓扑结构"&gt;&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e7%9a%84%e6%8b%93%e6%89%91%e7%bb%93%e6%9e%84" class="header-anchor"&gt;&lt;/a&gt;计算机网络的拓扑结构
&lt;/h3&gt;&lt;p&gt;网络拓朴学知识补充： 拓扑学时间实体抽象成于其大小、形状无关的“点”，将连接实体的路线抽象成“线”。 计算机网络拓扑是通过网中节点与通信线路之间的几何关系表示的网络结构。 计算机网络拓扑是指通信子网的网络拓朴。&lt;/p&gt;
&lt;p&gt;基本的网络拓朴有五种：星形、环形、总线型、树形与网形。&lt;/p&gt;
&lt;h4 id="星形拓扑"&gt;&lt;a href="#%e6%98%9f%e5%bd%a2%e6%8b%93%e6%89%91" class="header-anchor"&gt;&lt;/a&gt;星形拓扑
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;通过点-点通信线路与中心节点连接。&lt;/li&gt;
&lt;li&gt;任何两个节点之间的通信都要通过中心节点。&lt;/li&gt;
&lt;li&gt;结构简单，易于实现，便于管理。&lt;/li&gt;
&lt;li&gt;中心节点是全网性能与可靠性的预测，中心节点瘫痪会造成全网瘫痪。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="环形拓扑"&gt;&lt;a href="#%e7%8e%af%e5%bd%a2%e6%8b%93%e6%89%91" class="header-anchor"&gt;&lt;/a&gt;环形拓扑
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;通过点-点通信线路连接成闭合的环路。&lt;/li&gt;
&lt;li&gt;数据沿一个方向传送。&lt;/li&gt;
&lt;li&gt;结构简单、传输延时稳定。&lt;/li&gt;
&lt;li&gt;每个节点与连接节点之间的通信线路都会成为网络可靠性的瓶颈。&lt;/li&gt;
&lt;li&gt;方便接点的加入和撤出、控制节点数据传输顺序。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="总线型拓扑"&gt;&lt;a href="#%e6%80%bb%e7%ba%bf%e5%9e%8b%e6%8b%93%e6%89%91" class="header-anchor"&gt;&lt;/a&gt;总线型拓扑
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;所有的节点连接到一条作为公共传输介质的纵向，以广播的方式发送和接受数据。&lt;/li&gt;
&lt;li&gt;但一个节点利用总线发送数据时，其他节点只能接受数据。&lt;/li&gt;
&lt;li&gt;两个或两个以上的节点同时发送数据时，就会出现冲突，照成传输失败。&lt;/li&gt;
&lt;li&gt;结构简单，但是得解决多节点访问总线的介质访问控制问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="树形拓扑"&gt;&lt;a href="#%e6%a0%91%e5%bd%a2%e6%8b%93%e6%89%91" class="header-anchor"&gt;&lt;/a&gt;树形拓扑
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;按层次进行连接，信息交换主要在上下节点之间进行，相邻及同层节点之间通常不进行数据交换，或则交换量较小。&lt;/li&gt;
&lt;li&gt;树形拓扑可以看成是星形拓扑的一种扩展，树形拓扑网络适用于汇集信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="网状拓扑"&gt;&lt;a href="#%e7%bd%91%e7%8a%b6%e6%8b%93%e6%89%91" class="header-anchor"&gt;&lt;/a&gt;网状拓扑
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;节点之间的连接是任意的，没有规律。&lt;/li&gt;
&lt;li&gt;系统可靠性高，广域网一般都采用网状拓扑。&lt;/li&gt;
&lt;li&gt;必须采用路由算法、流量控制与拥塞控制方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="描述计算机网络传输性能的参数"&gt;&lt;a href="#%e6%8f%8f%e8%bf%b0%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e4%bc%a0%e8%be%93%e6%80%a7%e8%83%bd%e7%9a%84%e5%8f%82%e6%95%b0" class="header-anchor"&gt;&lt;/a&gt;描述计算机网络传输性能的参数
&lt;/h3&gt;&lt;h4 id="数据传输率"&gt;&lt;a href="#%e6%95%b0%e6%8d%ae%e4%bc%a0%e8%be%93%e7%8e%87" class="header-anchor"&gt;&lt;/a&gt;数据传输率
&lt;/h4&gt;&lt;p&gt;数据传输率是每秒钟传输构成数据的二进制比特数。&lt;/p&gt;
&lt;p&gt;单位：比特/秒（bit/second）简称：bps&lt;/p&gt;
&lt;p&gt;数据传输率公式：
S=1/T（bps）
T:发送1比特所需的时间。
常见速率换算公式：&lt;/p&gt;
&lt;h4 id="奈奎斯特准则与香农定律"&gt;&lt;a href="#%e5%a5%88%e5%a5%8e%e6%96%af%e7%89%b9%e5%87%86%e5%88%99%e4%b8%8e%e9%a6%99%e5%86%9c%e5%ae%9a%e5%be%8b" class="header-anchor"&gt;&lt;/a&gt;奈奎斯特准则与香农定律
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;奈奎斯特准则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义：具有理想低通矩形特性的信道在无噪声情况下的最高速率与带宽关系的公式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;奈奎斯特准则指出：如果间隔为π/w（w=2πf），通过理想通信信道传输窄脉冲信号，则前后码元之间不会产生相互串扰。
对于二进制数据信号的最大数据传输速率Rmax与通信信道带宽B（B=f，单位Hz）的关系可以转化为：
$$
R_{\max }=2f\left( bps\right)
$$
此准则描述了有限带宽、五噪声信道的最大数据传输速率与信道带宽之间的关系。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;香农定律&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义：在有随机热噪声信道上传输数据信号时，数据传输速率Rmax与信道带宽B，信号与噪声功率比S/N关系。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;R max = 13 log 2 1 + S / N&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此定律描述了有限带宽、有随机热噪声的最大传输速率与信道带宽、信号噪声功率比之间的关系。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Sublime Text 崇高的文本编辑器</title><link>https://blog.debuginn.com/p/sublime-text/</link><pubDate>Sun, 12 Nov 2017 20:41:15 +0800</pubDate><guid>https://blog.debuginn.com/p/sublime-text/</guid><description>&lt;img src="https://webp.debuginn.com/202302202044967.jpg" alt="Featured image of post Sublime Text 崇高的文本编辑器" /&gt;&lt;h2 id="安装-sublime-text3-软件"&gt;&lt;a href="#%e5%ae%89%e8%a3%85-sublime-text3-%e8%bd%af%e4%bb%b6" class="header-anchor"&gt;&lt;/a&gt;安装 Sublime text3 软件
&lt;/h2&gt;&lt;p&gt;官方网址：&lt;a class="link" href="https://www.sublimetext.com/3" target="_blank" rel="noopener"
&gt;https://www.sublimetext.com/3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择Windows - also available as a portable version一项，点击下载安装。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202046837.png"
loading="lazy"
alt="sublime下载界面"
&gt;&lt;/p&gt;
&lt;h2 id="安装-packagecontrol-插件"&gt;&lt;a href="#%e5%ae%89%e8%a3%85-packagecontrol-%e6%8f%92%e4%bb%b6" class="header-anchor"&gt;&lt;/a&gt;安装 packagecontrol 插件
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202047443.jpg"
loading="lazy"
alt="https://packagecontrol.io"
&gt;&lt;/p&gt;
&lt;p&gt;官方网址：&lt;a class="link" href="https://packagecontrol.io/" target="_blank" rel="noopener"
&gt;https://packagecontrol.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择 Installation 项&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202048556.jpg"
loading="lazy"
alt="复制代码界面"
&gt;&lt;/p&gt;
&lt;p&gt;选择 SUBLIME TEXT3 代码进行复制&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202049660.jpg"
loading="lazy"
alt="sulime 输入框界面"
&gt;&lt;/p&gt;
&lt;p&gt;打开 sublime text3 软件，选择 &lt;code&gt;View-&amp;gt;Show Console&lt;/code&gt; 选项（或者按 &lt;code&gt;Ctrl+~组合键&lt;/code&gt;），调出命令行，将代码粘贴至命令行，回车，进行安装 packagecontrol 插件；&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202051068.jpg"
loading="lazy"
alt="Preferences"
&gt;&lt;/p&gt;
&lt;p&gt;安装好之后在菜单栏Preferences栏目中会有packagecontrol选项，即安装成功。&lt;/p&gt;
&lt;h2 id="安装汉化插件-chineselocalization"&gt;&lt;a href="#%e5%ae%89%e8%a3%85%e6%b1%89%e5%8c%96%e6%8f%92%e4%bb%b6-chineselocalization" class="header-anchor"&gt;&lt;/a&gt;安装汉化插件 ChineseLocalization
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202054550.jpg"
loading="lazy"
alt="Preferences"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202055358.jpg"
loading="lazy"
alt="ChineseLocalization"
&gt;&lt;/p&gt;
&lt;p&gt;安装 sublime 汉化插件 ChineseLocalization&lt;/p&gt;
&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202055437.jpg"
loading="lazy"
alt="install"
&gt;&lt;/p&gt;
&lt;p&gt;在弹出的框中，由于网速原因，请耐心等待……
输入插件名称ChineseLocalization，回车&lt;code&gt;[enter]&lt;/code&gt;进行安装&lt;/p&gt;
&lt;h2 id="各类插件安装推荐"&gt;&lt;a href="#%e5%90%84%e7%b1%bb%e6%8f%92%e4%bb%b6%e5%ae%89%e8%a3%85%e6%8e%a8%e8%8d%90" class="header-anchor"&gt;&lt;/a&gt;各类插件安装推荐
&lt;/h2&gt;&lt;p&gt;其他插件均和 ChineseLocalization 插件安装过程一样，在此不再重复操作，只推荐几款插件。&lt;/p&gt;
&lt;h3 id="必备的插件安装-初学者推荐安装"&gt;&lt;a href="#%e5%bf%85%e5%a4%87%e7%9a%84%e6%8f%92%e4%bb%b6%e5%ae%89%e8%a3%85-%e5%88%9d%e5%ad%a6%e8%80%85%e6%8e%a8%e8%8d%90%e5%ae%89%e8%a3%85" class="header-anchor"&gt;&lt;/a&gt;必备的插件安装 (初学者推荐安装)
&lt;/h3&gt;&lt;h4 id="emmet"&gt;&lt;a href="#emmet" class="header-anchor"&gt;&lt;/a&gt;Emmet
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202057493.jpg"
loading="lazy"
alt="emmet"
&gt;&lt;/p&gt;
&lt;p&gt;Emmet 的前身是大名鼎鼎的 Zen coding，如果你从事Web前端开发的话，对该插件一定不会陌生。它使用仿 CSS 选择器的语法来生成代码，大大提高了 HTML/CSS 代码编写的速度。&lt;/p&gt;
&lt;h4 id="pyside"&gt;&lt;a href="#pyside" class="header-anchor"&gt;&lt;/a&gt;PySide
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202058785.jpg"
loading="lazy"
alt="pyside"
&gt;&lt;/p&gt;
&lt;p&gt;PySide 是跨平台的应用程序框架 Qt 的 Python 绑定版本。&lt;/p&gt;
&lt;h4 id="autofilename"&gt;&lt;a href="#autofilename" class="header-anchor"&gt;&lt;/a&gt;AutoFileName
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202059582.jpg"
loading="lazy"
alt="AutoFileName"
&gt;&lt;/p&gt;
&lt;p&gt;一款在 Sublime Text 中可以自动补全文件路径及名称的插件。&lt;/p&gt;
&lt;h4 id="docblockr"&gt;&lt;a href="#docblockr" class="header-anchor"&gt;&lt;/a&gt;DocBlockr
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202100975.jpg"
loading="lazy"
alt="DocBlockr"
&gt;&lt;/p&gt;
&lt;p&gt;DocBlockr 是一款 Sublime Text 2 &amp;amp; 3 都可以使用的代码快注释插件。支持的语言有：JavaScript (including ES6), PHP, ActionScript, Haxe,CoffeeScript, TypeScript, Java, Groovy, Objective C, C, C++ and Rust.&lt;/p&gt;
&lt;h4 id="brackethighlighter"&gt;&lt;a href="#brackethighlighter" class="header-anchor"&gt;&lt;/a&gt;BracketHighlighter
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202101837.jpg"
loading="lazy"
alt="BracketHighlighter"
&gt;&lt;/p&gt;
&lt;p&gt;BracketHighlighter 是一款 Sublime 下匹配标签高亮的小插件，可以把匹配到的如 {}、()、”、””等对应的符号或者标签高亮显示。&lt;/p&gt;
&lt;h4 id="browser-refresh"&gt;&lt;a href="#browser-refresh" class="header-anchor"&gt;&lt;/a&gt;Browser Refresh
&lt;/h4&gt;&lt;p&gt;通过一个快捷键可以实现保存文件，切换到浏览器并自动刷新浏览器来查看更改结果。&lt;/p&gt;
&lt;h4 id="converttoutf8"&gt;&lt;a href="#converttoutf8" class="header-anchor"&gt;&lt;/a&gt;ConvertToUTF8
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202102109.jpg"
loading="lazy"
alt="ConvertToUTF8"
&gt;&lt;/p&gt;
&lt;p&gt;解决文档保存编码问题。&lt;/p&gt;
&lt;h4 id="colorpicker"&gt;&lt;a href="#colorpicker" class="header-anchor"&gt;&lt;/a&gt;ColorPicker
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202102561.jpg"
loading="lazy"
alt="ColorPicker"
&gt;&lt;/p&gt;
&lt;p&gt;一个多平台的颜色选择器插件。默认情况下，十六进制颜色代码使用大写字母插入。&lt;/p&gt;
&lt;h3 id="进阶的程序猿推荐插件安装"&gt;&lt;a href="#%e8%bf%9b%e9%98%b6%e7%9a%84%e7%a8%8b%e5%ba%8f%e7%8c%bf%e6%8e%a8%e8%8d%90%e6%8f%92%e4%bb%b6%e5%ae%89%e8%a3%85" class="header-anchor"&gt;&lt;/a&gt;进阶的程序猿推荐插件安装
&lt;/h3&gt;&lt;h4 id="a-file-icon"&gt;&lt;a href="#a-file-icon" class="header-anchor"&gt;&lt;/a&gt;a file icon
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202103090.jpg"
loading="lazy"
alt="a file icon"
&gt;&lt;/p&gt;
&lt;p&gt;美化插件。可以更清楚了解每个文件的类型，一目了然。&lt;/p&gt;
&lt;h4 id="git"&gt;&lt;a href="#git" class="header-anchor"&gt;&lt;/a&gt;git
&lt;/h4&gt;&lt;p&gt;&lt;img src="https://webp.debuginn.com/202302202104673.jpg"
loading="lazy"
alt="git"
&gt;&lt;/p&gt;
&lt;p&gt;版本控制仓库，推荐学习使用。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;关注微信公众号，第一时间获取最新内容，让我们一起变得更强！&lt;/p&gt;&lt;p&gt;&lt;img src="https://static.debuginn.com/20241111FZS0zY.png" alt="wechat" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Debug客栈：&lt;/strong&gt;&lt;a href="https://blog.debuginn.com/subscribe"&gt;订阅本站&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/archives"&gt;文章归档&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/project"&gt;我的项目&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/links"&gt;友情链接&lt;/a&gt;· &lt;a href="https://blog.debuginn.com/use"&gt;我的使用&lt;/a&gt;· &lt;a href="https://photo.debuginn.com"&gt;摄影展集&lt;/a&gt;· &lt;a href="https://debuginn.com"&gt;我的主页&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>